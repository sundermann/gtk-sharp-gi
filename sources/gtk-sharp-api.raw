<?xml version="1.0" encoding="UTF-8"?>
<api parser_version="3">
  <namespace name="Gtk" library="gtk-3">
    <enum name="Align" cname="GtkAlign" type="enum" gtype="gtk_align_get_type">
      <member cname="GTK_ALIGN_FILL" name="Fill" value="0"/>
      <member cname="GTK_ALIGN_START" name="Start" value="1"/>
      <member cname="GTK_ALIGN_END" name="End" value="2"/>
      <member cname="GTK_ALIGN_CENTER" name="Center" value="3"/>
    </enum>
    <enum name="ArrowPlacement" cname="GtkArrowPlacement" type="enum" gtype="gtk_arrow_placement_get_type">
      <member cname="GTK_ARROWS_BOTH" name="Both" value="0"/>
      <member cname="GTK_ARROWS_START" name="Start" value="1"/>
      <member cname="GTK_ARROWS_END" name="End" value="2"/>
    </enum>
    <enum name="ArrowType" cname="GtkArrowType" type="enum" gtype="gtk_arrow_type_get_type">
      <member cname="GTK_ARROW_UP" name="Up" value="0"/>
      <member cname="GTK_ARROW_DOWN" name="Down" value="1"/>
      <member cname="GTK_ARROW_LEFT" name="Left" value="2"/>
      <member cname="GTK_ARROW_RIGHT" name="Right" value="3"/>
      <member cname="GTK_ARROW_NONE" name="None" value="4"/>
    </enum>
    <enum name="AssistantPageType" cname="GtkAssistantPageType" type="enum" gtype="gtk_assistant_page_type_get_type">
      <member cname="GTK_ASSISTANT_PAGE_CONTENT" name="Content" value="0"/>
      <member cname="GTK_ASSISTANT_PAGE_INTRO" name="Intro" value="1"/>
      <member cname="GTK_ASSISTANT_PAGE_CONFIRM" name="Confirm" value="2"/>
      <member cname="GTK_ASSISTANT_PAGE_SUMMARY" name="Summary" value="3"/>
      <member cname="GTK_ASSISTANT_PAGE_PROGRESS" name="Progress" value="4"/>
      <member cname="GTK_ASSISTANT_PAGE_CUSTOM" name="Custom" value="5"/>
    </enum>
    <enum name="BorderStyle" cname="GtkBorderStyle" type="enum" gtype="gtk_border_style_get_type">
      <member cname="GTK_BORDER_STYLE_NONE" name="None" value="0"/>
      <member cname="GTK_BORDER_STYLE_SOLID" name="Solid" value="1"/>
      <member cname="GTK_BORDER_STYLE_INSET" name="Inset" value="2"/>
      <member cname="GTK_BORDER_STYLE_OUTSET" name="Outset" value="3"/>
      <member cname="GTK_BORDER_STYLE_HIDDEN" name="Hidden" value="4"/>
      <member cname="GTK_BORDER_STYLE_DOTTED" name="Dotted" value="5"/>
      <member cname="GTK_BORDER_STYLE_DASHED" name="Dashed" value="6"/>
      <member cname="GTK_BORDER_STYLE_DOUBLE" name="Double" value="7"/>
      <member cname="GTK_BORDER_STYLE_GROOVE" name="Groove" value="8"/>
      <member cname="GTK_BORDER_STYLE_RIDGE" name="Ridge" value="9"/>
    </enum>
    <enum name="BuilderError" cname="GtkBuilderError" type="enum" gtype="gtk_builder_error_get_type">
      <member cname="GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION" name="InvalidTypeFunction" value="0"/>
      <member cname="GTK_BUILDER_ERROR_UNHANDLED_TAG" name="UnhandledTag" value="1"/>
      <member cname="GTK_BUILDER_ERROR_MISSING_ATTRIBUTE" name="MissingAttribute" value="2"/>
      <member cname="GTK_BUILDER_ERROR_INVALID_ATTRIBUTE" name="InvalidAttribute" value="3"/>
      <member cname="GTK_BUILDER_ERROR_INVALID_TAG" name="InvalidTag" value="4"/>
      <member cname="GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE" name="MissingPropertyValue" value="5"/>
      <member cname="GTK_BUILDER_ERROR_INVALID_VALUE" name="InvalidValue" value="6"/>
      <member cname="GTK_BUILDER_ERROR_VERSION_MISMATCH" name="VersionMismatch" value="7"/>
      <member cname="GTK_BUILDER_ERROR_DUPLICATE_ID" name="DuplicateId" value="8"/>
    </enum>
    <enum name="ButtonBoxStyle" cname="GtkButtonBoxStyle" type="enum" gtype="gtk_button_box_style_get_type">
      <member cname="GTK_BUTTONBOX_SPREAD" name="Spread" value="1"/>
      <member cname="GTK_BUTTONBOX_EDGE" name="Edge" value="2"/>
      <member cname="GTK_BUTTONBOX_START" name="Start" value="3"/>
      <member cname="GTK_BUTTONBOX_END" name="End" value="4"/>
      <member cname="GTK_BUTTONBOX_CENTER" name="Center" value="5"/>
    </enum>
    <enum name="ButtonsType" cname="GtkButtonsType" type="enum" gtype="gtk_buttons_type_get_type">
      <member cname="GTK_BUTTONS_NONE" name="None" value="0"/>
      <member cname="GTK_BUTTONS_OK" name="Ok" value="1"/>
      <member cname="GTK_BUTTONS_CLOSE" name="Close" value="2"/>
      <member cname="GTK_BUTTONS_CANCEL" name="Cancel" value="3"/>
      <member cname="GTK_BUTTONS_YES_NO" name="YesNo" value="4"/>
      <member cname="GTK_BUTTONS_OK_CANCEL" name="OkCancel" value="5"/>
    </enum>
    <enum name="CellRendererAccelMode" cname="GtkCellRendererAccelMode" type="enum" gtype="gtk_cell_renderer_accel_mode_get_type">
      <member cname="GTK_CELL_RENDERER_ACCEL_MODE_GTK" name="Gtk" value="0"/>
      <member cname="GTK_CELL_RENDERER_ACCEL_MODE_OTHER" name="Other" value="1"/>
    </enum>
    <enum name="CellRendererMode" cname="GtkCellRendererMode" type="enum" gtype="gtk_cell_renderer_mode_get_type">
      <member cname="GTK_CELL_RENDERER_MODE_INERT" name="Inert" value="0"/>
      <member cname="GTK_CELL_RENDERER_MODE_ACTIVATABLE" name="Activatable" value="1"/>
      <member cname="GTK_CELL_RENDERER_MODE_EDITABLE" name="Editable" value="2"/>
    </enum>
    <enum name="CornerType" cname="GtkCornerType" type="enum" gtype="gtk_corner_type_get_type">
      <member cname="GTK_CORNER_TOP_LEFT" name="TopLeft" value="0"/>
      <member cname="GTK_CORNER_BOTTOM_LEFT" name="BottomLeft" value="1"/>
      <member cname="GTK_CORNER_TOP_RIGHT" name="TopRight" value="2"/>
      <member cname="GTK_CORNER_BOTTOM_RIGHT" name="BottomRight" value="3"/>
    </enum>
    <enum name="CssProviderError" cname="GtkCssProviderError" type="enum" gtype="gtk_css_provider_error_get_type">
      <member cname="GTK_CSS_PROVIDER_ERROR_FAILED" name="Failed" value="0"/>
      <member cname="GTK_CSS_PROVIDER_ERROR_SYNTAX" name="Syntax" value="1"/>
      <member cname="GTK_CSS_PROVIDER_ERROR_IMPORT" name="Import" value="2"/>
      <member cname="GTK_CSS_PROVIDER_ERROR_NAME" name="Name" value="3"/>
      <member cname="GTK_CSS_PROVIDER_ERROR_DEPRECATED" name="Deprecated" value="4"/>
      <member cname="GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE" name="UnknownValue" value="5"/>
    </enum>
    <enum name="CssSectionType" cname="GtkCssSectionType" type="enum" gtype="gtk_css_section_type_get_type">
      <member cname="GTK_CSS_SECTION_DOCUMENT" name="Document" value="0"/>
      <member cname="GTK_CSS_SECTION_IMPORT" name="Import" value="1"/>
      <member cname="GTK_CSS_SECTION_COLOR_DEFINITION" name="ColorDefinition" value="2"/>
      <member cname="GTK_CSS_SECTION_BINDING_SET" name="BindingSet" value="3"/>
      <member cname="GTK_CSS_SECTION_RULESET" name="Ruleset" value="4"/>
      <member cname="GTK_CSS_SECTION_SELECTOR" name="Selector" value="5"/>
      <member cname="GTK_CSS_SECTION_DECLARATION" name="Declaration" value="6"/>
      <member cname="GTK_CSS_SECTION_VALUE" name="Value" value="7"/>
      <member cname="GTK_CSS_SECTION_KEYFRAMES" name="Keyframes" value="8"/>
    </enum>
    <enum name="DeleteType" cname="GtkDeleteType" type="enum" gtype="gtk_delete_type_get_type">
      <member cname="GTK_DELETE_CHARS" name="Chars" value="0"/>
      <member cname="GTK_DELETE_WORD_ENDS" name="WordEnds" value="1"/>
      <member cname="GTK_DELETE_WORDS" name="Words" value="2"/>
      <member cname="GTK_DELETE_DISPLAY_LINES" name="DisplayLines" value="3"/>
      <member cname="GTK_DELETE_DISPLAY_LINE_ENDS" name="DisplayLineEnds" value="4"/>
      <member cname="GTK_DELETE_PARAGRAPH_ENDS" name="ParagraphEnds" value="5"/>
      <member cname="GTK_DELETE_PARAGRAPHS" name="Paragraphs" value="6"/>
      <member cname="GTK_DELETE_WHITESPACE" name="Whitespace" value="7"/>
    </enum>
    <enum name="DirectionType" cname="GtkDirectionType" type="enum" gtype="gtk_direction_type_get_type">
      <member cname="GTK_DIR_TAB_FORWARD" name="TabForward" value="0"/>
      <member cname="GTK_DIR_TAB_BACKWARD" name="TabBackward" value="1"/>
      <member cname="GTK_DIR_UP" name="Up" value="2"/>
      <member cname="GTK_DIR_DOWN" name="Down" value="3"/>
      <member cname="GTK_DIR_LEFT" name="Left" value="4"/>
      <member cname="GTK_DIR_RIGHT" name="Right" value="5"/>
    </enum>
    <enum name="DragResult" cname="GtkDragResult" type="enum" gtype="gtk_drag_result_get_type">
      <member cname="GTK_DRAG_RESULT_SUCCESS" name="Success" value="0"/>
      <member cname="GTK_DRAG_RESULT_NO_TARGET" name="NoTarget" value="1"/>
      <member cname="GTK_DRAG_RESULT_USER_CANCELLED" name="UserCancelled" value="2"/>
      <member cname="GTK_DRAG_RESULT_TIMEOUT_EXPIRED" name="TimeoutExpired" value="3"/>
      <member cname="GTK_DRAG_RESULT_GRAB_BROKEN" name="GrabBroken" value="4"/>
      <member cname="GTK_DRAG_RESULT_ERROR" name="Error" value="5"/>
    </enum>
    <enum name="EntryIconPosition" cname="GtkEntryIconPosition" type="enum" gtype="gtk_entry_icon_position_get_type">
      <member cname="GTK_ENTRY_ICON_PRIMARY" name="Primary" value="0"/>
      <member cname="GTK_ENTRY_ICON_SECONDARY" name="Secondary" value="1"/>
    </enum>
    <enum name="ExpanderStyle" cname="GtkExpanderStyle" type="enum" gtype="gtk_expander_style_get_type">
      <member cname="GTK_EXPANDER_COLLAPSED" name="Collapsed" value="0"/>
      <member cname="GTK_EXPANDER_SEMI_COLLAPSED" name="SemiCollapsed" value="1"/>
      <member cname="GTK_EXPANDER_SEMI_EXPANDED" name="SemiExpanded" value="2"/>
      <member cname="GTK_EXPANDER_EXPANDED" name="Expanded" value="3"/>
    </enum>
    <enum name="FileChooserAction" cname="GtkFileChooserAction" type="enum" gtype="gtk_file_chooser_action_get_type">
      <member cname="GTK_FILE_CHOOSER_ACTION_OPEN" name="Open" value="0"/>
      <member cname="GTK_FILE_CHOOSER_ACTION_SAVE" name="Save" value="1"/>
      <member cname="GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER" name="SelectFolder" value="2"/>
      <member cname="GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER" name="CreateFolder" value="3"/>
    </enum>
    <enum name="FileChooserConfirmation" cname="GtkFileChooserConfirmation" type="enum" gtype="gtk_file_chooser_confirmation_get_type">
      <member cname="GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM" name="Confirm" value="0"/>
      <member cname="GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME" name="AcceptFilename" value="1"/>
      <member cname="GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN" name="SelectAgain" value="2"/>
    </enum>
    <enum name="FileChooserError" cname="GtkFileChooserError" type="enum" gtype="gtk_file_chooser_error_get_type">
      <member cname="GTK_FILE_CHOOSER_ERROR_NONEXISTENT" name="Nonexistent" value="0"/>
      <member cname="GTK_FILE_CHOOSER_ERROR_BAD_FILENAME" name="BadFilename" value="1"/>
      <member cname="GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS" name="AlreadyExists" value="2"/>
      <member cname="GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME" name="IncompleteHostname" value="3"/>
    </enum>
    <enum name="IMPreeditStyle" cname="GtkIMPreeditStyle" type="enum" gtype="gtk_im_preedit_style_get_type">
      <member cname="GTK_IM_PREEDIT_NOTHING" name="Nothing" value="0"/>
      <member cname="GTK_IM_PREEDIT_CALLBACK" name="Callback" value="1"/>
      <member cname="GTK_IM_PREEDIT_NONE" name="None" value="2"/>
    </enum>
    <enum name="IMStatusStyle" cname="GtkIMStatusStyle" type="enum" gtype="gtk_im_status_style_get_type">
      <member cname="GTK_IM_STATUS_NOTHING" name="Nothing" value="0"/>
      <member cname="GTK_IM_STATUS_CALLBACK" name="Callback" value="1"/>
      <member cname="GTK_IM_STATUS_NONE" name="None" value="2"/>
    </enum>
    <enum name="IconSize" cname="GtkIconSize" type="enum" gtype="gtk_icon_size_get_type">
      <member cname="GTK_ICON_SIZE_INVALID" name="Invalid" value="0"/>
      <member cname="GTK_ICON_SIZE_MENU" name="Menu" value="1"/>
      <member cname="GTK_ICON_SIZE_SMALL_TOOLBAR" name="SmallToolbar" value="2"/>
      <member cname="GTK_ICON_SIZE_LARGE_TOOLBAR" name="LargeToolbar" value="3"/>
      <member cname="GTK_ICON_SIZE_BUTTON" name="Button" value="4"/>
      <member cname="GTK_ICON_SIZE_DND" name="Dnd" value="5"/>
      <member cname="GTK_ICON_SIZE_DIALOG" name="Dialog" value="6"/>
    </enum>
    <enum name="IconThemeError" cname="GtkIconThemeError" type="enum" gtype="gtk_icon_theme_error_get_type">
      <member cname="GTK_ICON_THEME_NOT_FOUND" name="NotFound" value="0"/>
      <member cname="GTK_ICON_THEME_FAILED" name="Failed" value="1"/>
    </enum>
    <enum name="IconViewDropPosition" cname="GtkIconViewDropPosition" type="enum" gtype="gtk_icon_view_drop_position_get_type">
      <member cname="GTK_ICON_VIEW_NO_DROP" name="NoDrop" value="0"/>
      <member cname="GTK_ICON_VIEW_DROP_INTO" name="DropInto" value="1"/>
      <member cname="GTK_ICON_VIEW_DROP_LEFT" name="DropLeft" value="2"/>
      <member cname="GTK_ICON_VIEW_DROP_RIGHT" name="DropRight" value="3"/>
      <member cname="GTK_ICON_VIEW_DROP_ABOVE" name="DropAbove" value="4"/>
      <member cname="GTK_ICON_VIEW_DROP_BELOW" name="DropBelow" value="5"/>
    </enum>
    <enum name="ImageType" cname="GtkImageType" type="enum" gtype="gtk_image_type_get_type">
      <member cname="GTK_IMAGE_EMPTY" name="Empty" value="0"/>
      <member cname="GTK_IMAGE_PIXBUF" name="Pixbuf" value="1"/>
      <member cname="GTK_IMAGE_STOCK" name="Stock" value="2"/>
      <member cname="GTK_IMAGE_ICON_SET" name="IconSet" value="3"/>
      <member cname="GTK_IMAGE_ANIMATION" name="Animation" value="4"/>
      <member cname="GTK_IMAGE_ICON_NAME" name="IconName" value="5"/>
      <member cname="GTK_IMAGE_GICON" name="Gicon" value="6"/>
    </enum>
    <enum name="InputPurpose" cname="GtkInputPurpose" type="enum" gtype="gtk_input_purpose_get_type">
      <member cname="GTK_INPUT_PURPOSE_FREE_FORM" name="FreeForm" value="0"/>
      <member cname="GTK_INPUT_PURPOSE_ALPHA" name="Alpha" value="1"/>
      <member cname="GTK_INPUT_PURPOSE_DIGITS" name="Digits" value="2"/>
      <member cname="GTK_INPUT_PURPOSE_NUMBER" name="Number" value="3"/>
      <member cname="GTK_INPUT_PURPOSE_PHONE" name="Phone" value="4"/>
      <member cname="GTK_INPUT_PURPOSE_URL" name="Url" value="5"/>
      <member cname="GTK_INPUT_PURPOSE_EMAIL" name="Email" value="6"/>
      <member cname="GTK_INPUT_PURPOSE_NAME" name="Name" value="7"/>
      <member cname="GTK_INPUT_PURPOSE_PASSWORD" name="Password" value="8"/>
      <member cname="GTK_INPUT_PURPOSE_PIN" name="Pin" value="9"/>
    </enum>
    <enum name="Justification" cname="GtkJustification" type="enum" gtype="gtk_justification_get_type">
      <member cname="GTK_JUSTIFY_LEFT" name="Left" value="0"/>
      <member cname="GTK_JUSTIFY_RIGHT" name="Right" value="1"/>
      <member cname="GTK_JUSTIFY_CENTER" name="Center" value="2"/>
      <member cname="GTK_JUSTIFY_FILL" name="Fill" value="3"/>
    </enum>
    <enum name="LevelBarMode" cname="GtkLevelBarMode" type="enum" gtype="gtk_level_bar_mode_get_type">
      <member cname="GTK_LEVEL_BAR_MODE_CONTINUOUS" name="Continuous" value="0"/>
      <member cname="GTK_LEVEL_BAR_MODE_DISCRETE" name="Discrete" value="1"/>
    </enum>
    <enum name="License" cname="GtkLicense" type="enum" gtype="gtk_license_get_type">
      <member cname="GTK_LICENSE_UNKNOWN" name="Unknown" value="0"/>
      <member cname="GTK_LICENSE_CUSTOM" name="Custom" value="1"/>
      <member cname="GTK_LICENSE_GPL_2_0" name="Gpl20" value="2"/>
      <member cname="GTK_LICENSE_GPL_3_0" name="Gpl30" value="3"/>
      <member cname="GTK_LICENSE_LGPL_2_1" name="Lgpl21" value="4"/>
      <member cname="GTK_LICENSE_LGPL_3_0" name="Lgpl30" value="5"/>
      <member cname="GTK_LICENSE_BSD" name="Bsd" value="6"/>
      <member cname="GTK_LICENSE_MIT_X11" name="MitX11" value="7"/>
      <member cname="GTK_LICENSE_ARTISTIC" name="Artistic" value="8"/>
    </enum>
    <enum name="MenuDirectionType" cname="GtkMenuDirectionType" type="enum" gtype="gtk_menu_direction_type_get_type">
      <member cname="GTK_MENU_DIR_PARENT" name="Parent" value="0"/>
      <member cname="GTK_MENU_DIR_CHILD" name="Child" value="1"/>
      <member cname="GTK_MENU_DIR_NEXT" name="Next" value="2"/>
      <member cname="GTK_MENU_DIR_PREV" name="Prev" value="3"/>
    </enum>
    <enum name="MessageType" cname="GtkMessageType" type="enum" gtype="gtk_message_type_get_type">
      <member cname="GTK_MESSAGE_INFO" name="Info" value="0"/>
      <member cname="GTK_MESSAGE_WARNING" name="Warning" value="1"/>
      <member cname="GTK_MESSAGE_QUESTION" name="Question" value="2"/>
      <member cname="GTK_MESSAGE_ERROR" name="Error" value="3"/>
      <member cname="GTK_MESSAGE_OTHER" name="Other" value="4"/>
    </enum>
    <enum name="MovementStep" cname="GtkMovementStep" type="enum" gtype="gtk_movement_step_get_type">
      <member cname="GTK_MOVEMENT_LOGICAL_POSITIONS" name="LogicalPositions" value="0"/>
      <member cname="GTK_MOVEMENT_VISUAL_POSITIONS" name="VisualPositions" value="1"/>
      <member cname="GTK_MOVEMENT_WORDS" name="Words" value="2"/>
      <member cname="GTK_MOVEMENT_DISPLAY_LINES" name="DisplayLines" value="3"/>
      <member cname="GTK_MOVEMENT_DISPLAY_LINE_ENDS" name="DisplayLineEnds" value="4"/>
      <member cname="GTK_MOVEMENT_PARAGRAPHS" name="Paragraphs" value="5"/>
      <member cname="GTK_MOVEMENT_PARAGRAPH_ENDS" name="ParagraphEnds" value="6"/>
      <member cname="GTK_MOVEMENT_PAGES" name="Pages" value="7"/>
      <member cname="GTK_MOVEMENT_BUFFER_ENDS" name="BufferEnds" value="8"/>
      <member cname="GTK_MOVEMENT_HORIZONTAL_PAGES" name="HorizontalPages" value="9"/>
    </enum>
    <enum name="NotebookTab" cname="GtkNotebookTab" type="enum" gtype="gtk_notebook_tab_get_type">
      <member cname="GTK_NOTEBOOK_TAB_FIRST" name="First" value="0"/>
      <member cname="GTK_NOTEBOOK_TAB_LAST" name="Last" value="1"/>
    </enum>
    <enum name="NumberUpLayout" cname="GtkNumberUpLayout" type="enum" gtype="gtk_number_up_layout_get_type">
      <member cname="GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM" name="Lrtb" value="0"/>
      <member cname="GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP" name="Lrbt" value="1"/>
      <member cname="GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM" name="Rltb" value="2"/>
      <member cname="GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP" name="Rlbt" value="3"/>
      <member cname="GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT" name="Tblr" value="4"/>
      <member cname="GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT" name="Tbrl" value="5"/>
      <member cname="GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT" name="Btlr" value="6"/>
      <member cname="GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT" name="Btrl" value="7"/>
    </enum>
    <enum name="Orientation" cname="GtkOrientation" type="enum" gtype="gtk_orientation_get_type">
      <member cname="GTK_ORIENTATION_HORIZONTAL" name="Horizontal" value="0"/>
      <member cname="GTK_ORIENTATION_VERTICAL" name="Vertical" value="1"/>
    </enum>
    <enum name="PackDirection" cname="GtkPackDirection" type="enum" gtype="gtk_pack_direction_get_type">
      <member cname="GTK_PACK_DIRECTION_LTR" name="Ltr" value="0"/>
      <member cname="GTK_PACK_DIRECTION_RTL" name="Rtl" value="1"/>
      <member cname="GTK_PACK_DIRECTION_TTB" name="Ttb" value="2"/>
      <member cname="GTK_PACK_DIRECTION_BTT" name="Btt" value="3"/>
    </enum>
    <enum name="PackType" cname="GtkPackType" type="enum" gtype="gtk_pack_type_get_type">
      <member cname="GTK_PACK_START" name="Start" value="0"/>
      <member cname="GTK_PACK_END" name="End" value="1"/>
    </enum>
    <enum name="PageOrientation" cname="GtkPageOrientation" type="enum" gtype="gtk_page_orientation_get_type">
      <member cname="GTK_PAGE_ORIENTATION_PORTRAIT" name="Portrait" value="0"/>
      <member cname="GTK_PAGE_ORIENTATION_LANDSCAPE" name="Landscape" value="1"/>
      <member cname="GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT" name="ReversePortrait" value="2"/>
      <member cname="GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE" name="ReverseLandscape" value="3"/>
    </enum>
    <enum name="PageSet" cname="GtkPageSet" type="enum" gtype="gtk_page_set_get_type">
      <member cname="GTK_PAGE_SET_ALL" name="All" value="0"/>
      <member cname="GTK_PAGE_SET_EVEN" name="Even" value="1"/>
      <member cname="GTK_PAGE_SET_ODD" name="Odd" value="2"/>
    </enum>
    <enum name="PathPriorityType" cname="GtkPathPriorityType" type="enum" gtype="gtk_path_priority_type_get_type">
      <member cname="GTK_PATH_PRIO_LOWEST" name="Lowest" value="0"/>
      <member cname="GTK_PATH_PRIO_GTK" name="Gtk" value="4"/>
      <member cname="GTK_PATH_PRIO_APPLICATION" name="Application" value="8"/>
      <member cname="GTK_PATH_PRIO_THEME" name="Theme" value="10"/>
      <member cname="GTK_PATH_PRIO_RC" name="Rc" value="12"/>
      <member cname="GTK_PATH_PRIO_HIGHEST" name="Highest" value="15"/>
    </enum>
    <enum name="PathType" cname="GtkPathType" type="enum" gtype="gtk_path_type_get_type">
      <member cname="GTK_PATH_WIDGET" name="Widget" value="0"/>
      <member cname="GTK_PATH_WIDGET_CLASS" name="WidgetClass" value="1"/>
      <member cname="GTK_PATH_CLASS" name="Class" value="2"/>
    </enum>
    <enum name="PolicyType" cname="GtkPolicyType" type="enum" gtype="gtk_policy_type_get_type">
      <member cname="GTK_POLICY_ALWAYS" name="Always" value="0"/>
      <member cname="GTK_POLICY_AUTOMATIC" name="Automatic" value="1"/>
      <member cname="GTK_POLICY_NEVER" name="Never" value="2"/>
    </enum>
    <enum name="PositionType" cname="GtkPositionType" type="enum" gtype="gtk_position_type_get_type">
      <member cname="GTK_POS_LEFT" name="Left" value="0"/>
      <member cname="GTK_POS_RIGHT" name="Right" value="1"/>
      <member cname="GTK_POS_TOP" name="Top" value="2"/>
      <member cname="GTK_POS_BOTTOM" name="Bottom" value="3"/>
    </enum>
    <enum name="PrintDuplex" cname="GtkPrintDuplex" type="enum" gtype="gtk_print_duplex_get_type">
      <member cname="GTK_PRINT_DUPLEX_SIMPLEX" name="Simplex" value="0"/>
      <member cname="GTK_PRINT_DUPLEX_HORIZONTAL" name="Horizontal" value="1"/>
      <member cname="GTK_PRINT_DUPLEX_VERTICAL" name="Vertical" value="2"/>
    </enum>
    <enum name="PrintError" cname="GtkPrintError" type="enum" gtype="gtk_print_error_get_type">
      <member cname="GTK_PRINT_ERROR_GENERAL" name="General" value="0"/>
      <member cname="GTK_PRINT_ERROR_INTERNAL_ERROR" name="InternalError" value="1"/>
      <member cname="GTK_PRINT_ERROR_NOMEM" name="Nomem" value="2"/>
      <member cname="GTK_PRINT_ERROR_INVALID_FILE" name="InvalidFile" value="3"/>
    </enum>
    <enum name="PrintOperationAction" cname="GtkPrintOperationAction" type="enum" gtype="gtk_print_operation_action_get_type">
      <member cname="GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG" name="PrintDialog" value="0"/>
      <member cname="GTK_PRINT_OPERATION_ACTION_PRINT" name="Print" value="1"/>
      <member cname="GTK_PRINT_OPERATION_ACTION_PREVIEW" name="Preview" value="2"/>
      <member cname="GTK_PRINT_OPERATION_ACTION_EXPORT" name="Export" value="3"/>
    </enum>
    <enum name="PrintOperationResult" cname="GtkPrintOperationResult" type="enum" gtype="gtk_print_operation_result_get_type">
      <member cname="GTK_PRINT_OPERATION_RESULT_ERROR" name="Error" value="0"/>
      <member cname="GTK_PRINT_OPERATION_RESULT_APPLY" name="Apply" value="1"/>
      <member cname="GTK_PRINT_OPERATION_RESULT_CANCEL" name="Cancel" value="2"/>
      <member cname="GTK_PRINT_OPERATION_RESULT_IN_PROGRESS" name="InProgress" value="3"/>
    </enum>
    <enum name="PrintPages" cname="GtkPrintPages" type="enum" gtype="gtk_print_pages_get_type">
      <member cname="GTK_PRINT_PAGES_ALL" name="All" value="0"/>
      <member cname="GTK_PRINT_PAGES_CURRENT" name="Current" value="1"/>
      <member cname="GTK_PRINT_PAGES_RANGES" name="Ranges" value="2"/>
      <member cname="GTK_PRINT_PAGES_SELECTION" name="Selection" value="3"/>
    </enum>
    <enum name="PrintQuality" cname="GtkPrintQuality" type="enum" gtype="gtk_print_quality_get_type">
      <member cname="GTK_PRINT_QUALITY_LOW" name="Low" value="0"/>
      <member cname="GTK_PRINT_QUALITY_NORMAL" name="Normal" value="1"/>
      <member cname="GTK_PRINT_QUALITY_HIGH" name="High" value="2"/>
      <member cname="GTK_PRINT_QUALITY_DRAFT" name="Draft" value="3"/>
    </enum>
    <enum name="PrintStatus" cname="GtkPrintStatus" type="enum" gtype="gtk_print_status_get_type">
      <member cname="GTK_PRINT_STATUS_INITIAL" name="Initial" value="0"/>
      <member cname="GTK_PRINT_STATUS_PREPARING" name="Preparing" value="1"/>
      <member cname="GTK_PRINT_STATUS_GENERATING_DATA" name="GeneratingData" value="2"/>
      <member cname="GTK_PRINT_STATUS_SENDING_DATA" name="SendingData" value="3"/>
      <member cname="GTK_PRINT_STATUS_PENDING" name="Pending" value="4"/>
      <member cname="GTK_PRINT_STATUS_PENDING_ISSUE" name="PendingIssue" value="5"/>
      <member cname="GTK_PRINT_STATUS_PRINTING" name="Printing" value="6"/>
      <member cname="GTK_PRINT_STATUS_FINISHED" name="Finished" value="7"/>
      <member cname="GTK_PRINT_STATUS_FINISHED_ABORTED" name="FinishedAborted" value="8"/>
    </enum>
    <enum name="RcTokenType" cname="GtkRcTokenType" type="enum" gtype="gtk_rc_token_type_get_type">
      <member cname="GTK_RC_TOKEN_INVALID" name="Invalid" value="270"/>
      <member cname="GTK_RC_TOKEN_INCLUDE" name="Include" value="271"/>
      <member cname="GTK_RC_TOKEN_NORMAL" name="Normal" value="272"/>
      <member cname="GTK_RC_TOKEN_ACTIVE" name="Active" value="273"/>
      <member cname="GTK_RC_TOKEN_PRELIGHT" name="Prelight" value="274"/>
      <member cname="GTK_RC_TOKEN_SELECTED" name="Selected" value="275"/>
      <member cname="GTK_RC_TOKEN_INSENSITIVE" name="Insensitive" value="276"/>
      <member cname="GTK_RC_TOKEN_FG" name="Fg" value="277"/>
      <member cname="GTK_RC_TOKEN_BG" name="Bg" value="278"/>
      <member cname="GTK_RC_TOKEN_TEXT" name="Text" value="279"/>
      <member cname="GTK_RC_TOKEN_BASE" name="Base" value="280"/>
      <member cname="GTK_RC_TOKEN_XTHICKNESS" name="Xthickness" value="281"/>
      <member cname="GTK_RC_TOKEN_YTHICKNESS" name="Ythickness" value="282"/>
      <member cname="GTK_RC_TOKEN_FONT" name="Font" value="283"/>
      <member cname="GTK_RC_TOKEN_FONTSET" name="Fontset" value="284"/>
      <member cname="GTK_RC_TOKEN_FONT_NAME" name="FontName" value="285"/>
      <member cname="GTK_RC_TOKEN_BG_PIXMAP" name="BgPixmap" value="286"/>
      <member cname="GTK_RC_TOKEN_PIXMAP_PATH" name="PixmapPath" value="287"/>
      <member cname="GTK_RC_TOKEN_STYLE" name="Style" value="288"/>
      <member cname="GTK_RC_TOKEN_BINDING" name="Binding" value="289"/>
      <member cname="GTK_RC_TOKEN_BIND" name="Bind" value="290"/>
      <member cname="GTK_RC_TOKEN_WIDGET" name="Widget" value="291"/>
      <member cname="GTK_RC_TOKEN_WIDGET_CLASS" name="WidgetClass" value="292"/>
      <member cname="GTK_RC_TOKEN_CLASS" name="Class" value="293"/>
      <member cname="GTK_RC_TOKEN_LOWEST" name="Lowest" value="294"/>
      <member cname="GTK_RC_TOKEN_GTK" name="Gtk" value="295"/>
      <member cname="GTK_RC_TOKEN_APPLICATION" name="Application" value="296"/>
      <member cname="GTK_RC_TOKEN_THEME" name="Theme" value="297"/>
      <member cname="GTK_RC_TOKEN_RC" name="Rc" value="298"/>
      <member cname="GTK_RC_TOKEN_HIGHEST" name="Highest" value="299"/>
      <member cname="GTK_RC_TOKEN_ENGINE" name="Engine" value="300"/>
      <member cname="GTK_RC_TOKEN_MODULE_PATH" name="ModulePath" value="301"/>
      <member cname="GTK_RC_TOKEN_IM_MODULE_PATH" name="ImModulePath" value="302"/>
      <member cname="GTK_RC_TOKEN_IM_MODULE_FILE" name="ImModuleFile" value="303"/>
      <member cname="GTK_RC_TOKEN_STOCK" name="Stock" value="304"/>
      <member cname="GTK_RC_TOKEN_LTR" name="Ltr" value="305"/>
      <member cname="GTK_RC_TOKEN_RTL" name="Rtl" value="306"/>
      <member cname="GTK_RC_TOKEN_COLOR" name="Color" value="307"/>
      <member cname="GTK_RC_TOKEN_UNBIND" name="Unbind" value="308"/>
      <member cname="GTK_RC_TOKEN_LAST" name="Last" value="309"/>
    </enum>
    <enum name="RecentChooserError" cname="GtkRecentChooserError" type="enum" gtype="gtk_recent_chooser_error_get_type">
      <member cname="GTK_RECENT_CHOOSER_ERROR_NOT_FOUND" name="NotFound" value="0"/>
      <member cname="GTK_RECENT_CHOOSER_ERROR_INVALID_URI" name="InvalidUri" value="1"/>
    </enum>
    <enum name="RecentManagerError" cname="GtkRecentManagerError" type="enum" gtype="gtk_recent_manager_error_get_type">
      <member cname="GTK_RECENT_MANAGER_ERROR_NOT_FOUND" name="NotFound" value="0"/>
      <member cname="GTK_RECENT_MANAGER_ERROR_INVALID_URI" name="InvalidUri" value="1"/>
      <member cname="GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING" name="InvalidEncoding" value="2"/>
      <member cname="GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED" name="NotRegistered" value="3"/>
      <member cname="GTK_RECENT_MANAGER_ERROR_READ" name="Read" value="4"/>
      <member cname="GTK_RECENT_MANAGER_ERROR_WRITE" name="Write" value="5"/>
      <member cname="GTK_RECENT_MANAGER_ERROR_UNKNOWN" name="Unknown" value="6"/>
    </enum>
    <enum name="RecentSortType" cname="GtkRecentSortType" type="enum" gtype="gtk_recent_sort_type_get_type">
      <member cname="GTK_RECENT_SORT_NONE" name="None" value="0"/>
      <member cname="GTK_RECENT_SORT_MRU" name="Mru" value="1"/>
      <member cname="GTK_RECENT_SORT_LRU" name="Lru" value="2"/>
      <member cname="GTK_RECENT_SORT_CUSTOM" name="Custom" value="3"/>
    </enum>
    <enum name="ReliefStyle" cname="GtkReliefStyle" type="enum" gtype="gtk_relief_style_get_type">
      <member cname="GTK_RELIEF_NORMAL" name="Normal" value="0"/>
      <member cname="GTK_RELIEF_HALF" name="Half" value="1"/>
      <member cname="GTK_RELIEF_NONE" name="None" value="2"/>
    </enum>
    <enum name="ResizeMode" cname="GtkResizeMode" type="enum" gtype="gtk_resize_mode_get_type">
      <member cname="GTK_RESIZE_PARENT" name="Parent" value="0"/>
      <member cname="GTK_RESIZE_QUEUE" name="Queue" value="1"/>
      <member cname="GTK_RESIZE_IMMEDIATE" name="Immediate" value="2"/>
    </enum>
    <enum name="ResponseType" cname="GtkResponseType" type="enum" gtype="gtk_response_type_get_type">
      <member cname="GTK_RESPONSE_HELP" name="Help" value="-11"/>
      <member cname="GTK_RESPONSE_APPLY" name="Apply" value="-10"/>
      <member cname="GTK_RESPONSE_NO" name="No" value="-9"/>
      <member cname="GTK_RESPONSE_YES" name="Yes" value="-8"/>
      <member cname="GTK_RESPONSE_CLOSE" name="Close" value="-7"/>
      <member cname="GTK_RESPONSE_CANCEL" name="Cancel" value="-6"/>
      <member cname="GTK_RESPONSE_OK" name="Ok" value="-5"/>
      <member cname="GTK_RESPONSE_DELETE_EVENT" name="DeleteEvent" value="-4"/>
      <member cname="GTK_RESPONSE_ACCEPT" name="Accept" value="-3"/>
      <member cname="GTK_RESPONSE_REJECT" name="Reject" value="-2"/>
      <member cname="GTK_RESPONSE_NONE" name="None" value="-1"/>
    </enum>
    <enum name="ScrollStep" cname="GtkScrollStep" type="enum" gtype="gtk_scroll_step_get_type">
      <member cname="GTK_SCROLL_STEPS" name="Steps" value="0"/>
      <member cname="GTK_SCROLL_PAGES" name="Pages" value="1"/>
      <member cname="GTK_SCROLL_ENDS" name="Ends" value="2"/>
      <member cname="GTK_SCROLL_HORIZONTAL_STEPS" name="HorizontalSteps" value="3"/>
      <member cname="GTK_SCROLL_HORIZONTAL_PAGES" name="HorizontalPages" value="4"/>
      <member cname="GTK_SCROLL_HORIZONTAL_ENDS" name="HorizontalEnds" value="5"/>
    </enum>
    <enum name="ScrollType" cname="GtkScrollType" type="enum" gtype="gtk_scroll_type_get_type">
      <member cname="GTK_SCROLL_NONE" name="None" value="0"/>
      <member cname="GTK_SCROLL_JUMP" name="Jump" value="1"/>
      <member cname="GTK_SCROLL_STEP_BACKWARD" name="StepBackward" value="2"/>
      <member cname="GTK_SCROLL_STEP_FORWARD" name="StepForward" value="3"/>
      <member cname="GTK_SCROLL_PAGE_BACKWARD" name="PageBackward" value="4"/>
      <member cname="GTK_SCROLL_PAGE_FORWARD" name="PageForward" value="5"/>
      <member cname="GTK_SCROLL_STEP_UP" name="StepUp" value="6"/>
      <member cname="GTK_SCROLL_STEP_DOWN" name="StepDown" value="7"/>
      <member cname="GTK_SCROLL_PAGE_UP" name="PageUp" value="8"/>
      <member cname="GTK_SCROLL_PAGE_DOWN" name="PageDown" value="9"/>
      <member cname="GTK_SCROLL_STEP_LEFT" name="StepLeft" value="10"/>
      <member cname="GTK_SCROLL_STEP_RIGHT" name="StepRight" value="11"/>
      <member cname="GTK_SCROLL_PAGE_LEFT" name="PageLeft" value="12"/>
      <member cname="GTK_SCROLL_PAGE_RIGHT" name="PageRight" value="13"/>
      <member cname="GTK_SCROLL_START" name="Start" value="14"/>
      <member cname="GTK_SCROLL_END" name="End" value="15"/>
    </enum>
    <enum name="ScrollablePolicy" cname="GtkScrollablePolicy" type="enum" gtype="gtk_scrollable_policy_get_type">
      <member cname="GTK_SCROLL_MINIMUM" name="Minimum" value="0"/>
      <member cname="GTK_SCROLL_NATURAL" name="Natural" value="1"/>
    </enum>
    <enum name="SelectionMode" cname="GtkSelectionMode" type="enum" gtype="gtk_selection_mode_get_type">
      <member cname="GTK_SELECTION_NONE" name="None" value="0"/>
      <member cname="GTK_SELECTION_SINGLE" name="Single" value="1"/>
      <member cname="GTK_SELECTION_BROWSE" name="Browse" value="2"/>
      <member cname="GTK_SELECTION_MULTIPLE" name="Multiple" value="3"/>
    </enum>
    <enum name="SensitivityType" cname="GtkSensitivityType" type="enum" gtype="gtk_sensitivity_type_get_type">
      <member cname="GTK_SENSITIVITY_AUTO" name="Auto" value="0"/>
      <member cname="GTK_SENSITIVITY_ON" name="On" value="1"/>
      <member cname="GTK_SENSITIVITY_OFF" name="Off" value="2"/>
    </enum>
    <enum name="ShadowType" cname="GtkShadowType" type="enum" gtype="gtk_shadow_type_get_type">
      <member cname="GTK_SHADOW_NONE" name="None" value="0"/>
      <member cname="GTK_SHADOW_IN" name="In" value="1"/>
      <member cname="GTK_SHADOW_OUT" name="Out" value="2"/>
      <member cname="GTK_SHADOW_ETCHED_IN" name="EtchedIn" value="3"/>
      <member cname="GTK_SHADOW_ETCHED_OUT" name="EtchedOut" value="4"/>
    </enum>
    <enum name="SizeGroupMode" cname="GtkSizeGroupMode" type="enum" gtype="gtk_size_group_mode_get_type">
      <member cname="GTK_SIZE_GROUP_NONE" name="None" value="0"/>
      <member cname="GTK_SIZE_GROUP_HORIZONTAL" name="Horizontal" value="1"/>
      <member cname="GTK_SIZE_GROUP_VERTICAL" name="Vertical" value="2"/>
      <member cname="GTK_SIZE_GROUP_BOTH" name="Both" value="3"/>
    </enum>
    <enum name="SizeRequestMode" cname="GtkSizeRequestMode" type="enum" gtype="gtk_size_request_mode_get_type">
      <member cname="GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH" name="HeightForWidth" value="0"/>
      <member cname="GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT" name="WidthForHeight" value="1"/>
      <member cname="GTK_SIZE_REQUEST_CONSTANT_SIZE" name="ConstantSize" value="2"/>
    </enum>
    <enum name="SortType" cname="GtkSortType" type="enum" gtype="gtk_sort_type_get_type">
      <member cname="GTK_SORT_ASCENDING" name="Ascending" value="0"/>
      <member cname="GTK_SORT_DESCENDING" name="Descending" value="1"/>
    </enum>
    <enum name="SpinButtonUpdatePolicy" cname="GtkSpinButtonUpdatePolicy" type="enum" gtype="gtk_spin_button_update_policy_get_type">
      <member cname="GTK_UPDATE_ALWAYS" name="Always" value="0"/>
      <member cname="GTK_UPDATE_IF_VALID" name="IfValid" value="1"/>
    </enum>
    <enum name="SpinType" cname="GtkSpinType" type="enum" gtype="gtk_spin_type_get_type">
      <member cname="GTK_SPIN_STEP_FORWARD" name="StepForward" value="0"/>
      <member cname="GTK_SPIN_STEP_BACKWARD" name="StepBackward" value="1"/>
      <member cname="GTK_SPIN_PAGE_FORWARD" name="PageForward" value="2"/>
      <member cname="GTK_SPIN_PAGE_BACKWARD" name="PageBackward" value="3"/>
      <member cname="GTK_SPIN_HOME" name="Home" value="4"/>
      <member cname="GTK_SPIN_END" name="End" value="5"/>
      <member cname="GTK_SPIN_USER_DEFINED" name="UserDefined" value="6"/>
    </enum>
    <enum name="StateType" cname="GtkStateType" type="enum" gtype="gtk_state_type_get_type">
      <member cname="GTK_STATE_NORMAL" name="Normal" value="0"/>
      <member cname="GTK_STATE_ACTIVE" name="Active" value="1"/>
      <member cname="GTK_STATE_PRELIGHT" name="Prelight" value="2"/>
      <member cname="GTK_STATE_SELECTED" name="Selected" value="3"/>
      <member cname="GTK_STATE_INSENSITIVE" name="Insensitive" value="4"/>
      <member cname="GTK_STATE_INCONSISTENT" name="Inconsistent" value="5"/>
      <member cname="GTK_STATE_FOCUSED" name="Focused" value="6"/>
    </enum>
    <enum name="TextBufferTargetInfo" cname="GtkTextBufferTargetInfo" type="enum" gtype="gtk_text_buffer_target_info_get_type">
      <member cname="GTK_TEXT_BUFFER_TARGET_INFO_TEXT" name="Text" value="-3"/>
      <member cname="GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT" name="RichText" value="-2"/>
      <member cname="GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS" name="BufferContents" value="-1"/>
    </enum>
    <enum name="TextDirection" cname="GtkTextDirection" type="enum" gtype="gtk_text_direction_get_type">
      <member cname="GTK_TEXT_DIR_NONE" name="None" value="0"/>
      <member cname="GTK_TEXT_DIR_LTR" name="Ltr" value="1"/>
      <member cname="GTK_TEXT_DIR_RTL" name="Rtl" value="2"/>
    </enum>
    <enum name="TextWindowType" cname="GtkTextWindowType" type="enum" gtype="gtk_text_window_type_get_type">
      <member cname="GTK_TEXT_WINDOW_PRIVATE" name="Private" value="0"/>
      <member cname="GTK_TEXT_WINDOW_WIDGET" name="Widget" value="1"/>
      <member cname="GTK_TEXT_WINDOW_TEXT" name="Text" value="2"/>
      <member cname="GTK_TEXT_WINDOW_LEFT" name="Left" value="3"/>
      <member cname="GTK_TEXT_WINDOW_RIGHT" name="Right" value="4"/>
      <member cname="GTK_TEXT_WINDOW_TOP" name="Top" value="5"/>
      <member cname="GTK_TEXT_WINDOW_BOTTOM" name="Bottom" value="6"/>
    </enum>
    <enum name="ToolbarSpaceStyle" cname="GtkToolbarSpaceStyle" type="enum" gtype="gtk_toolbar_space_style_get_type">
      <member cname="GTK_TOOLBAR_SPACE_EMPTY" name="Empty" value="0"/>
      <member cname="GTK_TOOLBAR_SPACE_LINE" name="Line" value="1"/>
    </enum>
    <enum name="ToolbarStyle" cname="GtkToolbarStyle" type="enum" gtype="gtk_toolbar_style_get_type">
      <member cname="GTK_TOOLBAR_ICONS" name="Icons" value="0"/>
      <member cname="GTK_TOOLBAR_TEXT" name="Text" value="1"/>
      <member cname="GTK_TOOLBAR_BOTH" name="Both" value="2"/>
      <member cname="GTK_TOOLBAR_BOTH_HORIZ" name="BothHoriz" value="3"/>
    </enum>
    <enum name="TreeViewColumnSizing" cname="GtkTreeViewColumnSizing" type="enum" gtype="gtk_tree_view_column_sizing_get_type">
      <member cname="GTK_TREE_VIEW_COLUMN_GROW_ONLY" name="GrowOnly" value="0"/>
      <member cname="GTK_TREE_VIEW_COLUMN_AUTOSIZE" name="Autosize" value="1"/>
      <member cname="GTK_TREE_VIEW_COLUMN_FIXED" name="Fixed" value="2"/>
    </enum>
    <enum name="TreeViewDropPosition" cname="GtkTreeViewDropPosition" type="enum" gtype="gtk_tree_view_drop_position_get_type">
      <member cname="GTK_TREE_VIEW_DROP_BEFORE" name="Before" value="0"/>
      <member cname="GTK_TREE_VIEW_DROP_AFTER" name="After" value="1"/>
      <member cname="GTK_TREE_VIEW_DROP_INTO_OR_BEFORE" name="IntoOrBefore" value="2"/>
      <member cname="GTK_TREE_VIEW_DROP_INTO_OR_AFTER" name="IntoOrAfter" value="3"/>
    </enum>
    <enum name="TreeViewGridLines" cname="GtkTreeViewGridLines" type="enum" gtype="gtk_tree_view_grid_lines_get_type">
      <member cname="GTK_TREE_VIEW_GRID_LINES_NONE" name="None" value="0"/>
      <member cname="GTK_TREE_VIEW_GRID_LINES_HORIZONTAL" name="Horizontal" value="1"/>
      <member cname="GTK_TREE_VIEW_GRID_LINES_VERTICAL" name="Vertical" value="2"/>
      <member cname="GTK_TREE_VIEW_GRID_LINES_BOTH" name="Both" value="3"/>
    </enum>
    <enum name="Unit" cname="GtkUnit" type="enum" gtype="gtk_unit_get_type">
      <member cname="GTK_UNIT_NONE" name="None" value="0"/>
      <member cname="GTK_UNIT_POINTS" name="Points" value="1"/>
      <member cname="GTK_UNIT_INCH" name="Inch" value="2"/>
      <member cname="GTK_UNIT_MM" name="Mm" value="3"/>
    </enum>
    <enum name="WidgetHelpType" cname="GtkWidgetHelpType" type="enum" gtype="gtk_widget_help_type_get_type">
      <member cname="GTK_WIDGET_HELP_TOOLTIP" name="Tooltip" value="0"/>
      <member cname="GTK_WIDGET_HELP_WHATS_THIS" name="WhatsThis" value="1"/>
    </enum>
    <enum name="WindowPosition" cname="GtkWindowPosition" type="enum" gtype="gtk_window_position_get_type">
      <member cname="GTK_WIN_POS_NONE" name="None" value="0"/>
      <member cname="GTK_WIN_POS_CENTER" name="Center" value="1"/>
      <member cname="GTK_WIN_POS_MOUSE" name="Mouse" value="2"/>
      <member cname="GTK_WIN_POS_CENTER_ALWAYS" name="CenterAlways" value="3"/>
      <member cname="GTK_WIN_POS_CENTER_ON_PARENT" name="CenterOnParent" value="4"/>
    </enum>
    <enum name="WindowType" cname="GtkWindowType" type="enum" gtype="gtk_window_type_get_type">
      <member cname="GTK_WINDOW_TOPLEVEL" name="Toplevel" value="0"/>
      <member cname="GTK_WINDOW_POPUP" name="Popup" value="1"/>
    </enum>
    <enum name="WrapMode" cname="GtkWrapMode" type="enum" gtype="gtk_wrap_mode_get_type">
      <member cname="GTK_WRAP_NONE" name="None" value="0"/>
      <member cname="GTK_WRAP_CHAR" name="Char" value="1"/>
      <member cname="GTK_WRAP_WORD" name="Word" value="2"/>
      <member cname="GTK_WRAP_WORD_CHAR" name="WordChar" value="3"/>
    </enum>
    <enum name="AccelFlags" cname="GtkAccelFlags" type="flags" gtype="gtk_accel_flags_get_type">
      <member cname="GTK_ACCEL_VISIBLE" name="Visible" value="1"/>
      <member cname="GTK_ACCEL_LOCKED" name="Locked" value="2"/>
      <member cname="GTK_ACCEL_MASK" name="Mask" value="7"/>
    </enum>
    <enum name="ApplicationInhibitFlags" cname="GtkApplicationInhibitFlags" type="flags" gtype="gtk_application_inhibit_flags_get_type">
      <member cname="GTK_APPLICATION_INHIBIT_LOGOUT" name="Logout" value="1"/>
      <member cname="GTK_APPLICATION_INHIBIT_SWITCH" name="Switch" value="2"/>
      <member cname="GTK_APPLICATION_INHIBIT_SUSPEND" name="Suspend" value="4"/>
      <member cname="GTK_APPLICATION_INHIBIT_IDLE" name="Idle" value="8"/>
    </enum>
    <enum name="AttachOptions" cname="GtkAttachOptions" type="flags" gtype="gtk_attach_options_get_type">
      <member cname="GTK_EXPAND" name="Expand" value="1"/>
      <member cname="GTK_SHRINK" name="Shrink" value="2"/>
      <member cname="GTK_FILL" name="Fill" value="4"/>
    </enum>
    <enum name="CalendarDisplayOptions" cname="GtkCalendarDisplayOptions" type="flags" gtype="gtk_calendar_display_options_get_type">
      <member cname="GTK_CALENDAR_SHOW_HEADING" name="ShowHeading" value="1"/>
      <member cname="GTK_CALENDAR_SHOW_DAY_NAMES" name="ShowDayNames" value="2"/>
      <member cname="GTK_CALENDAR_NO_MONTH_CHANGE" name="NoMonthChange" value="4"/>
      <member cname="GTK_CALENDAR_SHOW_WEEK_NUMBERS" name="ShowWeekNumbers" value="8"/>
      <member cname="GTK_CALENDAR_SHOW_DETAILS" name="ShowDetails" value="32"/>
    </enum>
    <enum name="CellRendererState" cname="GtkCellRendererState" type="flags" gtype="gtk_cell_renderer_state_get_type">
      <member cname="GTK_CELL_RENDERER_SELECTED" name="Selected" value="1"/>
      <member cname="GTK_CELL_RENDERER_PRELIT" name="Prelit" value="2"/>
      <member cname="GTK_CELL_RENDERER_INSENSITIVE" name="Insensitive" value="4"/>
      <member cname="GTK_CELL_RENDERER_SORTED" name="Sorted" value="8"/>
      <member cname="GTK_CELL_RENDERER_FOCUSED" name="Focused" value="16"/>
      <member cname="GTK_CELL_RENDERER_EXPANDABLE" name="Expandable" value="32"/>
      <member cname="GTK_CELL_RENDERER_EXPANDED" name="Expanded" value="64"/>
    </enum>
    <enum name="DebugFlag" cname="GtkDebugFlag" type="flags" gtype="gtk_debug_flag_get_type">
      <member cname="GTK_DEBUG_MISC" name="Misc" value="1"/>
      <member cname="GTK_DEBUG_PLUGSOCKET" name="Plugsocket" value="2"/>
      <member cname="GTK_DEBUG_TEXT" name="Text" value="4"/>
      <member cname="GTK_DEBUG_TREE" name="Tree" value="8"/>
      <member cname="GTK_DEBUG_UPDATES" name="Updates" value="16"/>
      <member cname="GTK_DEBUG_KEYBINDINGS" name="Keybindings" value="32"/>
      <member cname="GTK_DEBUG_MULTIHEAD" name="Multihead" value="64"/>
      <member cname="GTK_DEBUG_MODULES" name="Modules" value="128"/>
      <member cname="GTK_DEBUG_GEOMETRY" name="Geometry" value="256"/>
      <member cname="GTK_DEBUG_ICONTHEME" name="Icontheme" value="512"/>
      <member cname="GTK_DEBUG_PRINTING" name="Printing" value="1024"/>
      <member cname="GTK_DEBUG_BUILDER" name="Builder" value="2048"/>
      <member cname="GTK_DEBUG_SIZE_REQUEST" name="SizeRequest" value="4096"/>
      <member cname="GTK_DEBUG_NO_CSS_CACHE" name="NoCssCache" value="8192"/>
    </enum>
    <enum name="DestDefaults" cname="GtkDestDefaults" type="flags" gtype="gtk_dest_defaults_get_type">
      <member cname="GTK_DEST_DEFAULT_MOTION" name="Motion" value="1"/>
      <member cname="GTK_DEST_DEFAULT_HIGHLIGHT" name="Highlight" value="2"/>
      <member cname="GTK_DEST_DEFAULT_DROP" name="Drop" value="4"/>
      <member cname="GTK_DEST_DEFAULT_ALL" name="All" value="7"/>
    </enum>
    <enum name="DialogFlags" cname="GtkDialogFlags" type="flags" gtype="gtk_dialog_flags_get_type">
      <member cname="GTK_DIALOG_MODAL" name="Modal" value="1"/>
      <member cname="GTK_DIALOG_DESTROY_WITH_PARENT" name="DestroyWithParent" value="2"/>
    </enum>
    <enum name="FileFilterFlags" cname="GtkFileFilterFlags" type="flags" gtype="gtk_file_filter_flags_get_type">
      <member cname="GTK_FILE_FILTER_FILENAME" name="Filename" value="1"/>
      <member cname="GTK_FILE_FILTER_URI" name="Uri" value="2"/>
      <member cname="GTK_FILE_FILTER_DISPLAY_NAME" name="DisplayName" value="4"/>
      <member cname="GTK_FILE_FILTER_MIME_TYPE" name="MimeType" value="8"/>
    </enum>
    <enum name="IconLookupFlags" cname="GtkIconLookupFlags" type="flags" gtype="gtk_icon_lookup_flags_get_type">
      <member cname="GTK_ICON_LOOKUP_NO_SVG" name="NoSvg" value="1"/>
      <member cname="GTK_ICON_LOOKUP_FORCE_SVG" name="ForceSvg" value="2"/>
      <member cname="GTK_ICON_LOOKUP_USE_BUILTIN" name="UseBuiltin" value="4"/>
      <member cname="GTK_ICON_LOOKUP_GENERIC_FALLBACK" name="GenericFallback" value="8"/>
      <member cname="GTK_ICON_LOOKUP_FORCE_SIZE" name="ForceSize" value="16"/>
    </enum>
    <enum name="InputHints" cname="GtkInputHints" type="flags" gtype="gtk_input_hints_get_type">
      <member cname="GTK_INPUT_HINT_NONE" name="None" value="0"/>
      <member cname="GTK_INPUT_HINT_SPELLCHECK" name="Spellcheck" value="1"/>
      <member cname="GTK_INPUT_HINT_NO_SPELLCHECK" name="NoSpellcheck" value="2"/>
      <member cname="GTK_INPUT_HINT_WORD_COMPLETION" name="WordCompletion" value="4"/>
      <member cname="GTK_INPUT_HINT_LOWERCASE" name="Lowercase" value="8"/>
      <member cname="GTK_INPUT_HINT_UPPERCASE_CHARS" name="UppercaseChars" value="16"/>
      <member cname="GTK_INPUT_HINT_UPPERCASE_WORDS" name="UppercaseWords" value="32"/>
      <member cname="GTK_INPUT_HINT_UPPERCASE_SENTENCES" name="UppercaseSentences" value="64"/>
      <member cname="GTK_INPUT_HINT_INHIBIT_OSK" name="InhibitOsk" value="128"/>
    </enum>
    <enum name="JunctionSides" cname="GtkJunctionSides" type="flags" gtype="gtk_junction_sides_get_type">
      <member cname="GTK_JUNCTION_NONE" name="None" value="0"/>
      <member cname="GTK_JUNCTION_CORNER_TOPLEFT" name="CornerTopleft" value="1"/>
      <member cname="GTK_JUNCTION_CORNER_TOPRIGHT" name="CornerTopright" value="2"/>
      <member cname="GTK_JUNCTION_TOP" name="Top" value="3"/>
      <member cname="GTK_JUNCTION_CORNER_BOTTOMLEFT" name="CornerBottomleft" value="4"/>
      <member cname="GTK_JUNCTION_LEFT" name="Left" value="5"/>
      <member cname="GTK_JUNCTION_CORNER_BOTTOMRIGHT" name="CornerBottomright" value="8"/>
      <member cname="GTK_JUNCTION_RIGHT" name="Right" value="10"/>
      <member cname="GTK_JUNCTION_BOTTOM" name="Bottom" value="12"/>
    </enum>
    <enum name="RcFlags" cname="GtkRcFlags" type="flags" gtype="gtk_rc_flags_get_type">
      <member cname="GTK_RC_FG" name="Fg" value="1"/>
      <member cname="GTK_RC_BG" name="Bg" value="2"/>
      <member cname="GTK_RC_TEXT" name="Text" value="4"/>
      <member cname="GTK_RC_BASE" name="Base" value="8"/>
    </enum>
    <enum name="RecentFilterFlags" cname="GtkRecentFilterFlags" type="flags" gtype="gtk_recent_filter_flags_get_type">
      <member cname="GTK_RECENT_FILTER_URI" name="Uri" value="1"/>
      <member cname="GTK_RECENT_FILTER_DISPLAY_NAME" name="DisplayName" value="2"/>
      <member cname="GTK_RECENT_FILTER_MIME_TYPE" name="MimeType" value="4"/>
      <member cname="GTK_RECENT_FILTER_APPLICATION" name="Application" value="8"/>
      <member cname="GTK_RECENT_FILTER_GROUP" name="Group" value="16"/>
      <member cname="GTK_RECENT_FILTER_AGE" name="Age" value="32"/>
    </enum>
    <enum name="RegionFlags" cname="GtkRegionFlags" type="flags" gtype="gtk_region_flags_get_type">
      <member cname="GTK_REGION_EVEN" name="Even" value="1"/>
      <member cname="GTK_REGION_ODD" name="Odd" value="2"/>
      <member cname="GTK_REGION_FIRST" name="First" value="4"/>
      <member cname="GTK_REGION_LAST" name="Last" value="8"/>
      <member cname="GTK_REGION_ONLY" name="Only" value="16"/>
      <member cname="GTK_REGION_SORTED" name="Sorted" value="32"/>
    </enum>
    <enum name="StateFlags" cname="GtkStateFlags" type="flags" gtype="gtk_state_flags_get_type">
      <member cname="GTK_STATE_FLAG_NORMAL" name="Normal" value="0"/>
      <member cname="GTK_STATE_FLAG_ACTIVE" name="Active" value="1"/>
      <member cname="GTK_STATE_FLAG_PRELIGHT" name="Prelight" value="2"/>
      <member cname="GTK_STATE_FLAG_SELECTED" name="Selected" value="4"/>
      <member cname="GTK_STATE_FLAG_INSENSITIVE" name="Insensitive" value="8"/>
      <member cname="GTK_STATE_FLAG_INCONSISTENT" name="Inconsistent" value="16"/>
      <member cname="GTK_STATE_FLAG_FOCUSED" name="Focused" value="32"/>
      <member cname="GTK_STATE_FLAG_BACKDROP" name="Backdrop" value="64"/>
      <member cname="GTK_STATE_FLAG_DIR_LTR" name="DirLtr" value="128"/>
      <member cname="GTK_STATE_FLAG_DIR_RTL" name="DirRtl" value="256"/>
    </enum>
    <enum name="TargetFlags" cname="GtkTargetFlags" type="flags" gtype="gtk_target_flags_get_type">
      <member cname="GTK_TARGET_SAME_APP" name="SameApp" value="1"/>
      <member cname="GTK_TARGET_SAME_WIDGET" name="SameWidget" value="2"/>
      <member cname="GTK_TARGET_OTHER_APP" name="OtherApp" value="4"/>
      <member cname="GTK_TARGET_OTHER_WIDGET" name="OtherWidget" value="8"/>
    </enum>
    <enum name="TextSearchFlags" cname="GtkTextSearchFlags" type="flags" gtype="gtk_text_search_flags_get_type">
      <member cname="GTK_TEXT_SEARCH_VISIBLE_ONLY" name="VisibleOnly" value="1"/>
      <member cname="GTK_TEXT_SEARCH_TEXT_ONLY" name="TextOnly" value="2"/>
      <member cname="GTK_TEXT_SEARCH_CASE_INSENSITIVE" name="CaseInsensitive" value="4"/>
    </enum>
    <enum name="ToolPaletteDragTargets" cname="GtkToolPaletteDragTargets" type="flags" gtype="gtk_tool_palette_drag_targets_get_type">
      <member cname="GTK_TOOL_PALETTE_DRAG_ITEMS" name="Items" value="1"/>
      <member cname="GTK_TOOL_PALETTE_DRAG_GROUPS" name="Groups" value="2"/>
    </enum>
    <enum name="TreeModelFlags" cname="GtkTreeModelFlags" type="flags" gtype="gtk_tree_model_flags_get_type">
      <member cname="GTK_TREE_MODEL_ITERS_PERSIST" name="ItersPersist" value="1"/>
      <member cname="GTK_TREE_MODEL_LIST_ONLY" name="ListOnly" value="2"/>
    </enum>
    <enum name="UIManagerItemType" cname="GtkUIManagerItemType" type="flags" gtype="gtk_ui_manager_item_type_get_type">
      <member cname="GTK_UI_MANAGER_AUTO" name="Auto" value="0"/>
      <member cname="GTK_UI_MANAGER_MENUBAR" name="Menubar" value="1"/>
      <member cname="GTK_UI_MANAGER_MENU" name="Menu" value="2"/>
      <member cname="GTK_UI_MANAGER_TOOLBAR" name="Toolbar" value="4"/>
      <member cname="GTK_UI_MANAGER_PLACEHOLDER" name="Placeholder" value="8"/>
      <member cname="GTK_UI_MANAGER_POPUP" name="Popup" value="16"/>
      <member cname="GTK_UI_MANAGER_MENUITEM" name="Menuitem" value="32"/>
      <member cname="GTK_UI_MANAGER_TOOLITEM" name="Toolitem" value="64"/>
      <member cname="GTK_UI_MANAGER_SEPARATOR" name="Separator" value="128"/>
      <member cname="GTK_UI_MANAGER_ACCELERATOR" name="Accelerator" value="256"/>
      <member cname="GTK_UI_MANAGER_POPUP_WITH_ACCELS" name="PopupWithAccels" value="512"/>
    </enum>
    <callback name="AccelGroupActivate" cname="GtkAccelGroupActivate">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="accel_group" type="GtkAccelGroup*"/>
        <parameter name="acceleratable" type="GObject*"/>
        <parameter name="keyval" type="guint"/>
        <parameter name="modifier" type="GdkModifierType"/>
      </parameters>
    </callback>
    <callback name="AccelGroupFindFunc" cname="GtkAccelGroupFindFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="key" type="GtkAccelKey*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="closure" type="GClosure*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="AccelMapForeach" cname="GtkAccelMapForeach">
      <return-type type="void"/>
      <parameters>
        <parameter name="data" type="gpointer"/>
        <parameter name="accel_path" type="const-gchar*"/>
        <parameter name="accel_key" type="guint"/>
        <parameter name="accel_mods" type="GdkModifierType"/>
        <parameter name="changed" type="gboolean"/>
      </parameters>
    </callback>
    <callback name="AssistantPageFunc" cname="GtkAssistantPageFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="current_page" type="gint"/>
        <parameter closure="1" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="BuilderConnectFunc" cname="GtkBuilderConnectFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="builder" type="GtkBuilder*"/>
        <parameter name="_object" type="GObject*"/>
        <parameter name="signal_name" type="const-gchar*"/>
        <parameter name="handler_name" type="const-gchar*"/>
        <parameter name="connect_object" type="GObject*"/>
        <parameter name="flags" type="GConnectFlags"/>
        <parameter closure="6" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CalendarDetailFunc" cname="GtkCalendarDetailFunc">
      <return-type type="gchar*" owned="true"/>
      <parameters>
        <parameter name="calendar" type="GtkCalendar*"/>
        <parameter name="year" type="guint"/>
        <parameter name="month" type="guint"/>
        <parameter name="day" type="guint"/>
        <parameter closure="4" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="Callback" cname="GtkCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="widget" type="GtkWidget*"/>
        <parameter closure="1" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CellAllocCallback" cname="GtkCellAllocCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="renderer" type="GtkCellRenderer*"/>
        <parameter name="cell_area" type="cairo_rectangle_int_t"/>
        <parameter name="cell_background" type="cairo_rectangle_int_t"/>
        <parameter closure="3" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CellCallback" cname="GtkCellCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="renderer" type="GtkCellRenderer*"/>
        <parameter closure="1" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="CellLayoutDataFunc" cname="GtkCellLayoutDataFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="cell_layout" type="GtkCellLayout*"/>
        <parameter name="cell" type="GtkCellRenderer*"/>
        <parameter name="tree_model" type="GtkTreeModel*"/>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardClearFunc" cname="GtkClipboardClearFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="user_data_or_owner" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardGetFunc" cname="GtkClipboardGetFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="selection_data" type="GtkSelectionData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="info" type="guint"/>
        <parameter name="user_data_or_owner" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardImageReceivedFunc" cname="GtkClipboardImageReceivedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="pixbuf" type="GdkPixbuf*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardReceivedFunc" cname="GtkClipboardReceivedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="selection_data" type="GtkSelectionData*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardRichTextReceivedFunc" cname="GtkClipboardRichTextReceivedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="format" type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="text" type="guint8"/>
        <parameter name="length" type="gsize"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardTargetsReceivedFunc" cname="GtkClipboardTargetsReceivedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="atoms" type="GdkAtom*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="n_atoms" type="gint"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardTextReceivedFunc" cname="GtkClipboardTextReceivedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="text" type="const-gchar*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClipboardURIReceivedFunc" cname="GtkClipboardURIReceivedFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="clipboard" type="GtkClipboard*"/>
        <parameter name="uris" type="const-gchar*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ColorSelectionChangePaletteFunc" cname="GtkColorSelectionChangePaletteFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="colors" type="GdkColor*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="n_colors" type="gint"/>
      </parameters>
    </callback>
    <callback name="ColorSelectionChangePaletteWithScreenFunc" cname="GtkColorSelectionChangePaletteWithScreenFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="screen" type="GdkScreen*"/>
        <parameter name="colors" type="GdkColor*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="n_colors" type="gint"/>
      </parameters>
    </callback>
    <callback name="EntryCompletionMatchFunc" cname="GtkEntryCompletionMatchFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="completion" type="GtkEntryCompletion*"/>
        <parameter name="key" type="const-gchar*"/>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FileFilterFunc" cname="GtkFileFilterFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="filter_info" type="GtkFileFilterInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="1" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FontFilterFunc" cname="GtkFontFilterFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="family" type="PangoFontFamily*"/>
        <parameter name="face" type="PangoFontFace*"/>
        <parameter closure="2" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="IconViewForeachFunc" cname="GtkIconViewForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="icon_view" type="GtkIconView*"/>
        <parameter name="path" type="GtkTreePath*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="KeySnoopFunc" cname="GtkKeySnoopFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="grab_widget" type="GtkWidget*"/>
        <parameter name="event" type="GdkEventKey*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="func_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="MenuDetachFunc" cname="GtkMenuDetachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="attach_widget" type="GtkWidget*"/>
        <parameter name="menu" type="GtkMenu*"/>
      </parameters>
    </callback>
    <callback name="MenuPositionFunc" cname="GtkMenuPositionFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="menu" type="GtkMenu*"/>
        <parameter name="x" type="gint*" owned="true" pass_as="out"/>
        <parameter name="y" type="gint*" owned="true" pass_as="out"/>
        <parameter name="push_in" type="gboolean*" owned="true" pass_as="out"/>
        <parameter closure="4" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ModuleDisplayInitFunc" cname="GtkModuleDisplayInitFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="display" type="GdkDisplay*"/>
      </parameters>
    </callback>
    <callback name="ModuleInitFunc" cname="GtkModuleInitFunc">
      <return-type type="void"/>
      <parameters>
        <parameter allow-none="1" name="argc" type="gint"/>
        <parameter allow-none="1" name="argv" type="gchar***" array="true" array_length_param_index="0"/>
      </parameters>
    </callback>
    <callback name="PageSetupDoneFunc" cname="GtkPageSetupDoneFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="page_setup" type="GtkPageSetup*"/>
        <parameter closure="1" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PrintSettingsFunc" cname="GtkPrintSettingsFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="key" type="const-gchar*"/>
        <parameter name="value" type="const-gchar*"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="RcPropertyParser" cname="GtkRcPropertyParser">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pspec" type="GParamSpec*"/>
        <parameter name="rc_string" type="GString*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="property_value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
      </parameters>
    </callback>
    <callback name="RecentFilterFunc" cname="GtkRecentFilterFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="filter_info" type="GtkRecentFilterInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="RecentSortFunc" cname="GtkRecentSortFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="a" type="GtkRecentInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="b" type="GtkRecentInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="StylePropertyParser" cname="GtkStylePropertyParser">
      <return-type type="gboolean"/>
      <parameters throws="1">
        <parameter name="string" type="const-gchar*"/>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="error" type="GError**"/>
      </parameters>
    </callback>
    <callback name="TextBufferDeserializeFunc" cname="GtkTextBufferDeserializeFunc">
      <return-type type="gboolean"/>
      <parameters throws="1">
        <parameter name="register_buffer" type="GtkTextBuffer*"/>
        <parameter name="content_buffer" type="GtkTextBuffer*"/>
        <parameter name="iter" type="GtkTextIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="data" type="guint8"/>
        <parameter name="length" type="gsize"/>
        <parameter name="create_tags" type="gboolean"/>
        <parameter closure="6" name="user_data" type="gpointer"/>
        <parameter name="error" type="GError**"/>
      </parameters>
    </callback>
    <callback name="TextBufferSerializeFunc" cname="GtkTextBufferSerializeFunc">
      <return-type type="guint8"/>
      <parameters>
        <parameter name="register_buffer" type="GtkTextBuffer*"/>
        <parameter name="content_buffer" type="GtkTextBuffer*"/>
        <parameter name="start" type="GtkTextIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="end" type="GtkTextIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="length" type="gsize"/>
        <parameter closure="5" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TextCharPredicate" cname="GtkTextCharPredicate">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="ch" type="gunichar"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TextTagTableForeach" cname="GtkTextTagTableForeach">
      <return-type type="void"/>
      <parameters>
        <parameter name="tag" type="GtkTextTag*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TickCallback" cname="GtkTickCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="widget" type="GtkWidget*"/>
        <parameter name="frame_clock" type="GdkFrameClock*"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TranslateFunc" cname="GtkTranslateFunc">
      <return-type type="gchar*" owned="true"/>
      <parameters>
        <parameter name="path" type="const-gchar*"/>
        <parameter name="func_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeCellDataFunc" cname="GtkTreeCellDataFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="tree_column" type="GtkTreeViewColumn*"/>
        <parameter name="cell" type="GtkCellRenderer*"/>
        <parameter name="tree_model" type="GtkTreeModel*"/>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeDestroyCountFunc" cname="GtkTreeDestroyCountFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="tree_view" type="GtkTreeView*"/>
        <parameter name="path" type="GtkTreePath*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="children" type="gint"/>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeIterCompareFunc" cname="GtkTreeIterCompareFunc">
      <return-type type="gint"/>
      <parameters>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="a" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="b" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeModelFilterModifyFunc" cname="GtkTreeModelFilterModifyFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="value" type="GValue*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="column" type="gint"/>
        <parameter closure="4" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeModelFilterVisibleFunc" cname="GtkTreeModelFilterVisibleFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeModelForeachFunc" cname="GtkTreeModelForeachFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="path" type="GtkTreePath*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeSelectionForeachFunc" cname="GtkTreeSelectionForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="path" type="GtkTreePath*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="3" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeSelectionFunc" cname="GtkTreeSelectionFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="selection" type="GtkTreeSelection*"/>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="path" type="GtkTreePath*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter name="path_currently_selected" type="gboolean"/>
        <parameter closure="4" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeViewColumnDropFunc" cname="GtkTreeViewColumnDropFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="tree_view" type="GtkTreeView*"/>
        <parameter name="column" type="GtkTreeViewColumn*"/>
        <parameter name="prev_column" type="GtkTreeViewColumn*"/>
        <parameter name="next_column" type="GtkTreeViewColumn*"/>
        <parameter closure="4" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeViewMappingFunc" cname="GtkTreeViewMappingFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="tree_view" type="GtkTreeView*"/>
        <parameter name="path" type="GtkTreePath*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeViewRowSeparatorFunc" cname="GtkTreeViewRowSeparatorFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeViewSearchEqualFunc" cname="GtkTreeViewSearchEqualFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="model" type="GtkTreeModel*"/>
        <parameter name="column" type="gint"/>
        <parameter name="key" type="const-gchar*"/>
        <parameter name="iter" type="GtkTreeIter*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="4" name="search_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="TreeViewSearchPositionFunc" cname="GtkTreeViewSearchPositionFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="tree_view" type="GtkTreeView*"/>
        <parameter name="search_dialog" type="GtkWidget*"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <interface name="Actionable" cname="GtkActionable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkActionableInterface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_action_name"/>
        <method vm="set_action_name"/>
        <method vm="get_action_target_value"/>
        <method vm="set_action_target_value"/>
      </class_struct>
      <method name="GetType" cname="gtk_actionable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetActionName" cname="get_action_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetActionTargetValue" cname="get_action_target_value">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetActionName" cname="set_action_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="action_name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetActionTargetValue" cname="set_action_target_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="target_value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="GetActionName" cname="gtk_actionable_get_action_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetActionTargetValue" cname="gtk_actionable_get_action_target_value">
        <return-type type="GVariant*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="SetActionName" cname="gtk_actionable_set_action_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="action_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetActionTargetValue" cname="gtk_actionable_set_action_target_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="target_value" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDetailedActionName" cname="gtk_actionable_set_detailed_action_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="detailed_action_name" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="ActionName" cname="action-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ActionTarget" cname="action-target" type="GVariant*" readable="true" writeable="true" construct="false" construct-only="false"/>
    </interface>
    <interface name="Activatable" cname="GtkActivatable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkActivatableIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="update"/>
        <method vm="sync_action_properties"/>
      </class_struct>
      <method name="GetType" cname="gtk_activatable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="SyncActionProperties" cname="sync_action_properties">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="action" type="GtkAction*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Update" cname="update">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
          <parameter name="property_name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="DoSetRelatedAction" cname="gtk_activatable_do_set_related_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </method>
      <method name="GetRelatedAction" cname="gtk_activatable_get_related_action">
        <return-type type="GtkAction*"/>
        <parameters/>
      </method>
      <method name="GetUseActionAppearance" cname="gtk_activatable_get_use_action_appearance">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetRelatedAction" cname="gtk_activatable_set_related_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </method>
      <method name="SetUseActionAppearance" cname="gtk_activatable_set_use_action_appearance">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_appearance" type="gboolean"/>
        </parameters>
      </method>
      <method name="SyncActionProperties" cname="gtk_activatable_sync_action_properties">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="action" type="GtkAction*"/>
        </parameters>
      </method>
      <property name="RelatedAction" cname="related-action" type="GtkAction*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseActionAppearance" cname="use-action-appearance" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
    </interface>
    <interface name="AppChooser" cname="GtkAppChooser" abstract="false" opaque="false" hidden="false" consume_only="true">
      <method name="GetType" cname="gtk_app_chooser_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetAppInfo" cname="gtk_app_chooser_get_app_info">
        <return-type type="GAppInfo*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetContentType" cname="gtk_app_chooser_get_content_type">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Refresh" cname="gtk_app_chooser_refresh">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="ContentType" cname="content-type" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
    </interface>
    <interface name="Buildable" cname="GtkBuildable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkBuildableIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="set_name"/>
        <method vm="get_name"/>
        <method vm="add_child"/>
        <method vm="set_buildable_property"/>
        <method vm="construct_child"/>
        <method vm="custom_tag_start"/>
        <method vm="custom_tag_end"/>
        <method vm="custom_finished"/>
        <method vm="parser_finished"/>
        <method vm="get_internal_child"/>
      </class_struct>
      <method name="GetType" cname="gtk_buildable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="AddChild" cname="add_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="child" type="GObject*"/>
          <parameter allow-none="1" name="type" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ConstructChild" cname="construct_child">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CustomFinished" cname="custom_finished">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter allow-none="1" name="child" type="GObject*"/>
          <parameter name="tagname" type="const-gchar*"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CustomTagEnd" cname="custom_tag_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter allow-none="1" name="child" type="GObject*"/>
          <parameter name="tagname" type="const-gchar*"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CustomTagStart" cname="custom_tag_start">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter allow-none="1" name="child" type="GObject*"/>
          <parameter name="tagname" type="const-gchar*"/>
          <parameter name="parser" type="GMarkupParser*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetInternalChild" cname="get_internal_child">
        <return-type type="GObject*"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="childname" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetName" cname="get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="ParserFinished" cname="parser_finished">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetBuildableProperty" cname="set_buildable_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetName" cname="set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="AddChild" cname="gtk_buildable_add_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="child" type="GObject*"/>
          <parameter allow-none="1" name="type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ConstructChild" cname="gtk_buildable_construct_child">
        <return-type type="GObject*" owned="true"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="CustomFinished" cname="gtk_buildable_custom_finished">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter allow-none="1" name="child" type="GObject*"/>
          <parameter name="tagname" type="const-gchar*"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CustomTagEnd" cname="gtk_buildable_custom_tag_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter allow-none="1" name="child" type="GObject*"/>
          <parameter name="tagname" type="const-gchar*"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="CustomTagStart" cname="gtk_buildable_custom_tag_start">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter allow-none="1" name="child" type="GObject*"/>
          <parameter name="tagname" type="const-gchar*"/>
          <parameter name="parser" type="GMarkupParser*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="gpointer*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetInternalChild" cname="gtk_buildable_get_internal_child">
        <return-type type="GObject*"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="childname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetName" cname="gtk_buildable_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="ParserFinished" cname="gtk_buildable_parser_finished">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
        </parameters>
      </method>
      <method name="SetBuildableProperty" cname="gtk_buildable_set_buildable_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="builder" type="GtkBuilder*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetName" cname="gtk_buildable_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
    </interface>
    <interface name="CellEditable" cname="GtkCellEditable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkCellEditableIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="editing_done"/>
        <method signal_vm="remove_widget"/>
        <method vm="start_editing"/>
      </class_struct>
      <method name="GetType" cname="gtk_cell_editable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="StartEditing" cname="start_editing">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="event" type="GdkEvent*"/>
        </parameters>
      </virtual_method>
      <method name="StartEditing" cname="gtk_cell_editable_start_editing">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="event" type="GdkEvent*"/>
        </parameters>
      </method>
      <property name="EditingCanceled" cname="editing-canceled" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <signal name="EditingDone" cname="editing-done" when="last" field_name="editing_done">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="RemoveWidget" cname="remove-widget" when="last" field_name="remove_widget">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </interface>
    <interface name="CellLayout" cname="GtkCellLayout" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkCellLayoutIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="pack_start"/>
        <method vm="pack_end"/>
        <method vm="clear"/>
        <method vm="add_attribute"/>
        <method vm="set_cell_data_func"/>
        <method vm="clear_attributes"/>
        <method vm="reorder"/>
        <method vm="get_cells"/>
        <method vm="get_area"/>
      </class_struct>
      <method name="GetType" cname="gtk_cell_layout_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="AddAttribute" cname="add_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="column" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Clear" cname="clear">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="ClearAttributes" cname="clear_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetArea" cname="get_area">
        <return-type type="GtkCellArea*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetCells" cname="get_cells">
        <return-type type="GList*" element_type="GtkCellRenderer*" elements_owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="PackEnd" cname="pack_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PackStart" cname="pack_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Reorder" cname="reorder">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetCellDataFunc" cname="set_cell_data_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter closure="2" destroy="3" scope="notified" allow-none="1" name="func" type="GtkCellLayoutDataFunc"/>
          <parameter name="func_data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </virtual_method>
      <method name="AddAttribute" cname="gtk_cell_layout_add_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="Clear" cname="gtk_cell_layout_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ClearAttributes" cname="gtk_cell_layout_clear_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="GetArea" cname="gtk_cell_layout_get_area">
        <return-type type="GtkCellArea*"/>
        <parameters/>
      </method>
      <method name="GetCells" cname="gtk_cell_layout_get_cells">
        <return-type type="GList*" element_type="GtkCellRenderer*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="PackEnd" cname="gtk_cell_layout_pack_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_cell_layout_pack_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_cell_layout_reorder">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="SetCellDataFunc" cname="gtk_cell_layout_set_cell_data_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter closure="2" destroy="3" scope="notified" allow-none="1" name="func" type="GtkCellLayoutDataFunc"/>
          <parameter name="func_data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
    </interface>
    <interface name="ColorChooser" cname="GtkColorChooser" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkColorChooserInterface">
        <field cname="base_interface" access="public" writeable="false" readable="true" name="BaseInterface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_rgba"/>
        <method vm="set_rgba"/>
        <method vm="add_palette"/>
        <method signal_vm="color_activated"/>
        <field cname="padding" access="public" writeable="false" readable="true" name="Padding" type="gpointer" array="true" array_len="12"/>
      </class_struct>
      <method name="GetType" cname="gtk_color_chooser_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="AddPalette" cname="add_palette">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="colors_per_line" type="gint"/>
          <parameter name="n_colors" type="gint"/>
          <parameter allow-none="1" name="colors" type="GdkRGBA*" array="true" array_length_param_index="2"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetRgba" cname="get_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="SetRgba" cname="set_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="AddPalette" cname="gtk_color_chooser_add_palette">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="colors_per_line" type="gint"/>
          <parameter name="n_colors" type="gint"/>
          <parameter allow-none="1" name="colors" type="GdkRGBA*" array="true" array_length_param_index="2"/>
        </parameters>
      </method>
      <method name="GetRgba" cname="gtk_color_chooser_get_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetUseAlpha" cname="gtk_color_chooser_get_use_alpha">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetRgba" cname="gtk_color_chooser_set_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetUseAlpha" cname="gtk_color_chooser_set_use_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_alpha" type="gboolean"/>
        </parameters>
      </method>
      <property name="Rgba" cname="rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseAlpha" cname="use-alpha" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <signal name="ColorActivated" cname="color-activated" when="first" field_name="color_activated">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </interface>
    <interface name="Editable" cname="GtkEditable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkEditableInterface">
        <field cname="base_iface" access="public" writeable="false" readable="true" name="BaseIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="insert_text"/>
        <method signal_vm="delete_text"/>
        <method signal_vm="changed"/>
        <method vm="do_insert_text"/>
        <method vm="do_delete_text"/>
        <method vm="get_chars"/>
        <method vm="set_selection_bounds"/>
        <method vm="get_selection_bounds"/>
        <method vm="set_position"/>
        <method vm="get_position"/>
      </class_struct>
      <method name="GetType" cname="gtk_editable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="DoDeleteText" cname="do_delete_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_pos" type="gint"/>
          <parameter name="end_pos" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DoInsertText" cname="do_insert_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="new_text" type="const-gchar*"/>
          <parameter name="new_text_length" type="gint"/>
          <parameter name="position" type="gint*" owned="true" pass_as="ref"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetChars" cname="get_chars">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="start_pos" type="gint"/>
          <parameter name="end_pos" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPosition" cname="get_position">
        <return-type type="gint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetSelectionBounds" cname="get_selection_bounds">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="start_pos" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="end_pos" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetPosition" cname="set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetSelectionBounds" cname="set_selection_bounds">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_pos" type="gint"/>
          <parameter name="end_pos" type="gint"/>
        </parameters>
      </virtual_method>
      <method name="CopyClipboard" cname="gtk_editable_copy_clipboard">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="CutClipboard" cname="gtk_editable_cut_clipboard">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DeleteSelection" cname="gtk_editable_delete_selection">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetChars" cname="gtk_editable_get_chars">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="start_pos" type="gint"/>
          <parameter name="end_pos" type="gint"/>
        </parameters>
      </method>
      <method name="GetEditable" cname="gtk_editable_get_editable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPosition" cname="gtk_editable_get_position">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSelectionBounds" cname="gtk_editable_get_selection_bounds">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="start_pos" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="end_pos" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PasteClipboard" cname="gtk_editable_paste_clipboard">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SelectRegion" cname="gtk_editable_select_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_pos" type="gint"/>
          <parameter name="end_pos" type="gint"/>
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_editable_set_editable">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_editable_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <signal name="Changed" cname="changed" when="last" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="DeleteText" cname="delete-text" when="last" field_name="delete_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_pos" type="gint"/>
          <parameter name="end_pos" type="gint"/>
        </parameters>
      </signal>
      <signal name="InsertText" cname="insert-text" when="last" field_name="insert_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="new_text" type="const-gchar*"/>
          <parameter name="new_text_length" type="gint"/>
          <parameter name="position" type="gint*" owned="true" pass_as="ref"/>
        </parameters>
      </signal>
    </interface>
    <interface name="FileChooser" cname="GtkFileChooser" abstract="false" opaque="false" hidden="false" consume_only="true">
      <method name="GetType" cname="gtk_file_chooser_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AddFilter" cname="gtk_file_chooser_add_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkFileFilter*"/>
        </parameters>
      </method>
      <method name="AddShortcutFolder" cname="gtk_file_chooser_add_shortcut_folder">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="folder" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddShortcutFolderUri" cname="gtk_file_chooser_add_shortcut_folder_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="GetAction" cname="gtk_file_chooser_get_action">
        <return-type type="GtkFileChooserAction"/>
        <parameters/>
      </method>
      <method name="GetCreateFolders" cname="gtk_file_chooser_get_create_folders">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetCurrentFolder" cname="gtk_file_chooser_get_current_folder">
        <return-type type="gfilename*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetCurrentFolderFile" cname="gtk_file_chooser_get_current_folder_file">
        <return-type type="GFile*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetCurrentFolderUri" cname="gtk_file_chooser_get_current_folder_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetDoOverwriteConfirmation" cname="gtk_file_chooser_get_do_overwrite_confirmation">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetExtraWidget" cname="gtk_file_chooser_get_extra_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetFile" cname="gtk_file_chooser_get_file">
        <return-type type="GFile*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetFilename" cname="gtk_file_chooser_get_filename">
        <return-type type="gfilename*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetFilenames" cname="gtk_file_chooser_get_filenames">
        <return-type type="GSList*" element_type="gfilename*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="GetFiles" cname="gtk_file_chooser_get_files">
        <return-type type="GSList*" element_type="GFile*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="GetFilter" cname="gtk_file_chooser_get_filter">
        <return-type type="GtkFileFilter*"/>
        <parameters/>
      </method>
      <method name="GetLocalOnly" cname="gtk_file_chooser_get_local_only">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPreviewFile" cname="gtk_file_chooser_get_preview_file">
        <return-type type="GFile*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPreviewFilename" cname="gtk_file_chooser_get_preview_filename">
        <return-type type="gfilename*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPreviewUri" cname="gtk_file_chooser_get_preview_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPreviewWidget" cname="gtk_file_chooser_get_preview_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetPreviewWidgetActive" cname="gtk_file_chooser_get_preview_widget_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSelectMultiple" cname="gtk_file_chooser_get_select_multiple">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowHidden" cname="gtk_file_chooser_get_show_hidden">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUri" cname="gtk_file_chooser_get_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetUris" cname="gtk_file_chooser_get_uris">
        <return-type type="GSList*" element_type="gchar*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="GetUsePreviewLabel" cname="gtk_file_chooser_get_use_preview_label">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ListFilters" cname="gtk_file_chooser_list_filters">
        <return-type type="GSList*" element_type="GtkFileFilter*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="ListShortcutFolderUris" cname="gtk_file_chooser_list_shortcut_folder_uris">
        <return-type type="GSList*" element_type="gchar*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="ListShortcutFolders" cname="gtk_file_chooser_list_shortcut_folders">
        <return-type type="GSList*" element_type="gfilename*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="RemoveFilter" cname="gtk_file_chooser_remove_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkFileFilter*"/>
        </parameters>
      </method>
      <method name="RemoveShortcutFolder" cname="gtk_file_chooser_remove_shortcut_folder">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="folder" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="RemoveShortcutFolderUri" cname="gtk_file_chooser_remove_shortcut_folder_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_file_chooser_select_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SelectFile" cname="gtk_file_chooser_select_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file" type="GFile*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SelectFilename" cname="gtk_file_chooser_select_filename">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SelectUri" cname="gtk_file_chooser_select_uri">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetAction" cname="gtk_file_chooser_set_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkFileChooserAction"/>
        </parameters>
      </method>
      <method name="SetCreateFolders" cname="gtk_file_chooser_set_create_folders">
        <return-type type="void"/>
        <parameters>
          <parameter name="create_folders" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCurrentFolder" cname="gtk_file_chooser_set_current_folder">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SetCurrentFolderFile" cname="gtk_file_chooser_set_current_folder_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file" type="GFile*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetCurrentFolderUri" cname="gtk_file_chooser_set_current_folder_uri">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetCurrentName" cname="gtk_file_chooser_set_current_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SetDoOverwriteConfirmation" cname="gtk_file_chooser_set_do_overwrite_confirmation">
        <return-type type="void"/>
        <parameters>
          <parameter name="do_overwrite_confirmation" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetExtraWidget" cname="gtk_file_chooser_set_extra_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="extra_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetFile" cname="gtk_file_chooser_set_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file" type="GFile*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetFilename" cname="gtk_file_chooser_set_filename">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SetFilter" cname="gtk_file_chooser_set_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkFileFilter*"/>
        </parameters>
      </method>
      <method name="SetLocalOnly" cname="gtk_file_chooser_set_local_only">
        <return-type type="void"/>
        <parameters>
          <parameter name="local_only" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPreviewWidget" cname="gtk_file_chooser_set_preview_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="preview_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetPreviewWidgetActive" cname="gtk_file_chooser_set_preview_widget_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSelectMultiple" cname="gtk_file_chooser_set_select_multiple">
        <return-type type="void"/>
        <parameters>
          <parameter name="select_multiple" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowHidden" cname="gtk_file_chooser_set_show_hidden">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_hidden" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUri" cname="gtk_file_chooser_set_uri">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetUsePreviewLabel" cname="gtk_file_chooser_set_use_preview_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_label" type="gboolean"/>
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_file_chooser_unselect_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnselectFile" cname="gtk_file_chooser_unselect_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="file" type="GFile*"/>
        </parameters>
      </method>
      <method name="UnselectFilename" cname="gtk_file_chooser_unselect_filename">
        <return-type type="void"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="UnselectUri" cname="gtk_file_chooser_unselect_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Action" cname="action" type="GtkFileChooserAction" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CreateFolders" cname="create-folders" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DoOverwriteConfirmation" cname="do-overwrite-confirmation" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ExtraWidget" cname="extra-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Filter" cname="filter" type="GtkFileFilter*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LocalOnly" cname="local-only" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PreviewWidget" cname="preview-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PreviewWidgetActive" cname="preview-widget-active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SelectMultiple" cname="select-multiple" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowHidden" cname="show-hidden" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UsePreviewLabel" cname="use-preview-label" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <signal name="ConfirmOverwrite" cname="confirm-overwrite" when="last">
        <return-type type="GtkFileChooserConfirmation"/>
        <parameters/>
      </signal>
      <signal name="CurrentFolderChanged" cname="current-folder-changed" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="FileActivated" cname="file-activated" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="SelectionChanged" cname="selection-changed" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="UpdatePreview" cname="update-preview" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </interface>
    <interface name="FontChooser" cname="GtkFontChooser" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkFontChooserIface">
        <field cname="base_iface" access="public" writeable="false" readable="true" name="BaseIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_font_family"/>
        <method vm="get_font_face"/>
        <method vm="get_font_size"/>
        <method vm="set_filter_func"/>
        <method signal_vm="font_activated"/>
        <field cname="padding" access="public" writeable="false" readable="true" name="Padding" type="gpointer" array="true" array_len="12"/>
      </class_struct>
      <method name="GetType" cname="gtk_font_chooser_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetFontFace" cname="get_font_face">
        <return-type type="PangoFontFace*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetFontFamily" cname="get_font_family">
        <return-type type="PangoFontFamily*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetFontSize" cname="get_font_size">
        <return-type type="gint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetFilterFunc" cname="set_filter_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="filter" type="GtkFontFilterFunc"/>
          <parameter closure="1" name="user_data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </virtual_method>
      <method name="GetFont" cname="gtk_font_chooser_get_font">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetFontDesc" cname="gtk_font_chooser_get_font_desc">
        <return-type type="PangoFontDescription*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetFontFace" cname="gtk_font_chooser_get_font_face">
        <return-type type="PangoFontFace*"/>
        <parameters/>
      </method>
      <method name="GetFontFamily" cname="gtk_font_chooser_get_font_family">
        <return-type type="PangoFontFamily*"/>
        <parameters/>
      </method>
      <method name="GetFontSize" cname="gtk_font_chooser_get_font_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPreviewText" cname="gtk_font_chooser_get_preview_text">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetShowPreviewEntry" cname="gtk_font_chooser_get_show_preview_entry">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetFilterFunc" cname="gtk_font_chooser_set_filter_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="filter" type="GtkFontFilterFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetFont" cname="gtk_font_chooser_set_font">
        <return-type type="void"/>
        <parameters>
          <parameter name="fontname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetFontDesc" cname="gtk_font_chooser_set_font_desc">
        <return-type type="void"/>
        <parameters>
          <parameter name="font_desc" type="PangoFontDescription*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gtk_font_chooser_set_preview_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetShowPreviewEntry" cname="gtk_font_chooser_set_show_preview_entry">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_preview_entry" type="gboolean"/>
        </parameters>
      </method>
      <property name="Font" cname="font" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FontDesc" cname="font-desc" type="PangoFontDescription*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PreviewText" cname="preview-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowPreviewEntry" cname="show-preview-entry" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <signal name="FontActivated" cname="font-activated" when="first" field_name="font_activated">
        <return-type type="void"/>
        <parameters>
          <parameter name="fontname" type="const-gchar*"/>
        </parameters>
      </signal>
    </interface>
    <interface name="Orientable" cname="GtkOrientable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkOrientableIface">
        <field cname="base_iface" access="public" writeable="false" readable="true" name="BaseIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_orientable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetOrientation" cname="gtk_orientable_get_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </method>
      <method name="SetOrientation" cname="gtk_orientable_set_orientation">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </method>
      <property name="Orientation" cname="orientation" type="GtkOrientation" readable="true" writeable="true" construct="false" construct-only="false"/>
    </interface>
    <interface name="PrintOperationPreview" cname="GtkPrintOperationPreview" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkPrintOperationPreviewIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="ready"/>
        <method signal_vm="got_page_size"/>
        <method vm="render_page"/>
        <method vm="is_selected"/>
        <method vm="end_preview"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_print_operation_preview_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="EndPreview" cname="end_preview">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="IsSelected" cname="is_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="page_nr" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderPage" cname="render_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_nr" type="gint"/>
        </parameters>
      </virtual_method>
      <method name="EndPreview" cname="gtk_print_operation_preview_end_preview">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="IsSelected" cname="gtk_print_operation_preview_is_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="page_nr" type="gint"/>
        </parameters>
      </method>
      <method name="RenderPage" cname="gtk_print_operation_preview_render_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_nr" type="gint"/>
        </parameters>
      </method>
      <signal name="GotPageSize" cname="got-page-size" when="last" field_name="got_page_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkPrintContext*"/>
          <parameter name="page_setup" type="GtkPageSetup*"/>
        </parameters>
      </signal>
      <signal name="Ready" cname="ready" when="last" field_name="ready">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkPrintContext*"/>
        </parameters>
      </signal>
    </interface>
    <interface name="RecentChooser" cname="GtkRecentChooser" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkRecentChooserIface">
        <field cname="base_iface" access="public" writeable="false" readable="true" name="BaseIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="set_current_uri"/>
        <method vm="get_current_uri"/>
        <method vm="select_uri"/>
        <method vm="unselect_uri"/>
        <method vm="select_all"/>
        <method vm="unselect_all"/>
        <method vm="get_items"/>
        <method vm="get_recent_manager"/>
        <method vm="add_filter"/>
        <method vm="remove_filter"/>
        <method vm="list_filters"/>
        <method vm="set_sort_func"/>
        <method signal_vm="item_activated"/>
        <method signal_vm="selection_changed"/>
      </class_struct>
      <method name="GetType" cname="gtk_recent_chooser_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="AddFilter" cname="add_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkRecentFilter*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetCurrentUri" cname="get_current_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetItems" cname="get_items">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetRecentManager" cname="get_recent_manager" hidden="true">
        <return-type type="GtkRecentManager*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="ListFilters" cname="list_filters">
        <return-type type="GSList*" element_type="GtkRecentFilter*" elements_owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="RemoveFilter" cname="remove_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkRecentFilter*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SelectAll" cname="select_all">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SelectUri" cname="select_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetCurrentUri" cname="set_current_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortFunc" cname="set_sort_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="sort_func" type="GtkRecentSortFunc"/>
          <parameter allow-none="1" name="sort_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="data_destroy" type="GDestroyNotify"/>
        </parameters>
      </virtual_method>
      <virtual_method name="UnselectAll" cname="unselect_all">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="UnselectUri" cname="unselect_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="AddFilter" cname="gtk_recent_chooser_add_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkRecentFilter*"/>
        </parameters>
      </method>
      <method name="GetCurrentItem" cname="gtk_recent_chooser_get_current_item">
        <return-type type="GtkRecentInfo*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetCurrentUri" cname="gtk_recent_chooser_get_current_uri">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetFilter" cname="gtk_recent_chooser_get_filter">
        <return-type type="GtkRecentFilter*"/>
        <parameters/>
      </method>
      <method name="GetItems" cname="gtk_recent_chooser_get_items">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetLimit" cname="gtk_recent_chooser_get_limit">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetLocalOnly" cname="gtk_recent_chooser_get_local_only">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSelectMultiple" cname="gtk_recent_chooser_get_select_multiple">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowIcons" cname="gtk_recent_chooser_get_show_icons">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowNotFound" cname="gtk_recent_chooser_get_show_not_found">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowPrivate" cname="gtk_recent_chooser_get_show_private">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowTips" cname="gtk_recent_chooser_get_show_tips">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSortType" cname="gtk_recent_chooser_get_sort_type">
        <return-type type="GtkRecentSortType"/>
        <parameters/>
      </method>
      <method name="GetUris" cname="gtk_recent_chooser_get_uris">
        <return-type type="gchar***" owned="true" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter allow-none="1" name="length" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ListFilters" cname="gtk_recent_chooser_list_filters">
        <return-type type="GSList*" element_type="GtkRecentFilter*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="RemoveFilter" cname="gtk_recent_chooser_remove_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkRecentFilter*"/>
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_recent_chooser_select_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SelectUri" cname="gtk_recent_chooser_select_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetCurrentUri" cname="gtk_recent_chooser_set_current_uri">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetFilter" cname="gtk_recent_chooser_set_filter">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter" type="GtkRecentFilter*"/>
        </parameters>
      </method>
      <method name="SetLimit" cname="gtk_recent_chooser_set_limit">
        <return-type type="void"/>
        <parameters>
          <parameter name="limit" type="gint"/>
        </parameters>
      </method>
      <method name="SetLocalOnly" cname="gtk_recent_chooser_set_local_only">
        <return-type type="void"/>
        <parameters>
          <parameter name="local_only" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSelectMultiple" cname="gtk_recent_chooser_set_select_multiple">
        <return-type type="void"/>
        <parameters>
          <parameter name="select_multiple" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowIcons" cname="gtk_recent_chooser_set_show_icons">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_icons" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowNotFound" cname="gtk_recent_chooser_set_show_not_found">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_not_found" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowPrivate" cname="gtk_recent_chooser_set_show_private">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_private" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowTips" cname="gtk_recent_chooser_set_show_tips">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_tips" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSortFunc" cname="gtk_recent_chooser_set_sort_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="sort_func" type="GtkRecentSortFunc"/>
          <parameter allow-none="1" name="sort_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="data_destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetSortType" cname="gtk_recent_chooser_set_sort_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="sort_type" type="GtkRecentSortType"/>
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_recent_chooser_unselect_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnselectUri" cname="gtk_recent_chooser_unselect_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Filter" cname="filter" type="GtkRecentFilter*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Limit" cname="limit" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LocalOnly" cname="local-only" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RecentManager" cname="recent-manager" type="GtkRecentManager*" readable="false" writeable="true" construct="false" construct-only="true"/>
      <property name="SelectMultiple" cname="select-multiple" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowIcons" cname="show-icons" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowNotFound" cname="show-not-found" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowPrivate" cname="show-private" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowTips" cname="show-tips" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SortType" cname="sort-type" type="GtkRecentSortType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <signal name="ItemActivated" cname="item-activated" when="last" field_name="item_activated">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="SelectionChanged" cname="selection-changed" when="last" field_name="selection_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </interface>
    <interface name="Scrollable" cname="GtkScrollable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkScrollableInterface">
        <field cname="base_iface" access="public" writeable="false" readable="true" name="BaseIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_scrollable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetHadjustment" cname="gtk_scrollable_get_hadjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetHscrollPolicy" cname="gtk_scrollable_get_hscroll_policy">
        <return-type type="GtkScrollablePolicy"/>
        <parameters/>
      </method>
      <method name="GetVadjustment" cname="gtk_scrollable_get_vadjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetVscrollPolicy" cname="gtk_scrollable_get_vscroll_policy">
        <return-type type="GtkScrollablePolicy"/>
        <parameters/>
      </method>
      <method name="SetHadjustment" cname="gtk_scrollable_set_hadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="hadjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetHscrollPolicy" cname="gtk_scrollable_set_hscroll_policy">
        <return-type type="void"/>
        <parameters>
          <parameter name="policy" type="GtkScrollablePolicy"/>
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_scrollable_set_vadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="vadjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetVscrollPolicy" cname="gtk_scrollable_set_vscroll_policy">
        <return-type type="void"/>
        <parameters>
          <parameter name="policy" type="GtkScrollablePolicy"/>
        </parameters>
      </method>
      <property name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="HscrollPolicy" cname="hscroll-policy" type="GtkScrollablePolicy" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="VscrollPolicy" cname="vscroll-policy" type="GtkScrollablePolicy" readable="true" writeable="true" construct="false" construct-only="false"/>
    </interface>
    <interface name="StyleProvider" cname="GtkStyleProvider" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkStyleProviderIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_style"/>
        <method vm="get_style_property"/>
        <method vm="get_icon_factory"/>
      </class_struct>
      <method name="GetType" cname="gtk_style_provider_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetIconFactory" cname="get_icon_factory" deprecated="true">
        <return-type type="GtkIconFactory*"/>
        <parameters>
          <parameter name="path" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetStyle" cname="get_style" deprecated="true">
        <return-type type="GtkStyleProperties*" owned="true"/>
        <parameters>
          <parameter name="path" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetStyleProperty" cname="get_style_property">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="GetIconFactory" cname="gtk_style_provider_get_icon_factory" deprecated="true">
        <return-type type="GtkIconFactory*"/>
        <parameters>
          <parameter name="path" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetStyle" cname="gtk_style_provider_get_style" deprecated="true">
        <return-type type="GtkStyleProperties*" owned="true"/>
        <parameters>
          <parameter name="path" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetStyleProperty" cname="gtk_style_provider_get_style_property">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </interface>
    <interface name="ToolShell" cname="GtkToolShell" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkToolShellIface">
        <field cname="g_iface" access="private" writeable="false" readable="false" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_icon_size"/>
        <method vm="get_orientation"/>
        <method vm="get_style"/>
        <method vm="get_relief_style"/>
        <method vm="rebuild_menu"/>
        <method vm="get_text_orientation"/>
        <method vm="get_text_alignment"/>
        <method vm="get_ellipsize_mode"/>
        <method vm="get_text_size_group"/>
      </class_struct>
      <method name="GetType" cname="gtk_tool_shell_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetEllipsizeMode" cname="get_ellipsize_mode">
        <return-type type="PangoEllipsizeMode"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetIconSize" cname="get_icon_size">
        <return-type type="GtkIconSize"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetOrientation" cname="get_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetReliefStyle" cname="get_relief_style">
        <return-type type="GtkReliefStyle"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetStyle" cname="get_style">
        <return-type type="GtkToolbarStyle"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetTextAlignment" cname="get_text_alignment">
        <return-type type="gfloat"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetTextOrientation" cname="get_text_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetTextSizeGroup" cname="get_text_size_group">
        <return-type type="GtkSizeGroup*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="RebuildMenu" cname="rebuild_menu">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <method name="GetEllipsizeMode" cname="gtk_tool_shell_get_ellipsize_mode">
        <return-type type="PangoEllipsizeMode"/>
        <parameters/>
      </method>
      <method name="GetIconSize" cname="gtk_tool_shell_get_icon_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetOrientation" cname="gtk_tool_shell_get_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </method>
      <method name="GetReliefStyle" cname="gtk_tool_shell_get_relief_style">
        <return-type type="GtkReliefStyle"/>
        <parameters/>
      </method>
      <method name="GetStyle" cname="gtk_tool_shell_get_style">
        <return-type type="GtkToolbarStyle"/>
        <parameters/>
      </method>
      <method name="GetTextAlignment" cname="gtk_tool_shell_get_text_alignment">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetTextOrientation" cname="gtk_tool_shell_get_text_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </method>
      <method name="GetTextSizeGroup" cname="gtk_tool_shell_get_text_size_group">
        <return-type type="GtkSizeGroup*"/>
        <parameters/>
      </method>
      <method name="RebuildMenu" cname="gtk_tool_shell_rebuild_menu">
        <return-type type="void"/>
        <parameters/>
      </method>
    </interface>
    <interface name="TreeDragDest" cname="GtkTreeDragDest" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkTreeDragDestIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="drag_data_received"/>
        <method vm="row_drop_possible"/>
      </class_struct>
      <method name="GetType" cname="gtk_tree_drag_dest_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="DragDataReceived" cname="drag_data_received">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="RowDropPossible" cname="row_drop_possible">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="DragDataReceived" cname="gtk_tree_drag_dest_drag_data_received">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RowDropPossible" cname="gtk_tree_drag_dest_row_drop_possible">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </interface>
    <interface name="TreeDragSource" cname="GtkTreeDragSource" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkTreeDragSourceIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="row_draggable"/>
        <method vm="drag_data_get"/>
        <method vm="drag_data_delete"/>
      </class_struct>
      <method name="GetType" cname="gtk_tree_drag_source_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="DragDataDelete" cname="drag_data_delete">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="DragDataGet" cname="drag_data_get">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="RowDraggable" cname="row_draggable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="DragDataDelete" cname="gtk_tree_drag_source_drag_data_delete">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DragDataGet" cname="gtk_tree_drag_source_drag_data_get">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RowDraggable" cname="gtk_tree_drag_source_row_draggable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </interface>
    <interface name="TreeModel" cname="GtkTreeModel" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkTreeModelIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="row_changed"/>
        <method signal_vm="row_inserted"/>
        <method signal_vm="row_has_child_toggled"/>
        <method signal_vm="row_deleted"/>
        <method signal_vm="rows_reordered"/>
        <method vm="get_flags"/>
        <method vm="get_n_columns"/>
        <method vm="get_column_type"/>
        <method vm="get_iter"/>
        <method vm="get_path"/>
        <method vm="get_value"/>
        <method vm="iter_next"/>
        <method vm="iter_previous"/>
        <method vm="iter_children"/>
        <method vm="iter_has_child"/>
        <method vm="iter_n_children"/>
        <method vm="iter_nth_child"/>
        <method vm="iter_parent"/>
        <method vm="ref_node"/>
        <method vm="unref_node"/>
      </class_struct>
      <method name="GetType" cname="gtk_tree_model_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetColumnType" cname="get_column_type">
        <return-type type="GType"/>
        <parameters>
          <parameter name="index_" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetFlags" cname="get_flags">
        <return-type type="GtkTreeModelFlags"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetIter" cname="get_iter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetNColumns" cname="get_n_columns">
        <return-type type="gint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetPath" cname="get_path">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="column" type="gint"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="IterChildren" cname="iter_children">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="IterHasChild" cname="iter_has_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="IterNChildren" cname="iter_n_children">
        <return-type type="gint"/>
        <parameters>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="IterNext" cname="iter_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="IterNthChild" cname="iter_nth_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="IterParent" cname="iter_parent">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="child" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="IterPrevious" cname="iter_previous">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="RefNode" cname="ref_node">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="UnrefNode" cname="unref_node">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="FilterNew" cname="gtk_tree_model_filter_new">
        <return-type type="GtkTreeModel*" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="root" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_tree_model_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GtkTreeModelForeachFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetColumnType" cname="gtk_tree_model_get_column_type">
        <return-type type="GType"/>
        <parameters>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="GetFlags" cname="gtk_tree_model_get_flags">
        <return-type type="GtkTreeModelFlags"/>
        <parameters/>
      </method>
      <method name="GetIter" cname="gtk_tree_model_get_iter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetIterFirst" cname="gtk_tree_model_get_iter_first">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetIterFromString" cname="gtk_tree_model_get_iter_from_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path_string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetNColumns" cname="gtk_tree_model_get_n_columns">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPath" cname="gtk_tree_model_get_path">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetStringFromIter" cname="gtk_tree_model_get_string_from_iter">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetValue" cname="gtk_tree_model_get_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="column" type="gint"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterChildren" cname="gtk_tree_model_iter_children">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterHasChild" cname="gtk_tree_model_iter_has_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterNChildren" cname="gtk_tree_model_iter_n_children">
        <return-type type="gint"/>
        <parameters>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterNext" cname="gtk_tree_model_iter_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterNthChild" cname="gtk_tree_model_iter_nth_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n" type="gint"/>
        </parameters>
      </method>
      <method name="IterParent" cname="gtk_tree_model_iter_parent">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="child" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterPrevious" cname="gtk_tree_model_iter_previous">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RefNode" cname="gtk_tree_model_ref_node">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SortNewWithModel" cname="gtk_tree_model_sort_new_with_model">
        <return-type type="GtkTreeModel*" owned="true"/>
        <parameters/>
      </method>
      <method name="UnrefNode" cname="gtk_tree_model_unref_node">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <signal name="RowChanged" cname="row-changed" when="last" field_name="row_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="RowDeleted" cname="row-deleted" when="first" field_name="row_deleted">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="RowHasChildToggled" cname="row-has-child-toggled" when="last" field_name="row_has_child_toggled">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="RowInserted" cname="row-inserted" when="first" field_name="row_inserted">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="RowsReordered" cname="rows-reordered" when="first" field_name="rows_reordered">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="new_order" type="gpointer"/>
        </parameters>
      </signal>
    </interface>
    <interface name="TreeSortable" cname="GtkTreeSortable" abstract="false" opaque="false" hidden="false">
      <class_struct cname="GtkTreeSortableIface">
        <field cname="g_iface" access="public" writeable="false" readable="true" name="GIface" type="GTypeInterface">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="sort_column_changed"/>
        <method vm="get_sort_column_id"/>
        <method vm="set_sort_column_id"/>
        <method vm="set_sort_func"/>
        <method vm="set_default_sort_func"/>
        <method vm="has_default_sort_func"/>
      </class_struct>
      <method name="GetType" cname="gtk_tree_sortable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetSortColumnId" cname="get_sort_column_id">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="sort_column_id" type="gint*" owned="true" pass_as="out"/>
          <parameter name="order" type="GtkSortType" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="HasDefaultSortFunc" cname="has_default_sort_func">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetDefaultSortFunc" cname="set_default_sort_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="sort_func" type="GtkTreeIterCompareFunc"/>
          <parameter closure="1" allow-none="1" name="user_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortColumnId" cname="set_sort_column_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="sort_column_id" type="gint"/>
          <parameter name="order" type="GtkSortType"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortFunc" cname="set_sort_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="sort_column_id" type="gint"/>
          <parameter closure="2" destroy="3" scope="notified" name="sort_func" type="GtkTreeIterCompareFunc"/>
          <parameter closure="2" allow-none="1" name="user_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </virtual_method>
      <method name="GetSortColumnId" cname="gtk_tree_sortable_get_sort_column_id">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="sort_column_id" type="gint*" owned="true" pass_as="out"/>
          <parameter name="order" type="GtkSortType" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="HasDefaultSortFunc" cname="gtk_tree_sortable_has_default_sort_func">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDefaultSortFunc" cname="gtk_tree_sortable_set_default_sort_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="sort_func" type="GtkTreeIterCompareFunc"/>
          <parameter allow-none="1" name="user_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetSortColumnId" cname="gtk_tree_sortable_set_sort_column_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="sort_column_id" type="gint"/>
          <parameter name="order" type="GtkSortType"/>
        </parameters>
      </method>
      <method name="SetSortFunc" cname="gtk_tree_sortable_set_sort_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="sort_column_id" type="gint"/>
          <parameter closure="2" destroy="3" scope="notified" name="sort_func" type="GtkTreeIterCompareFunc"/>
          <parameter allow-none="1" name="user_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <signal name="SortColumnChanged" cname="sort-column-changed" when="last" field_name="sort_column_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </interface>
    <object name="AboutDialog" cname="GtkAboutDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkAboutDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="activate_link"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_about_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_about_dialog_new" disable_void_ctor=""/>
      <method name="AddCreditSection" cname="gtk_about_dialog_add_credit_section">
        <return-type type="void"/>
        <parameters>
          <parameter name="section_name" type="const-gchar*"/>
          <parameter name="people" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="GetArtists" cname="gtk_about_dialog_get_artists">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetAuthors" cname="gtk_about_dialog_get_authors">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetComments" cname="gtk_about_dialog_get_comments">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetCopyright" cname="gtk_about_dialog_get_copyright">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetDocumenters" cname="gtk_about_dialog_get_documenters">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="GetLicense" cname="gtk_about_dialog_get_license">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLicenseType" cname="gtk_about_dialog_get_license_type">
        <return-type type="GtkLicense"/>
        <parameters/>
      </method>
      <method name="GetLogo" cname="gtk_about_dialog_get_logo">
        <return-type type="GdkPixbuf*"/>
        <parameters/>
      </method>
      <method name="GetLogoIconName" cname="gtk_about_dialog_get_logo_icon_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetProgramName" cname="gtk_about_dialog_get_program_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTranslatorCredits" cname="gtk_about_dialog_get_translator_credits">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetVersion" cname="gtk_about_dialog_get_version">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetWebsite" cname="gtk_about_dialog_get_website">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetWebsiteLabel" cname="gtk_about_dialog_get_website_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetWrapLicense" cname="gtk_about_dialog_get_wrap_license">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetArtists" cname="gtk_about_dialog_set_artists">
        <return-type type="void"/>
        <parameters>
          <parameter name="artists" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="SetAuthors" cname="gtk_about_dialog_set_authors">
        <return-type type="void"/>
        <parameters>
          <parameter name="authors" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="SetComments" cname="gtk_about_dialog_set_comments">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="comments" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetCopyright" cname="gtk_about_dialog_set_copyright">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="copyright" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDocumenters" cname="gtk_about_dialog_set_documenters">
        <return-type type="void"/>
        <parameters>
          <parameter name="documenters" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="SetLicense" cname="gtk_about_dialog_set_license">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="license" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLicenseType" cname="gtk_about_dialog_set_license_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="license_type" type="GtkLicense"/>
        </parameters>
      </method>
      <method name="SetLogo" cname="gtk_about_dialog_set_logo">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="logo" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetLogoIconName" cname="gtk_about_dialog_set_logo_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetProgramName" cname="gtk_about_dialog_set_program_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTranslatorCredits" cname="gtk_about_dialog_set_translator_credits">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="translator_credits" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetVersion" cname="gtk_about_dialog_set_version">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="version" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetWebsite" cname="gtk_about_dialog_set_website">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="website" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetWebsiteLabel" cname="gtk_about_dialog_set_website_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="website_label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetWrapLicense" cname="gtk_about_dialog_set_wrap_license">
        <return-type type="void"/>
        <parameters>
          <parameter name="wrap_license" type="gboolean"/>
        </parameters>
      </method>
      <property name="Comments" cname="comments" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Copyright" cname="copyright" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="License" cname="license" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LicenseType" cname="license-type" type="GtkLicense" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Logo" cname="logo" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LogoIconName" cname="logo-icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ProgramName" cname="program-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TranslatorCredits" cname="translator-credits" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Version" cname="version" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Website" cname="website" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WebsiteLabel" cname="website-label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapLicense" cname="wrap-license" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAboutDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActivateLink" cname="activate-link" when="last" field_name="activate_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="AccelGroup" cname="GtkAccelGroup" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkAccelGroupClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="accel_changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_accel_group_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_accel_group_new" disable_void_ctor=""/>
      <method name="FromAccelClosure" cname="gtk_accel_group_from_accel_closure" shared="true">
        <return-type type="GtkAccelGroup*"/>
        <parameters>
          <parameter name="closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Activate" cname="gtk_accel_group_activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="accel_quark" type="guint32"/>
          <parameter name="acceleratable" type="GObject*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="Connect" cname="gtk_accel_group_connect">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
          <parameter name="accel_flags" type="GtkAccelFlags"/>
          <parameter name="closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConnectByPath" cname="gtk_accel_group_connect_by_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
          <parameter name="closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Disconnect" cname="gtk_accel_group_disconnect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DisconnectKey" cname="gtk_accel_group_disconnect_key">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="Find" cname="gtk_accel_group_find">
        <return-type type="GtkAccelKey*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter closure="1" scope="call" name="find_func" type="GtkAccelGroupFindFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetIsLocked" cname="gtk_accel_group_get_is_locked">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetModifierMask" cname="gtk_accel_group_get_modifier_mask">
        <return-type type="GdkModifierType"/>
        <parameters/>
      </method>
      <method name="Lock" cname="gtk_accel_group_lock">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Query" cname="gtk_accel_group_query">
        <return-type type="GtkAccelGroupEntry*" array="true" array_length_param_index="2"/>
        <parameters>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
          <parameter allow-none="1" name="n_entries" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Unlock" cname="gtk_accel_group_unlock">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="IsLocked" cname="is-locked" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="ModifierMask" cname="modifier-mask" type="GdkModifierType" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkAccelGroupPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="AccelActivate" cname="accel-activate" when="">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="acceleratable" type="GObject*"/>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifier" type="GdkModifierType"/>
        </parameters>
      </signal>
      <signal name="AccelChanged" cname="accel-changed" when="first" field_name="accel_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifier" type="GdkModifierType"/>
          <parameter name="accel_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="AccelLabel" cname="GtkAccelLabel" abstract="false" opaque="false" hidden="false" parent="GtkLabel">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkAccelLabelClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkLabelClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="signal_quote1" access="public" writeable="false" readable="true" name="SignalQuote1" type="gchar*"/>
        <field cname="signal_quote2" access="public" writeable="false" readable="true" name="SignalQuote2" type="gchar*"/>
        <field cname="mod_name_shift" access="public" writeable="false" readable="true" name="ModNameShift" type="gchar*"/>
        <field cname="mod_name_control" access="public" writeable="false" readable="true" name="ModNameControl" type="gchar*"/>
        <field cname="mod_name_alt" access="public" writeable="false" readable="true" name="ModNameAlt" type="gchar*"/>
        <field cname="mod_separator" access="public" writeable="false" readable="true" name="ModSeparator" type="gchar*"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_accel_label_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_accel_label_new">
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetAccelWidget" cname="gtk_accel_label_get_accel_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetAccelWidth" cname="gtk_accel_label_get_accel_width">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Refetch" cname="gtk_accel_label_refetch">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAccel" cname="gtk_accel_label_set_accel">
        <return-type type="void"/>
        <parameters>
          <parameter name="accelerator_key" type="guint"/>
          <parameter name="accelerator_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="SetAccelClosure" cname="gtk_accel_label_set_accel_closure">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_closure" type="GClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetAccelWidget" cname="gtk_accel_label_set_accel_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <property name="AccelClosure" cname="accel-closure" type="GClosure*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AccelWidget" cname="accel-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="label" access="public" writeable="false" readable="true" name="Label" type="GtkLabel*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkAccelLabelPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="AccelMap" cname="GtkAccelMap" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkAccelMapClass"/>
      <method name="GetType" cname="gtk_accel_map_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="AddEntry" cname="gtk_accel_map_add_entry" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AddFilter" cname="gtk_accel_map_add_filter" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="filter_pattern" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ChangeEntry" cname="gtk_accel_map_change_entry" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
          <parameter name="replace" type="gboolean"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_accel_map_foreach" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="call" name="foreach_func" type="GtkAccelMapForeach"/>
        </parameters>
      </method>
      <method name="ForeachUnfiltered" cname="gtk_accel_map_foreach_unfiltered" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="gpointer"/>
          <parameter scope="call" name="foreach_func" type="GtkAccelMapForeach"/>
        </parameters>
      </method>
      <method name="Get" cname="gtk_accel_map_get" shared="true">
        <return-type type="GtkAccelMap*"/>
      </method>
      <method name="Load" cname="gtk_accel_map_load" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_name" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="LoadFd" cname="gtk_accel_map_load_fd" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="fd" type="gint"/>
        </parameters>
      </method>
      <method name="LoadScanner" cname="gtk_accel_map_load_scanner" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="scanner" type="GScanner*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LockPath" cname="gtk_accel_map_lock_path" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LookupEntry" cname="gtk_accel_map_lookup_entry" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
          <parameter allow-none="1" name="key" type="GtkAccelKey*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Save" cname="gtk_accel_map_save" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="file_name" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SaveFd" cname="gtk_accel_map_save_fd" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="fd" type="gint"/>
        </parameters>
      </method>
      <method name="UnlockPath" cname="gtk_accel_map_unlock_path" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
        </parameters>
      </method>
      <signal name="Changed" cname="changed" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
        </parameters>
      </signal>
    </object>
    <object name="Accessible" cname="GtkAccessible" abstract="false" opaque="false" hidden="false" parent="AtkObject">
      <class_struct cname="GtkAccessibleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="AtkObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="connect_widget_destroyed"/>
        <method vm="widget_set"/>
        <method vm="widget_unset"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_accessible_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="ConnectWidgetDestroyed" cname="connect_widget_destroyed" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="WidgetSet" cname="widget_set">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="WidgetUnset" cname="widget_unset">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <method name="ConnectWidgetDestroyed" cname="gtk_accessible_connect_widget_destroyed" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetWidget" cname="gtk_accessible_get_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="SetWidget" cname="gtk_accessible_set_widget">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <property name="Widget" cname="widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="AtkObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAccessiblePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Action" cname="GtkAction" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkActionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="activate"/>
        <field cname="menu_item_type" access="public" writeable="false" readable="true" name="MenuItemType" type="GType"/>
        <field cname="toolbar_item_type" access="public" writeable="false" readable="true" name="ToolbarItemType" type="GType"/>
        <method vm="create_menu_item"/>
        <method vm="create_tool_item"/>
        <method vm="connect_proxy"/>
        <method vm="disconnect_proxy"/>
        <method vm="create_menu"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_action_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_action_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="tooltip" type="const-gchar*"/>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="ConnectProxy" cname="connect_proxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy" type="GtkWidget*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CreateMenu" cname="create_menu">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="CreateMenuItem" cname="create_menu_item">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="CreateToolItem" cname="create_tool_item">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="DisconnectProxy" cname="disconnect_proxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy" type="GtkWidget*"/>
        </parameters>
      </virtual_method>
      <method name="BlockActivate" cname="gtk_action_block_activate">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ConnectAccelerator" cname="gtk_action_connect_accelerator">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="CreateIcon" cname="gtk_action_create_icon">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="icon_size" type="gint"/>
        </parameters>
      </method>
      <method name="CreateMenu" cname="gtk_action_create_menu">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="CreateMenuItem" cname="gtk_action_create_menu_item">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="CreateToolItem" cname="gtk_action_create_tool_item">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="DisconnectAccelerator" cname="gtk_action_disconnect_accelerator">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAccelClosure" cname="gtk_action_get_accel_closure">
        <return-type type="GClosure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetAccelPath" cname="gtk_action_get_accel_path">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetAlwaysShowImage" cname="gtk_action_get_always_show_image">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetGicon" cname="gtk_action_get_gicon">
        <return-type type="GIcon*"/>
        <parameters/>
      </method>
      <method name="GetIconName" cname="gtk_action_get_icon_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetIsImportant" cname="gtk_action_get_is_important">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLabel" cname="gtk_action_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gtk_action_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetProxies" cname="gtk_action_get_proxies">
        <return-type type="GSList*" element_type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetSensitive" cname="gtk_action_get_sensitive">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShortLabel" cname="gtk_action_get_short_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetStockId" cname="gtk_action_get_stock_id">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTooltip" cname="gtk_action_get_tooltip">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetVisible" cname="gtk_action_get_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisibleHorizontal" cname="gtk_action_get_visible_horizontal">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisibleVertical" cname="gtk_action_get_visible_vertical">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsSensitive" cname="gtk_action_is_sensitive">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsVisible" cname="gtk_action_is_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAccelGroup" cname="gtk_action_set_accel_group">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_action_set_accel_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetAlwaysShowImage" cname="gtk_action_set_always_show_image">
        <return-type type="void"/>
        <parameters>
          <parameter name="always_show" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetGicon" cname="gtk_action_set_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_action_set_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetIsImportant" cname="gtk_action_set_is_important">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_important" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_action_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_action_set_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShortLabel" cname="gtk_action_set_short_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="short_label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetStockId" cname="gtk_action_set_stock_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTooltip" cname="gtk_action_set_tooltip">
        <return-type type="void"/>
        <parameters>
          <parameter name="tooltip" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_action_set_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisibleHorizontal" cname="gtk_action_set_visible_horizontal">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible_horizontal" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisibleVertical" cname="gtk_action_set_visible_vertical">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible_vertical" type="gboolean"/>
        </parameters>
      </method>
      <method name="UnblockActivate" cname="gtk_action_unblock_activate">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="ActionGroup" cname="action-group" type="GtkActionGroup*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AlwaysShowImage" cname="always-show-image" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Gicon" cname="gicon" type="GIcon*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HideIfEmpty" cname="hide-if-empty" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconName" cname="icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IsImportant" cname="is-important" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Sensitive" cname="sensitive" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShortLabel" cname="short-label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StockId" cname="stock-id" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Tooltip" cname="tooltip" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VisibleHorizontal" cname="visible-horizontal" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VisibleOverflown" cname="visible-overflown" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VisibleVertical" cname="visible-vertical" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GObject*"/>
      <field cname="private_data" access="private" writeable="false" readable="false" name="PrivateData" type="GtkActionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Activate" cname="activate" when="first" field_name="activate">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ActionGroup" cname="GtkActionGroup" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkActionGroupClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_action"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_action_group_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_action_group_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="GetAction" cname="get_action">
        <return-type type="GtkAction*"/>
        <parameters>
          <parameter name="action_name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="AddAction" cname="gtk_action_group_add_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </method>
      <method name="AddActionWithAccel" cname="gtk_action_group_add_action_with_accel">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
          <parameter allow-none="1" name="accelerator" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetAccelGroup" cname="gtk_action_group_get_accel_group">
        <return-type type="GtkAccelGroup*"/>
        <parameters/>
      </method>
      <method name="GetAction" cname="gtk_action_group_get_action">
        <return-type type="GtkAction*"/>
        <parameters>
          <parameter name="action_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetName" cname="gtk_action_group_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetSensitive" cname="gtk_action_group_get_sensitive">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisible" cname="gtk_action_group_get_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ListActions" cname="gtk_action_group_list_actions">
        <return-type type="GList*" element_type="GtkAction*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="RemoveAction" cname="gtk_action_group_remove_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </method>
      <method name="SetAccelGroup" cname="gtk_action_group_set_accel_group">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_action_group_set_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTranslateFunc" cname="gtk_action_group_set_translate_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GtkTranslateFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetTranslationDomain" cname="gtk_action_group_set_translation_domain">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="domain" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_action_group_set_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="TranslateString" cname="gtk_action_group_translate_string">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="AccelGroup" cname="accel-group" type="GtkAccelGroup*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Sensitive" cname="sensitive" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkActionGroupPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ConnectProxy" cname="connect-proxy" when="">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
          <parameter name="proxy" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="DisconnectProxy" cname="disconnect-proxy" when="">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
          <parameter name="proxy" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="PostActivate" cname="post-activate" when="">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </signal>
      <signal name="PreActivate" cname="pre-activate" when="">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </signal>
    </object>
    <object name="Adjustment" cname="GtkAdjustment" abstract="false" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <class_struct cname="GtkAdjustmentClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GInitiallyUnownedClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method signal_vm="value_changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_adjustment_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_adjustment_new">
        <parameters>
          <parameter name="value" type="gdouble"/>
          <parameter name="lower" type="gdouble"/>
          <parameter name="upper" type="gdouble"/>
          <parameter name="step_increment" type="gdouble"/>
          <parameter name="page_increment" type="gdouble"/>
          <parameter name="page_size" type="gdouble"/>
        </parameters>
      </constructor>
      <method name="ClampPage" cname="gtk_adjustment_clamp_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="lower" type="gdouble"/>
          <parameter name="upper" type="gdouble"/>
        </parameters>
      </method>
      <method name="Configure" cname="gtk_adjustment_configure">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
          <parameter name="lower" type="gdouble"/>
          <parameter name="upper" type="gdouble"/>
          <parameter name="step_increment" type="gdouble"/>
          <parameter name="page_increment" type="gdouble"/>
          <parameter name="page_size" type="gdouble"/>
        </parameters>
      </method>
      <method name="GetLower" cname="gtk_adjustment_get_lower">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetMinimumIncrement" cname="gtk_adjustment_get_minimum_increment">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetPageIncrement" cname="gtk_adjustment_get_page_increment">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetPageSize" cname="gtk_adjustment_get_page_size">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetStepIncrement" cname="gtk_adjustment_get_step_increment">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetUpper" cname="gtk_adjustment_get_upper">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetValue" cname="gtk_adjustment_get_value">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="SetLower" cname="gtk_adjustment_set_lower">
        <return-type type="void"/>
        <parameters>
          <parameter name="lower" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetPageIncrement" cname="gtk_adjustment_set_page_increment">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_increment" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetPageSize" cname="gtk_adjustment_set_page_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_size" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetStepIncrement" cname="gtk_adjustment_set_step_increment">
        <return-type type="void"/>
        <parameters>
          <parameter name="step_increment" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetUpper" cname="gtk_adjustment_set_upper">
        <return-type type="void"/>
        <parameters>
          <parameter name="upper" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_adjustment_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <property name="Lower" cname="lower" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PageIncrement" cname="page-increment" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PageSize" cname="page-size" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StepIncrement" cname="step-increment" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Upper" cname="upper" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Value" cname="value" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GInitiallyUnowned*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkAdjustmentPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="first" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ValueChanged" cname="value-changed" when="first" field_name="value_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="Alignment" cname="GtkAlignment" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkAlignmentClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_alignment_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_alignment_new">
        <parameters>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
          <parameter name="xscale" type="gfloat"/>
          <parameter name="yscale" type="gfloat"/>
        </parameters>
      </constructor>
      <method name="GetPadding" cname="gtk_alignment_get_padding">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="padding_top" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="padding_bottom" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="padding_left" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="padding_right" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Set" cname="gtk_alignment_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
          <parameter name="xscale" type="gfloat"/>
          <parameter name="yscale" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetPadding" cname="gtk_alignment_set_padding">
        <return-type type="void"/>
        <parameters>
          <parameter name="padding_top" type="guint"/>
          <parameter name="padding_bottom" type="guint"/>
          <parameter name="padding_left" type="guint"/>
          <parameter name="padding_right" type="guint"/>
        </parameters>
      </method>
      <property name="BottomPadding" cname="bottom-padding" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LeftPadding" cname="left-padding" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RightPadding" cname="right-padding" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TopPadding" cname="top-padding" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Xscale" cname="xscale" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Yscale" cname="yscale" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAlignmentPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="AppChooserButton" cname="GtkAppChooserButton" abstract="false" opaque="false" hidden="false" parent="GtkComboBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkAppChooser"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellEditable"/>
        <interface cname="GtkCellLayout"/>
      </implements>
      <class_struct cname="GtkAppChooserButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkComboBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="custom_item_activated"/>
        <field cname="padding" access="public" writeable="false" readable="true" name="Padding" type="gpointer" array="true" array_len="16"/>
      </class_struct>
      <method name="GetType" cname="gtk_app_chooser_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_app_chooser_button_new">
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AppendCustomItem" cname="gtk_app_chooser_button_append_custom_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="AppendSeparator" cname="gtk_app_chooser_button_append_separator">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetHeading" cname="gtk_app_chooser_button_get_heading">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetShowDefaultItem" cname="gtk_app_chooser_button_get_show_default_item">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowDialogItem" cname="gtk_app_chooser_button_get_show_dialog_item">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetActiveCustomItem" cname="gtk_app_chooser_button_set_active_custom_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetHeading" cname="gtk_app_chooser_button_set_heading">
        <return-type type="void"/>
        <parameters>
          <parameter name="heading" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetShowDefaultItem" cname="gtk_app_chooser_button_set_show_default_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowDialogItem" cname="gtk_app_chooser_button_set_show_dialog_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <property name="Heading" cname="heading" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowDefaultItem" cname="show-default-item" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="ShowDialogItem" cname="show-dialog-item" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkComboBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAppChooserButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="CustomItemActivated" cname="custom-item-activated" when="first" field_name="custom_item_activated">
        <return-type type="void"/>
        <parameters>
          <parameter name="item_name" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="AppChooserDialog" cname="GtkAppChooserDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkAppChooser"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkAppChooserDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="padding" access="public" writeable="false" readable="true" name="Padding" type="gpointer" array="true" array_len="16"/>
      </class_struct>
      <method name="GetType" cname="gtk_app_chooser_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_app_chooser_dialog_new">
        <parameters>
          <parameter name="parent" type="GtkWindow*"/>
          <parameter name="flags" type="GtkDialogFlags"/>
          <parameter name="file" type="GFile*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_app_chooser_dialog_new_for_content_type">
        <parameters>
          <parameter name="parent" type="GtkWindow*"/>
          <parameter name="flags" type="GtkDialogFlags"/>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetHeading" cname="gtk_app_chooser_dialog_get_heading">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetWidget" cname="gtk_app_chooser_dialog_get_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="SetHeading" cname="gtk_app_chooser_dialog_set_heading">
        <return-type type="void"/>
        <parameters>
          <parameter name="heading" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Gfile" cname="gfile" type="GFile*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Heading" cname="heading" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAppChooserDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="AppChooserWidget" cname="GtkAppChooserWidget" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkAppChooser"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkAppChooserWidgetClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="application_selected"/>
        <method signal_vm="application_activated"/>
        <method signal_vm="populate_popup"/>
        <field cname="padding" access="public" writeable="false" readable="true" name="Padding" type="gpointer" array="true" array_len="16"/>
      </class_struct>
      <method name="GetType" cname="gtk_app_chooser_widget_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_app_chooser_widget_new">
        <parameters>
          <parameter name="content_type" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetDefaultText" cname="gtk_app_chooser_widget_get_default_text">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetShowAll" cname="gtk_app_chooser_widget_get_show_all">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowDefault" cname="gtk_app_chooser_widget_get_show_default">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowFallback" cname="gtk_app_chooser_widget_get_show_fallback">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowOther" cname="gtk_app_chooser_widget_get_show_other">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowRecommended" cname="gtk_app_chooser_widget_get_show_recommended">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDefaultText" cname="gtk_app_chooser_widget_set_default_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetShowAll" cname="gtk_app_chooser_widget_set_show_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowDefault" cname="gtk_app_chooser_widget_set_show_default">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowFallback" cname="gtk_app_chooser_widget_set_show_fallback">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowOther" cname="gtk_app_chooser_widget_set_show_other">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowRecommended" cname="gtk_app_chooser_widget_set_show_recommended">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <property name="DefaultText" cname="default-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowAll" cname="show-all" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="ShowDefault" cname="show-default" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="ShowFallback" cname="show-fallback" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="ShowOther" cname="show-other" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="ShowRecommended" cname="show-recommended" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAppChooserWidgetPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ApplicationActivated" cname="application-activated" when="first" field_name="application_activated">
        <return-type type="void"/>
        <parameters>
          <parameter name="application" type="GAppInfo*"/>
        </parameters>
      </signal>
      <signal name="ApplicationSelected" cname="application-selected" when="first" field_name="application_selected">
        <return-type type="void"/>
        <parameters>
          <parameter name="application" type="GAppInfo*"/>
        </parameters>
      </signal>
      <signal name="PopulatePopup" cname="populate-popup" when="first" field_name="populate_popup">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu" type="GtkMenu*"/>
          <parameter name="application" type="GAppInfo*"/>
        </parameters>
      </signal>
    </object>
    <object name="Application" cname="GtkApplication" abstract="false" opaque="false" hidden="false" parent="GApplication">
      <implements>
        <interface cname="GActionGroup"/>
        <interface cname="GActionMap"/>
      </implements>
      <class_struct cname="GtkApplicationClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GApplicationClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="window_added"/>
        <method signal_vm="window_removed"/>
        <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="gpointer" array="true" array_len="12"/>
      </class_struct>
      <method name="GetType" cname="gtk_application_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_application_new">
        <parameters>
          <parameter name="application_id" type="const-gchar*"/>
          <parameter name="flags" type="GApplicationFlags"/>
        </parameters>
      </constructor>
      <method name="AddAccelerator" cname="gtk_application_add_accelerator">
        <return-type type="void"/>
        <parameters>
          <parameter name="accelerator" type="const-gchar*"/>
          <parameter name="action_name" type="const-gchar*"/>
          <parameter allow-none="1" name="parameter" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddWindow" cname="gtk_application_add_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GtkWindow*"/>
        </parameters>
      </method>
      <method name="GetActiveWindow" cname="gtk_application_get_active_window">
        <return-type type="GtkWindow*"/>
        <parameters/>
      </method>
      <method name="GetAppMenu" cname="gtk_application_get_app_menu">
        <return-type type="GMenuModel*"/>
        <parameters/>
      </method>
      <method name="GetMenubar" cname="gtk_application_get_menubar">
        <return-type type="GMenuModel*"/>
        <parameters/>
      </method>
      <method name="GetWindowById" cname="gtk_application_get_window_by_id">
        <return-type type="GtkWindow*"/>
        <parameters>
          <parameter name="id" type="guint"/>
        </parameters>
      </method>
      <method name="GetWindows" cname="gtk_application_get_windows">
        <return-type type="GList*" element_type="GtkWindow*"/>
        <parameters/>
      </method>
      <method name="Inhibit" cname="gtk_application_inhibit">
        <return-type type="guint"/>
        <parameters>
          <parameter allow-none="1" name="window" type="GtkWindow*"/>
          <parameter name="flags" type="GtkApplicationInhibitFlags"/>
          <parameter allow-none="1" name="reason" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IsInhibited" cname="gtk_application_is_inhibited">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="flags" type="GtkApplicationInhibitFlags"/>
        </parameters>
      </method>
      <method name="RemoveAccelerator" cname="gtk_application_remove_accelerator">
        <return-type type="void"/>
        <parameters>
          <parameter name="action_name" type="const-gchar*"/>
          <parameter allow-none="1" name="parameter" type="GVariant*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveWindow" cname="gtk_application_remove_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GtkWindow*"/>
        </parameters>
      </method>
      <method name="SetAppMenu" cname="gtk_application_set_app_menu">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="app_menu" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="SetMenubar" cname="gtk_application_set_menubar">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="menubar" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="Uninhibit" cname="gtk_application_uninhibit">
        <return-type type="void"/>
        <parameters>
          <parameter name="cookie" type="guint"/>
        </parameters>
      </method>
      <property name="ActiveWindow" cname="active-window" type="GtkWindow*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="AppMenu" cname="app-menu" type="GMenuModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Menubar" cname="menubar" type="GMenuModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RegisterSession" cname="register-session" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GApplication*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkApplicationPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="WindowAdded" cname="window-added" when="first" field_name="window_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GtkWindow*"/>
        </parameters>
      </signal>
      <signal name="WindowRemoved" cname="window-removed" when="first" field_name="window_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GtkWindow*"/>
        </parameters>
      </signal>
    </object>
    <object name="ApplicationWindow" cname="GtkApplicationWindow" abstract="false" opaque="false" hidden="false" parent="GtkWindow">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GActionGroup"/>
        <interface cname="GActionMap"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkApplicationWindowClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWindowClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="gpointer" array="true" array_len="14"/>
      </class_struct>
      <method name="GetType" cname="gtk_application_window_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_application_window_new">
        <parameters>
          <parameter name="application" type="GtkApplication*"/>
        </parameters>
      </constructor>
      <method name="GetId" cname="gtk_application_window_get_id">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetShowMenubar" cname="gtk_application_window_get_show_menubar">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetShowMenubar" cname="gtk_application_window_set_show_menubar">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_menubar" type="gboolean"/>
        </parameters>
      </method>
      <property name="ShowMenubar" cname="show-menubar" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkWindow*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkApplicationWindowPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Arrow" cname="GtkArrow" abstract="false" opaque="false" hidden="false" parent="GtkMisc">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkArrowClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMiscClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_arrow_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_arrow_new">
        <parameters>
          <parameter name="arrow_type" type="GtkArrowType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_arrow_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="arrow_type" type="GtkArrowType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
        </parameters>
      </method>
      <property name="ArrowType" cname="arrow-type" type="GtkArrowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShadowType" cname="shadow-type" type="GtkShadowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="misc" access="public" writeable="false" readable="true" name="Misc" type="GtkMisc*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkArrowPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="AspectFrame" cname="GtkAspectFrame" abstract="false" opaque="false" hidden="false" parent="GtkFrame">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkAspectFrameClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkFrameClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_aspect_frame_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_aspect_frame_new">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
          <parameter name="ratio" type="gfloat"/>
          <parameter name="obey_child" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_aspect_frame_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
          <parameter name="ratio" type="gfloat"/>
          <parameter name="obey_child" type="gboolean"/>
        </parameters>
      </method>
      <property name="ObeyChild" cname="obey-child" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Ratio" cname="ratio" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="frame" access="public" writeable="false" readable="true" name="Frame" type="GtkFrame*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAspectFramePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Assistant" cname="GtkAssistant" abstract="false" opaque="false" hidden="false" parent="GtkWindow">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkAssistantClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWindowClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="prepare"/>
        <method signal_vm="apply"/>
        <method signal_vm="close"/>
        <method signal_vm="cancel"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_assistant_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_assistant_new" disable_void_ctor=""/>
      <method name="AddActionWidget" cname="gtk_assistant_add_action_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="AppendPage" cname="gtk_assistant_append_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="Commit" cname="gtk_assistant_commit">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetCurrentPage" cname="gtk_assistant_get_current_page">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetNPages" cname="gtk_assistant_get_n_pages">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetNthPage" cname="gtk_assistant_get_nth_page">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </method>
      <method name="GetPageComplete" cname="gtk_assistant_get_page_complete">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetPageHeaderImage" cname="gtk_assistant_get_page_header_image" deprecated="true">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetPageSideImage" cname="gtk_assistant_get_page_side_image" deprecated="true">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetPageTitle" cname="gtk_assistant_get_page_title">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetPageType" cname="gtk_assistant_get_page_type">
        <return-type type="GtkAssistantPageType"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="InsertPage" cname="gtk_assistant_insert_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="NextPage" cname="gtk_assistant_next_page">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PrependPage" cname="gtk_assistant_prepend_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="PreviousPage" cname="gtk_assistant_previous_page">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemoveActionWidget" cname="gtk_assistant_remove_action_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="RemovePage" cname="gtk_assistant_remove_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </method>
      <method name="SetCurrentPage" cname="gtk_assistant_set_current_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </method>
      <method name="SetForwardPageFunc" cname="gtk_assistant_set_forward_page_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="page_func" type="GtkAssistantPageFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetPageComplete" cname="gtk_assistant_set_page_complete">
        <return-type type="void"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter name="complete" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPageHeaderImage" cname="gtk_assistant_set_page_header_image" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter allow-none="1" name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetPageSideImage" cname="gtk_assistant_set_page_side_image" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter allow-none="1" name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetPageTitle" cname="gtk_assistant_set_page_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPageType" cname="gtk_assistant_set_page_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter name="type" type="GtkAssistantPageType"/>
        </parameters>
      </method>
      <method name="UpdateButtonsState" cname="gtk_assistant_update_buttons_state">
        <return-type type="void"/>
        <parameters/>
      </method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkWindow*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkAssistantPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Apply" cname="apply" when="last" field_name="apply">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Cancel" cname="cancel" when="last" field_name="cancel">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Close" cname="close" when="last" field_name="close">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Prepare" cname="prepare" when="last" field_name="prepare">
        <return-type type="void"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
        </parameters>
      </signal>
    </object>
    <object name="Bin" cname="GtkBin" abstract="true" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkBinClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_bin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetChild" cname="gtk_bin_get_child">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkBinPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Box" cname="GtkBox" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_box_new">
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </constructor>
      <method name="GetHomogeneous" cname="gtk_box_get_homogeneous">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSpacing" cname="gtk_box_get_spacing">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="PackEnd" cname="gtk_box_pack_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="expand" type="gboolean"/>
          <parameter name="fill" type="gboolean"/>
          <parameter name="padding" type="guint"/>
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_box_pack_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="expand" type="gboolean"/>
          <parameter name="fill" type="gboolean"/>
          <parameter name="padding" type="guint"/>
        </parameters>
      </method>
      <method name="QueryChildPacking" cname="gtk_box_query_child_packing">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="expand" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="fill" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="padding" type="guint*" owned="true" pass_as="out"/>
          <parameter name="pack_type" type="GtkPackType" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_box_reorder_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="SetChildPacking" cname="gtk_box_set_child_packing">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="expand" type="gboolean"/>
          <parameter name="fill" type="gboolean"/>
          <parameter name="padding" type="guint"/>
          <parameter name="pack_type" type="GtkPackType"/>
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_box_set_homogeneous">
        <return-type type="void"/>
        <parameters>
          <parameter name="homogeneous" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_box_set_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </method>
      <property name="Homogeneous" cname="homogeneous" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Spacing" cname="spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkBoxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Builder" cname="GtkBuilder" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkBuilderClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_type_from_name"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_builder_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_builder_new" disable_void_ctor=""/>
      <virtual_method name="GetTypeFromName" cname="get_type_from_name">
        <return-type type="GType"/>
        <parameters>
          <parameter name="type_name" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="AddFromFile" cname="gtk_builder_add_from_file">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddFromResource" cname="gtk_builder_add_from_resource">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="resource_path" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddFromString" cname="gtk_builder_add_from_string">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="buffer" type="const-gchar*"/>
          <parameter name="length" type="gsize"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddObjectsFromFile" cname="gtk_builder_add_objects_from_file">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="object_ids" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddObjectsFromResource" cname="gtk_builder_add_objects_from_resource">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="resource_path" type="const-gchar*"/>
          <parameter name="object_ids" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddObjectsFromString" cname="gtk_builder_add_objects_from_string">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="buffer" type="const-gchar*"/>
          <parameter name="length" type="gsize"/>
          <parameter name="object_ids" type="const-gchar**" array="true" null_term_array="true"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ConnectSignals" cname="gtk_builder_connect_signals">
        <return-type type="void"/>
        <parameters>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ConnectSignalsFull" cname="gtk_builder_connect_signals_full">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GtkBuilderConnectFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ExposeObject" cname="gtk_builder_expose_object">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="GetObject" cname="gtk_builder_get_object">
        <return-type type="GObject*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetObjects" cname="gtk_builder_get_objects">
        <return-type type="GSList*" element_type="GObject*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="GetTranslationDomain" cname="gtk_builder_get_translation_domain">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTypeFromName" cname="gtk_builder_get_type_from_name">
        <return-type type="GType"/>
        <parameters>
          <parameter name="type_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTranslationDomain" cname="gtk_builder_set_translation_domain">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="domain" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ValueFromString" cname="gtk_builder_value_from_string">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="string" type="const-gchar*"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ValueFromStringType" cname="gtk_builder_value_from_string_type">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="type" type="GType"/>
          <parameter name="string" type="const-gchar*"/>
          <parameter name="value" type="GValue*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <property name="TranslationDomain" cname="translation-domain" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkBuilderPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Button" cname="GtkButton" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="pressed"/>
        <method signal_vm="released"/>
        <method signal_vm="clicked"/>
        <method signal_vm="enter"/>
        <method signal_vm="leave"/>
        <method signal_vm="activate"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_button_new" disable_void_ctor=""/>
      <constructor cname="gtk_button_new_from_stock">
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_button_new_with_label">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_button_new_with_mnemonic">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetAlignment" cname="gtk_button_get_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat*" owned="true" pass_as="out"/>
          <parameter name="yalign" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetAlwaysShowImage" cname="gtk_button_get_always_show_image">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetEventWindow" cname="gtk_button_get_event_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GetFocusOnClick" cname="gtk_button_get_focus_on_click">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetImage" cname="gtk_button_get_image">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetImagePosition" cname="gtk_button_get_image_position">
        <return-type type="GtkPositionType"/>
        <parameters/>
      </method>
      <method name="GetLabel" cname="gtk_button_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetRelief" cname="gtk_button_get_relief">
        <return-type type="GtkReliefStyle"/>
        <parameters/>
      </method>
      <method name="GetUseStock" cname="gtk_button_get_use_stock">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUseUnderline" cname="gtk_button_get_use_underline">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAlignment" cname="gtk_button_set_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetAlwaysShowImage" cname="gtk_button_set_always_show_image">
        <return-type type="void"/>
        <parameters>
          <parameter name="always_show" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFocusOnClick" cname="gtk_button_set_focus_on_click">
        <return-type type="void"/>
        <parameters>
          <parameter name="focus_on_click" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetImage" cname="gtk_button_set_image">
        <return-type type="void"/>
        <parameters>
          <parameter name="image" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetImagePosition" cname="gtk_button_set_image_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="GtkPositionType"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_button_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetRelief" cname="gtk_button_set_relief">
        <return-type type="void"/>
        <parameters>
          <parameter name="newstyle" type="GtkReliefStyle"/>
        </parameters>
      </method>
      <method name="SetUseStock" cname="gtk_button_set_use_stock">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_stock" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_button_set_use_underline">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_underline" type="gboolean"/>
        </parameters>
      </method>
      <property name="AlwaysShowImage" cname="always-show-image" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="FocusOnClick" cname="focus-on-click" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Image" cname="image" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ImagePosition" cname="image-position" type="GtkPositionType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Relief" cname="relief" type="GtkReliefStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseStock" cname="use-stock" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="UseUnderline" cname="use-underline" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="private" writeable="false" readable="false" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Activate" cname="activate" when="first" field_name="activate">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Clicked" cname="clicked" when="first" field_name="clicked">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Enter" cname="enter" when="first" field_name="enter">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Leave" cname="leave" when="first" field_name="leave">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Pressed" cname="pressed" when="first" field_name="pressed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Released" cname="released" when="first" field_name="released">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ButtonBox" cname="GtkButtonBox" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkButtonBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_button_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_button_box_new">
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </constructor>
      <method name="GetChildNonHomogeneous" cname="gtk_button_box_get_child_non_homogeneous">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetChildSecondary" cname="gtk_button_box_get_child_secondary">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetLayout" cname="gtk_button_box_get_layout">
        <return-type type="GtkButtonBoxStyle"/>
        <parameters/>
      </method>
      <method name="SetChildNonHomogeneous" cname="gtk_button_box_set_child_non_homogeneous">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="non_homogeneous" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetChildSecondary" cname="gtk_button_box_set_child_secondary">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="is_secondary" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLayout" cname="gtk_button_box_set_layout">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout_style" type="GtkButtonBoxStyle"/>
        </parameters>
      </method>
      <property name="LayoutStyle" cname="layout-style" type="GtkButtonBoxStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="box" access="public" writeable="false" readable="true" name="Box" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkButtonBoxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Calendar" cname="GtkCalendar" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkCalendarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="month_changed"/>
        <method signal_vm="day_selected"/>
        <method signal_vm="day_selected_double_click"/>
        <method signal_vm="prev_month"/>
        <method signal_vm="next_month"/>
        <method signal_vm="prev_year"/>
        <method signal_vm="next_year"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_calendar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_calendar_new" disable_void_ctor=""/>
      <method name="ClearMarks" cname="gtk_calendar_clear_marks">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDate" cname="gtk_calendar_get_date">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="year" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="month" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="day" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDayIsMarked" cname="gtk_calendar_get_day_is_marked">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="day" type="guint"/>
        </parameters>
      </method>
      <method name="GetDetailHeightRows" cname="gtk_calendar_get_detail_height_rows">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetDetailWidthChars" cname="gtk_calendar_get_detail_width_chars">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetDisplayOptions" cname="gtk_calendar_get_display_options">
        <return-type type="GtkCalendarDisplayOptions"/>
        <parameters/>
      </method>
      <method name="MarkDay" cname="gtk_calendar_mark_day">
        <return-type type="void"/>
        <parameters>
          <parameter name="day" type="guint"/>
        </parameters>
      </method>
      <method name="SelectDay" cname="gtk_calendar_select_day">
        <return-type type="void"/>
        <parameters>
          <parameter name="day" type="guint"/>
        </parameters>
      </method>
      <method name="SelectMonth" cname="gtk_calendar_select_month">
        <return-type type="void"/>
        <parameters>
          <parameter name="month" type="guint"/>
          <parameter name="year" type="guint"/>
        </parameters>
      </method>
      <method name="SetDetailFunc" cname="gtk_calendar_set_detail_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GtkCalendarDetailFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetDetailHeightRows" cname="gtk_calendar_set_detail_height_rows">
        <return-type type="void"/>
        <parameters>
          <parameter name="rows" type="gint"/>
        </parameters>
      </method>
      <method name="SetDetailWidthChars" cname="gtk_calendar_set_detail_width_chars">
        <return-type type="void"/>
        <parameters>
          <parameter name="chars" type="gint"/>
        </parameters>
      </method>
      <method name="SetDisplayOptions" cname="gtk_calendar_set_display_options">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GtkCalendarDisplayOptions"/>
        </parameters>
      </method>
      <method name="UnmarkDay" cname="gtk_calendar_unmark_day">
        <return-type type="void"/>
        <parameters>
          <parameter name="day" type="guint"/>
        </parameters>
      </method>
      <property name="Day" cname="day" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DetailHeightRows" cname="detail-height-rows" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DetailWidthChars" cname="detail-width-chars" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Month" cname="month" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="NoMonthChange" cname="no-month-change" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowDayNames" cname="show-day-names" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowDetails" cname="show-details" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowHeading" cname="show-heading" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowWeekNumbers" cname="show-week-numbers" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Year" cname="year" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="widget" access="public" writeable="false" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkCalendarPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="DaySelected" cname="day-selected" when="first" field_name="day_selected">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="DaySelectedDoubleClick" cname="day-selected-double-click" when="first" field_name="day_selected_double_click">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="MonthChanged" cname="month-changed" when="first" field_name="month_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="NextMonth" cname="next-month" when="first" field_name="next_month">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="NextYear" cname="next-year" when="first" field_name="next_year">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PrevMonth" cname="prev-month" when="first" field_name="prev_month">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PrevYear" cname="prev-year" when="first" field_name="prev_year">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="CellArea" cname="GtkCellArea" abstract="true" opaque="true" hidden="false" parent="GInitiallyUnowned">
      <implements>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellLayout"/>
      </implements>
      <class_struct cname="GtkCellAreaClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GInitiallyUnownedClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="add"/>
        <method vm="remove"/>
        <method vm="foreach"/>
        <method vm="foreach_alloc"/>
        <method vm="event"/>
        <method vm="render"/>
        <method signal_vm="apply_attributes"/>
        <method vm="create_context"/>
        <method vm="copy_context"/>
        <method vm="get_request_mode"/>
        <method vm="get_preferred_width"/>
        <method vm="get_preferred_height_for_width"/>
        <method vm="get_preferred_height"/>
        <method vm="get_preferred_width_for_height"/>
        <method vm="set_cell_property"/>
        <method vm="get_cell_property"/>
        <method vm="focus"/>
        <method vm="is_activatable"/>
        <method vm="activate"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="FindCellProperty" cname="gtk_cell_area_class_find_cell_property" shared="true">
        <return-type type="GParamSpec*"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="InstallCellProperty" cname="gtk_cell_area_class_install_cell_property" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_id" type="guint"/>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </method>
      <method name="ListCellProperties" cname="gtk_cell_area_class_list_cell_properties" shared="true">
        <return-type type="GParamSpec**" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="n_properties" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_area_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Activate" cname="activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
          <parameter name="edit_only" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Add" cname="add">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CopyContext" cname="copy_context">
        <return-type type="GtkCellAreaContext*" owned="true"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="CreateContext" cname="create_context">
        <return-type type="GtkCellAreaContext*" owned="true"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Event" cname="event">
        <return-type type="gint"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Focus" cname="focus">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GtkDirectionType"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Foreach" cname="foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="callback" type="GtkCellCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ForeachAlloc" cname="foreach_alloc">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter closure="5" scope="call" name="callback" type="GtkCellAllocCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetCellProperty" cname="get_cell_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="property_id" type="guint"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredHeight" cname="get_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredHeightForWidth" cname="get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidth" cname="get_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidthForHeight" cname="get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetRequestMode" cname="get_request_mode">
        <return-type type="GtkSizeRequestMode"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="IsActivatable" cname="is_activatable">
        <return-type type="gboolean"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Remove" cname="remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Render" cname="render">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
          <parameter name="paint_focus" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetCellProperty" cname="set_cell_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="property_id" type="guint"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </virtual_method>
      <method name="Activate" cname="gtk_cell_area_activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
          <parameter name="edit_only" type="gboolean"/>
        </parameters>
      </method>
      <method name="ActivateCell" cname="gtk_cell_area_activate_cell">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </method>
      <method name="Add" cname="gtk_cell_area_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="AddFocusSibling" cname="gtk_cell_area_add_focus_sibling">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="sibling" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="AttributeConnect" cname="gtk_cell_area_attribute_connect">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="AttributeDisconnect" cname="gtk_cell_area_attribute_disconnect">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="attribute" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="CellGetProperty" cname="gtk_cell_area_cell_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CellSetProperty" cname="gtk_cell_area_cell_set_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CopyContext" cname="gtk_cell_area_copy_context">
        <return-type type="GtkCellAreaContext*" owned="true"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
        </parameters>
      </method>
      <method name="CreateContext" cname="gtk_cell_area_create_context">
        <return-type type="GtkCellAreaContext*" owned="true"/>
        <parameters/>
      </method>
      <method name="Event" cname="gtk_cell_area_event">
        <return-type type="gint"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </method>
      <method name="Focus" cname="gtk_cell_area_focus">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GtkDirectionType"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_cell_area_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="callback" type="GtkCellCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="ForeachAlloc" cname="gtk_cell_area_foreach_alloc">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter closure="5" scope="call" name="callback" type="GtkCellAllocCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetCellAllocation" cname="gtk_cell_area_get_cell_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="allocation" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetCellAtPosition" cname="gtk_cell_area_get_cell_at_position">
        <return-type type="GtkCellRenderer*"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter allow-none="1" name="alloc_area" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetCurrentPathString" cname="gtk_cell_area_get_current_path_string">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetEditWidget" cname="gtk_cell_area_get_edit_widget">
        <return-type type="GtkCellEditable*"/>
        <parameters/>
      </method>
      <method name="GetEditedCell" cname="gtk_cell_area_get_edited_cell">
        <return-type type="GtkCellRenderer*"/>
        <parameters/>
      </method>
      <method name="GetFocusCell" cname="gtk_cell_area_get_focus_cell">
        <return-type type="GtkCellRenderer*"/>
        <parameters/>
      </method>
      <method name="GetFocusFromSibling" cname="gtk_cell_area_get_focus_from_sibling">
        <return-type type="GtkCellRenderer*"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="GetFocusSiblings" cname="gtk_cell_area_get_focus_siblings">
        <return-type type="const GList*" element_type="GtkCellRenderer*"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="GetPreferredHeight" cname="gtk_cell_area_get_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredHeightForWidth" cname="gtk_cell_area_get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredWidth" cname="gtk_cell_area_get_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredWidthForHeight" cname="gtk_cell_area_get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetRequestMode" cname="gtk_cell_area_get_request_mode">
        <return-type type="GtkSizeRequestMode"/>
        <parameters/>
      </method>
      <method name="HasRenderer" cname="gtk_cell_area_has_renderer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="InnerCellArea" cname="gtk_cell_area_inner_cell_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="inner_area" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="IsActivatable" cname="gtk_cell_area_is_activatable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsFocusSibling" cname="gtk_cell_area_is_focus_sibling">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="sibling" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="Remove" cname="gtk_cell_area_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="RemoveFocusSibling" cname="gtk_cell_area_remove_focus_sibling">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="sibling" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="Render" cname="gtk_cell_area_render">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkCellAreaContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
          <parameter name="paint_focus" type="gboolean"/>
        </parameters>
      </method>
      <method name="RequestRenderer" cname="gtk_cell_area_request_renderer">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="for_size" type="gint"/>
          <parameter allow-none="1" name="minimum_size" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetFocusCell" cname="gtk_cell_area_set_focus_cell">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="StopEditing" cname="gtk_cell_area_stop_editing">
        <return-type type="void"/>
        <parameters>
          <parameter name="canceled" type="gboolean"/>
        </parameters>
      </method>
      <property name="EditWidget" cname="edit-widget" type="GtkCellEditable*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="EditedCell" cname="edited-cell" type="GtkCellRenderer*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="FocusCell" cname="focus-cell" type="GtkCellRenderer*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GInitiallyUnowned*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellAreaPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="AddEditable" cname="add-editable" when="first">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="editable" type="GtkCellEditable*"/>
          <parameter name="cell_area" type="cairo.RectangleInt"/>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="ApplyAttributes" cname="apply-attributes" when="first" field_name="apply_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="is_expander" type="gboolean"/>
          <parameter name="is_expanded" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="FocusChanged" cname="focus-changed" when="first">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="RemoveEditable" cname="remove-editable" when="first">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="editable" type="GtkCellEditable*"/>
        </parameters>
      </signal>
    </object>
    <object name="CellAreaBox" cname="GtkCellAreaBox" abstract="false" opaque="false" hidden="false" parent="GtkCellArea">
      <implements>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellLayout"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkCellAreaBoxClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GtkCellAreaClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_area_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_area_box_new" disable_void_ctor=""/>
      <method name="GetSpacing" cname="gtk_cell_area_box_get_spacing">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="PackEnd" cname="gtk_cell_area_box_pack_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
          <parameter name="align" type="gboolean"/>
          <parameter name="fixed" type="gboolean"/>
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_cell_area_box_pack_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
          <parameter name="align" type="gboolean"/>
          <parameter name="fixed" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_cell_area_box_set_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </method>
      <property name="Spacing" cname="spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GtkCellArea*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellAreaBoxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="CellAreaContext" cname="GtkCellAreaContext" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkCellAreaContextClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="allocate"/>
        <method vm="reset"/>
        <method vm="get_preferred_height_for_width"/>
        <method vm="get_preferred_width_for_height"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_area_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Allocate" cname="allocate">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredHeightForWidth" cname="get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidthForHeight" cname="get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <method name="Allocate" cname="gtk_cell_area_context_allocate">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="GetAllocation" cname="gtk_cell_area_context_get_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetArea" cname="gtk_cell_area_context_get_area">
        <return-type type="GtkCellArea*"/>
        <parameters/>
      </method>
      <method name="GetPreferredHeight" cname="gtk_cell_area_context_get_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredHeightForWidth" cname="gtk_cell_area_context_get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredWidth" cname="gtk_cell_area_context_get_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredWidthForHeight" cname="gtk_cell_area_context_get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PushPreferredHeight" cname="gtk_cell_area_context_push_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="minimum_height" type="gint"/>
          <parameter name="natural_height" type="gint"/>
        </parameters>
      </method>
      <method name="PushPreferredWidth" cname="gtk_cell_area_context_push_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="minimum_width" type="gint"/>
          <parameter name="natural_width" type="gint"/>
        </parameters>
      </method>
      <method name="Reset" cname="gtk_cell_area_context_reset">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Area" cname="area" type="GtkCellArea*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="MinimumHeight" cname="minimum-height" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="MinimumWidth" cname="minimum-width" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="NaturalHeight" cname="natural-height" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="NaturalWidth" cname="natural-width" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellAreaContextPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="CellRenderer" cname="GtkCellRenderer" abstract="true" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <class_struct cname="GtkCellRendererClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GInitiallyUnownedClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="get_request_mode"/>
        <method vm="get_preferred_width"/>
        <method vm="get_preferred_height_for_width"/>
        <method vm="get_preferred_height"/>
        <method vm="get_preferred_width_for_height"/>
        <method vm="get_aligned_area"/>
        <method vm="get_size"/>
        <method vm="render"/>
        <method vm="activate"/>
        <method vm="start_editing"/>
        <method signal_vm="editing_canceled"/>
        <method signal_vm="editing_started"/>
        <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkCellRendererClassPrivate*">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="SetAccessibleType" cname="gtk_cell_renderer_class_set_accessible_type" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_renderer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Activate" cname="activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetAlignedArea" cname="get_aligned_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="flags" type="GtkCellRendererState"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="aligned_area" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredHeight" cname="get_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_size" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredHeightForWidth" cname="get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidth" cname="get_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_size" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidthForHeight" cname="get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetRequestMode" cname="get_request_mode">
        <return-type type="GtkSizeRequestMode"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetSize" cname="get_size" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter allow-none="1" name="x_offset" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y_offset" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Render" cname="render">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </virtual_method>
      <virtual_method name="StartEditing" cname="start_editing">
        <return-type type="GtkCellEditable*"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </virtual_method>
      <method name="Activate" cname="gtk_cell_renderer_activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </method>
      <method name="GetAlignedArea" cname="gtk_cell_renderer_get_aligned_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="flags" type="GtkCellRendererState"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="aligned_area" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetAlignment" cname="gtk_cell_renderer_get_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="xalign" type="gfloat*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="yalign" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFixedSize" cname="gtk_cell_renderer_get_fixed_size">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPadding" cname="gtk_cell_renderer_get_padding">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="xpad" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="ypad" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredHeight" cname="gtk_cell_renderer_get_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_size" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredHeightForWidth" cname="gtk_cell_renderer_get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredSize" cname="gtk_cell_renderer_get_preferred_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_size" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="natural_size" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetPreferredWidth" cname="gtk_cell_renderer_get_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="minimum_size" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredWidthForHeight" cname="gtk_cell_renderer_get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetRequestMode" cname="gtk_cell_renderer_get_request_mode">
        <return-type type="GtkSizeRequestMode"/>
        <parameters/>
      </method>
      <method name="GetSensitive" cname="gtk_cell_renderer_get_sensitive">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gtk_cell_renderer_get_size" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter allow-none="1" name="x_offset" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y_offset" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetState" cname="gtk_cell_renderer_get_state">
        <return-type type="GtkStateFlags"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cell_state" type="GtkCellRendererState"/>
        </parameters>
      </method>
      <method name="GetVisible" cname="gtk_cell_renderer_get_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsActivatable" cname="gtk_cell_renderer_is_activatable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Render" cname="gtk_cell_renderer_render">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </method>
      <method name="SetAlignment" cname="gtk_cell_renderer_set_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetFixedSize" cname="gtk_cell_renderer_set_fixed_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="SetPadding" cname="gtk_cell_renderer_set_padding">
        <return-type type="void"/>
        <parameters>
          <parameter name="xpad" type="gint"/>
          <parameter name="ypad" type="gint"/>
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_cell_renderer_set_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_cell_renderer_set_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="StartEditing" cname="gtk_cell_renderer_start_editing">
        <return-type type="GtkCellEditable*"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="background_area" type="cairo_rectangle_int_t"/>
          <parameter name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter name="flags" type="GtkCellRendererState"/>
        </parameters>
      </method>
      <method name="StopEditing" cname="gtk_cell_renderer_stop_editing">
        <return-type type="void"/>
        <parameters>
          <parameter name="canceled" type="gboolean"/>
        </parameters>
      </method>
      <property name="CellBackground" cname="cell-background" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="CellBackgroundGdk" cname="cell-background-gdk" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CellBackgroundRgba" cname="cell-background-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CellBackgroundSet" cname="cell-background-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Editing" cname="editing" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Height" cname="height" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IsExpanded" cname="is-expanded" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IsExpander" cname="is-expander" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Mode" cname="mode" type="GtkCellRendererMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Sensitive" cname="sensitive" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Width" cname="width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Xpad" cname="xpad" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Ypad" cname="ypad" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GInitiallyUnowned*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="EditingCanceled" cname="editing-canceled" when="first" field_name="editing_canceled">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="EditingStarted" cname="editing-started" when="first" field_name="editing_started">
        <return-type type="void"/>
        <parameters>
          <parameter name="editable" type="GtkCellEditable*"/>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="CellRendererAccel" cname="GtkCellRendererAccel" abstract="false" opaque="false" hidden="false" parent="GtkCellRendererText">
      <class_struct cname="GtkCellRendererAccelClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCellRendererTextClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="accel_edited"/>
        <method signal_vm="accel_cleared"/>
        <method vm="_gtk_reserved0"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved0" cname="_gtk_reserved0" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_accel_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_accel_new" disable_void_ctor=""/>
      <property name="AccelKey" cname="accel-key" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AccelMode" cname="accel-mode" type="GtkCellRendererAccelMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AccelMods" cname="accel-mods" type="GdkModifierType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Keycode" cname="keycode" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRendererText*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererAccelPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="AccelCleared" cname="accel-cleared" when="last" field_name="accel_cleared">
        <return-type type="void"/>
        <parameters>
          <parameter name="path_string" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="AccelEdited" cname="accel-edited" when="last" field_name="accel_edited">
        <return-type type="void"/>
        <parameters>
          <parameter name="path_string" type="const-gchar*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
          <parameter name="hardware_keycode" type="guint"/>
        </parameters>
      </signal>
    </object>
    <object name="CellRendererCombo" cname="GtkCellRendererCombo" abstract="false" opaque="false" hidden="false" parent="GtkCellRendererText">
      <class_struct cname="GtkCellRendererComboClass">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRendererTextClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_combo_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_combo_new" disable_void_ctor=""/>
      <property name="HasEntry" cname="has-entry" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Model" cname="model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TextColumn" cname="text-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRendererText*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererComboPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="path_string" type="const-gchar*"/>
          <parameter name="new_iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="CellRendererPixbuf" cname="GtkCellRendererPixbuf" abstract="false" opaque="false" hidden="false" parent="GtkCellRenderer">
      <class_struct cname="GtkCellRendererPixbufClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCellRendererClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_pixbuf_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_pixbuf_new" disable_void_ctor=""/>
      <property name="FollowState" cname="follow-state" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Gicon" cname="gicon" type="GIcon*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconName" cname="icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixbufExpanderClosed" cname="pixbuf-expander-closed" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixbufExpanderOpen" cname="pixbuf-expander-open" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StockDetail" cname="stock-detail" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StockId" cname="stock-id" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StockSize" cname="stock-size" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRenderer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererPixbufPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="CellRendererProgress" cname="GtkCellRendererProgress" abstract="false" opaque="false" hidden="false" parent="GtkCellRenderer">
      <implements>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkCellRendererProgressClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCellRendererClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_progress_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_progress_new" disable_void_ctor=""/>
      <property name="Inverted" cname="inverted" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Pulse" cname="pulse" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TextXalign" cname="text-xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TextYalign" cname="text-yalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Value" cname="value" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkCellRenderer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererProgressPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="CellRendererSpin" cname="GtkCellRendererSpin" abstract="false" opaque="false" hidden="false" parent="GtkCellRendererText">
      <class_struct cname="GtkCellRendererSpinClass">
        <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRendererTextClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_spin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_spin_new" disable_void_ctor=""/>
      <property name="Adjustment" cname="adjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ClimbRate" cname="climb-rate" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Digits" cname="digits" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRendererText*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererSpinPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="CellRendererSpinner" cname="GtkCellRendererSpinner" abstract="false" opaque="false" hidden="false" parent="GtkCellRenderer">
      <class_struct cname="GtkCellRendererSpinnerClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCellRendererClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_spinner_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_spinner_new" disable_void_ctor=""/>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Pulse" cname="pulse" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Size" cname="size" type="GtkIconSize" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRenderer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererSpinnerPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="CellRendererText" cname="GtkCellRendererText" abstract="false" opaque="false" hidden="false" parent="GtkCellRenderer">
      <class_struct cname="GtkCellRendererTextClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCellRendererClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="edited"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_text_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_text_new" disable_void_ctor=""/>
      <method name="SetFixedHeightFromFont" cname="gtk_cell_renderer_text_set_fixed_height_from_font">
        <return-type type="void"/>
        <parameters>
          <parameter name="number_of_rows" type="gint"/>
        </parameters>
      </method>
      <property name="AlignSet" cname="align-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Alignment" cname="alignment" type="PangoAlignment" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Attributes" cname="attributes" type="PangoAttrList*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Background" cname="background" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundGdk" cname="background-gdk" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundRgba" cname="background-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundSet" cname="background-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EditableSet" cname="editable-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Ellipsize" cname="ellipsize" type="PangoEllipsizeMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EllipsizeSet" cname="ellipsize-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Family" cname="family" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FamilySet" cname="family-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Font" cname="font" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FontDesc" cname="font-desc" type="PangoFontDescription*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Foreground" cname="foreground" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="ForegroundGdk" cname="foreground-gdk" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ForegroundRgba" cname="foreground-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ForegroundSet" cname="foreground-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Language" cname="language" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LanguageSet" cname="language-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Markup" cname="markup" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="MaxWidthChars" cname="max-width-chars" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PlaceholderText" cname="placeholder-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Rise" cname="rise" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RiseSet" cname="rise-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Scale" cname="scale" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ScaleSet" cname="scale-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SingleParagraphMode" cname="single-paragraph-mode" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Size" cname="size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SizePoints" cname="size-points" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SizeSet" cname="size-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Stretch" cname="stretch" type="PangoStretch" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StretchSet" cname="stretch-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Strikethrough" cname="strikethrough" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StrikethroughSet" cname="strikethrough-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Style" cname="style" type="PangoStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StyleSet" cname="style-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Underline" cname="underline" type="PangoUnderline" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UnderlineSet" cname="underline-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Variant" cname="variant" type="PangoVariant" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VariantSet" cname="variant-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Weight" cname="weight" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WeightSet" cname="weight-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WidthChars" cname="width-chars" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapMode" cname="wrap-mode" type="PangoWrapMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapWidth" cname="wrap-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRenderer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererTextPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Edited" cname="edited" when="last" field_name="edited">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="new_text" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="CellRendererToggle" cname="GtkCellRendererToggle" abstract="false" opaque="false" hidden="false" parent="GtkCellRenderer">
      <class_struct cname="GtkCellRendererToggleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCellRendererClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="toggled"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_renderer_toggle_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_renderer_toggle_new" disable_void_ctor=""/>
      <method name="GetActivatable" cname="gtk_cell_renderer_toggle_get_activatable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetActive" cname="gtk_cell_renderer_toggle_get_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRadio" cname="gtk_cell_renderer_toggle_get_radio">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetActivatable" cname="gtk_cell_renderer_toggle_set_activatable">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetActive" cname="gtk_cell_renderer_toggle_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRadio" cname="gtk_cell_renderer_toggle_set_radio">
        <return-type type="void"/>
        <parameters>
          <parameter name="radio" type="gboolean"/>
        </parameters>
      </method>
      <property name="Activatable" cname="activatable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Inconsistent" cname="inconsistent" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IndicatorSize" cname="indicator-size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Radio" cname="radio" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkCellRenderer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellRendererTogglePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Toggled" cname="toggled" when="last" field_name="toggled">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="CellView" cname="GtkCellView" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellLayout"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkCellViewClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_cell_view_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_cell_view_new" disable_void_ctor=""/>
      <constructor cname="gtk_cell_view_new_with_context">
        <parameters>
          <parameter name="area" type="GtkCellArea*"/>
          <parameter name="context" type="GtkCellAreaContext*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_new_with_markup">
        <parameters>
          <parameter name="markup" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_new_with_pixbuf">
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_new_with_text">
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetDisplayedRow" cname="gtk_cell_view_get_displayed_row">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDrawSensitive" cname="gtk_cell_view_get_draw_sensitive">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetFitModel" cname="gtk_cell_view_get_fit_model">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetModel" cname="gtk_cell_view_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="GetSizeOfRow" cname="gtk_cell_view_get_size_of_row" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="requisition" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetBackgroundColor" cname="gtk_cell_view_set_background_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetBackgroundRgba" cname="gtk_cell_view_set_background_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="rgba" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDisplayedRow" cname="gtk_cell_view_set_displayed_row">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetDrawSensitive" cname="gtk_cell_view_set_draw_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="draw_sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFitModel" cname="gtk_cell_view_set_fit_model">
        <return-type type="void"/>
        <parameters>
          <parameter name="fit_model" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_cell_view_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="model" type="GtkTreeModel*"/>
        </parameters>
      </method>
      <property name="Background" cname="background" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundGdk" cname="background-gdk" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundRgba" cname="background-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundSet" cname="background-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CellArea" cname="cell-area" type="GtkCellArea*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="CellAreaContext" cname="cell-area-context" type="GtkCellAreaContext*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="DrawSensitive" cname="draw-sensitive" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FitModel" cname="fit-model" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Model" cname="model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCellViewPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="CheckButton" cname="GtkCheckButton" abstract="false" opaque="false" hidden="false" parent="GtkToggleButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkCheckButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToggleButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="draw_indicator"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_check_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_check_button_new" disable_void_ctor=""/>
      <constructor cname="gtk_check_button_new_with_label">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_check_button_new_with_mnemonic">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="DrawIndicator" cname="draw_indicator">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
        </parameters>
      </virtual_method>
      <field cname="toggle_button" access="public" writeable="false" readable="true" name="ToggleButton" type="GtkToggleButton*"/>
    </object>
    <object name="CheckMenuItem" cname="GtkCheckMenuItem" abstract="false" opaque="false" hidden="false" parent="GtkMenuItem">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkCheckMenuItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMenuItemClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="toggled"/>
        <method vm="draw_indicator"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_check_menu_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_check_menu_item_new" disable_void_ctor=""/>
      <constructor cname="gtk_check_menu_item_new_with_label">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_check_menu_item_new_with_mnemonic">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="DrawIndicator" cname="draw_indicator">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
        </parameters>
      </virtual_method>
      <method name="GetActive" cname="gtk_check_menu_item_get_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDrawAsRadio" cname="gtk_check_menu_item_get_draw_as_radio">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetInconsistent" cname="gtk_check_menu_item_get_inconsistent">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetActive" cname="gtk_check_menu_item_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDrawAsRadio" cname="gtk_check_menu_item_set_draw_as_radio">
        <return-type type="void"/>
        <parameters>
          <parameter name="draw_as_radio" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetInconsistent" cname="gtk_check_menu_item_set_inconsistent">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DrawAsRadio" cname="draw-as-radio" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Inconsistent" cname="inconsistent" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="menu_item" access="public" writeable="false" readable="true" name="MenuItem" type="GtkMenuItem*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkCheckMenuItemPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Toggled" cname="toggled" when="first" field_name="toggled">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="Clipboard" cname="GtkClipboard" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gtk_clipboard_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Get" cname="gtk_clipboard_get" shared="true">
        <return-type type="GtkClipboard*"/>
        <parameters>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetForDisplay" cname="gtk_clipboard_get_for_display" shared="true">
        <return-type type="GtkClipboard*"/>
        <parameters>
          <parameter name="display" type="GdkDisplay*"/>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Clear" cname="gtk_clipboard_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDisplay" cname="gtk_clipboard_get_display">
        <return-type type="GdkDisplay*"/>
        <parameters/>
      </method>
      <method name="GetOwner" cname="gtk_clipboard_get_owner">
        <return-type type="GObject*"/>
        <parameters/>
      </method>
      <method name="RequestContents" cname="gtk_clipboard_request_contents">
        <return-type type="void"/>
        <parameters>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter closure="2" scope="async" name="callback" type="GtkClipboardReceivedFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RequestImage" cname="gtk_clipboard_request_image">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="async" name="callback" type="GtkClipboardImageReceivedFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RequestRichText" cname="gtk_clipboard_request_rich_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GtkTextBuffer*"/>
          <parameter closure="2" scope="async" name="callback" type="GtkClipboardRichTextReceivedFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RequestTargets" cname="gtk_clipboard_request_targets">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="async" name="callback" type="GtkClipboardTargetsReceivedFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RequestText" cname="gtk_clipboard_request_text">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="async" name="callback" type="GtkClipboardTextReceivedFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="RequestUris" cname="gtk_clipboard_request_uris">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="async" name="callback" type="GtkClipboardURIReceivedFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetCanStore" cname="gtk_clipboard_set_can_store">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
        </parameters>
      </method>
      <method name="SetImage" cname="gtk_clipboard_set_image">
        <return-type type="void"/>
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_clipboard_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </method>
      <method name="Store" cname="gtk_clipboard_store">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="WaitForContents" cname="gtk_clipboard_wait_for_contents">
        <return-type type="GtkSelectionData*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="WaitForImage" cname="gtk_clipboard_wait_for_image">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters/>
      </method>
      <method name="WaitForRichText" cname="gtk_clipboard_wait_for_rich_text">
        <return-type type="guint8**" owned="true" array="true" array_length_param_index="2"/>
        <parameters>
          <parameter name="buffer" type="GtkTextBuffer*"/>
          <parameter name="format" type="GdkAtom*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="length" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="WaitForTargets" cname="gtk_clipboard_wait_for_targets">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="targets" type="GdkAtom**" pass_as="out" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="WaitForText" cname="gtk_clipboard_wait_for_text">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="WaitForUris" cname="gtk_clipboard_wait_for_uris">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="WaitIsImageAvailable" cname="gtk_clipboard_wait_is_image_available">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="WaitIsRichTextAvailable" cname="gtk_clipboard_wait_is_rich_text_available">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="GtkTextBuffer*"/>
        </parameters>
      </method>
      <method name="WaitIsTargetAvailable" cname="gtk_clipboard_wait_is_target_available">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="WaitIsTextAvailable" cname="gtk_clipboard_wait_is_text_available">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="WaitIsUrisAvailable" cname="gtk_clipboard_wait_is_uris_available">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <signal name="OwnerChange" cname="owner-change" when="first">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="GdkEventOwnerChange*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="ColorButton" cname="GtkColorButton" abstract="false" opaque="false" hidden="false" parent="GtkButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkColorChooser"/>
      </implements>
      <class_struct cname="GtkColorButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="color_set"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_color_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_color_button_new" disable_void_ctor=""/>
      <constructor cname="gtk_color_button_new_with_color">
        <parameters>
          <parameter name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gtk_color_button_new_with_rgba">
        <parameters>
          <parameter name="rgba" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="GetAlpha" cname="gtk_color_button_get_alpha" deprecated="true">
        <return-type type="guint16"/>
        <parameters/>
      </method>
      <method name="GetColor" cname="gtk_color_button_get_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetTitle" cname="gtk_color_button_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetUseAlpha" cname="gtk_color_button_get_use_alpha" deprecated="true">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAlpha" cname="gtk_color_button_set_alpha" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="guint16"/>
        </parameters>
      </method>
      <method name="SetColor" cname="gtk_color_button_set_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_color_button_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetUseAlpha" cname="gtk_color_button_set_use_alpha" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_alpha" type="gboolean"/>
        </parameters>
      </method>
      <property name="Alpha" cname="alpha" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Color" cname="color" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Rgba" cname="rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseAlpha" cname="use-alpha" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="button" access="public" writeable="false" readable="true" name="Button" type="GtkButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkColorButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ColorSet" cname="color-set" when="first" field_name="color_set">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ColorChooserDialog" cname="GtkColorChooserDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkColorChooser"/>
      </implements>
      <class_struct cname="GtkColorChooserDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_color_chooser_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_color_chooser_dialog_new">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </constructor>
      <property name="ShowEditor" cname="show-editor" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkColorChooserDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="ColorChooserWidget" cname="GtkColorChooserWidget" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkColorChooser"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkColorChooserWidgetClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_color_chooser_widget_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_color_chooser_widget_new" disable_void_ctor=""/>
      <property name="ShowEditor" cname="show-editor" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkColorChooserWidgetPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="ColorSelection" cname="GtkColorSelection" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkColorSelectionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="color_changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_color_selection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_color_selection_new" disable_void_ctor=""/>
      <method name="PaletteFromString" cname="gtk_color_selection_palette_from_string" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
          <parameter name="colors" type="GdkColor***" owned="true" pass_as="out" array="true" array_length_param_index="2"/>
          <parameter name="n_colors" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="PaletteToString" cname="gtk_color_selection_palette_to_string" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="colors" type="GdkColor*" array="true" array_length_param_index="1"/>
          <parameter name="n_colors" type="gint"/>
        </parameters>
      </method>
      <method name="GetCurrentAlpha" cname="gtk_color_selection_get_current_alpha">
        <return-type type="guint16"/>
        <parameters/>
      </method>
      <method name="GetCurrentColor" cname="gtk_color_selection_get_current_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetCurrentRgba" cname="gtk_color_selection_get_current_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="rgba" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetHasOpacityControl" cname="gtk_color_selection_get_has_opacity_control">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHasPalette" cname="gtk_color_selection_get_has_palette">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPreviousAlpha" cname="gtk_color_selection_get_previous_alpha">
        <return-type type="guint16"/>
        <parameters/>
      </method>
      <method name="GetPreviousColor" cname="gtk_color_selection_get_previous_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetPreviousRgba" cname="gtk_color_selection_get_previous_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="rgba" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsAdjusting" cname="gtk_color_selection_is_adjusting">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetCurrentAlpha" cname="gtk_color_selection_set_current_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="guint16"/>
        </parameters>
      </method>
      <method name="SetCurrentColor" cname="gtk_color_selection_set_current_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetCurrentRgba" cname="gtk_color_selection_set_current_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="rgba" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetHasOpacityControl" cname="gtk_color_selection_set_has_opacity_control">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_opacity" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHasPalette" cname="gtk_color_selection_set_has_palette">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_palette" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPreviousAlpha" cname="gtk_color_selection_set_previous_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="guint16"/>
        </parameters>
      </method>
      <method name="SetPreviousColor" cname="gtk_color_selection_set_previous_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPreviousRgba" cname="gtk_color_selection_set_previous_rgba">
        <return-type type="void"/>
        <parameters>
          <parameter name="rgba" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <property name="CurrentAlpha" cname="current-alpha" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CurrentColor" cname="current-color" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CurrentRgba" cname="current-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasOpacityControl" cname="has-opacity-control" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasPalette" cname="has-palette" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkBox*"/>
      <field cname="private_data" access="public" writeable="false" readable="true" name="PrivateData" type="GtkColorSelectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ColorChanged" cname="color-changed" when="first" field_name="color_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ColorSelectionDialog" cname="GtkColorSelectionDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkColorSelectionDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_color_selection_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_color_selection_dialog_new">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetColorSelection" cname="gtk_color_selection_dialog_get_color_selection">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <property name="CancelButton" cname="cancel-button" type="GtkWidget*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="ColorSelection" cname="color-selection" type="GtkWidget*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="HelpButton" cname="help-button" type="GtkWidget*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="OkButton" cname="ok-button" type="GtkWidget*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkColorSelectionDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="ComboBox" cname="GtkComboBox" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellEditable"/>
        <interface cname="GtkCellLayout"/>
      </implements>
      <class_struct cname="GtkComboBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method signal_vm="format_entry_text"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_combo_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_combo_box_new" disable_void_ctor=""/>
      <constructor cname="gtk_combo_box_new_with_area">
        <parameters>
          <parameter name="area" type="GtkCellArea*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_combo_box_new_with_area_and_entry">
        <parameters>
          <parameter name="area" type="GtkCellArea*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_combo_box_new_with_entry" disable_void_ctor=""/>
      <constructor cname="gtk_combo_box_new_with_model">
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_combo_box_new_with_model_and_entry">
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
        </parameters>
      </constructor>
      <method name="GetActive" cname="gtk_combo_box_get_active">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetActiveId" cname="gtk_combo_box_get_active_id">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetActiveIter" cname="gtk_combo_box_get_active_iter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetAddTearoffs" cname="gtk_combo_box_get_add_tearoffs">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetButtonSensitivity" cname="gtk_combo_box_get_button_sensitivity">
        <return-type type="GtkSensitivityType"/>
        <parameters/>
      </method>
      <method name="GetColumnSpanColumn" cname="gtk_combo_box_get_column_span_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetEntryTextColumn" cname="gtk_combo_box_get_entry_text_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetFocusOnClick" cname="gtk_combo_box_get_focus_on_click">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHasEntry" cname="gtk_combo_box_get_has_entry">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetIdColumn" cname="gtk_combo_box_get_id_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetModel" cname="gtk_combo_box_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="GetPopupAccessible" cname="gtk_combo_box_get_popup_accessible">
        <return-type type="AtkObject*"/>
        <parameters/>
      </method>
      <method name="GetPopupFixedWidth" cname="gtk_combo_box_get_popup_fixed_width">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRowSpanColumn" cname="gtk_combo_box_get_row_span_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTitle" cname="gtk_combo_box_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetWrapWidth" cname="gtk_combo_box_get_wrap_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="PopupForDevice" cname="gtk_combo_box_popup_for_device">
        <return-type type="void"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
        </parameters>
      </method>
      <method name="SetActive" cname="gtk_combo_box_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="SetActiveId" cname="gtk_combo_box_set_active_id">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="active_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetActiveIter" cname="gtk_combo_box_set_active_iter">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetAddTearoffs" cname="gtk_combo_box_set_add_tearoffs">
        <return-type type="void"/>
        <parameters>
          <parameter name="add_tearoffs" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetButtonSensitivity" cname="gtk_combo_box_set_button_sensitivity">
        <return-type type="void"/>
        <parameters>
          <parameter name="sensitivity" type="GtkSensitivityType"/>
        </parameters>
      </method>
      <method name="SetColumnSpanColumn" cname="gtk_combo_box_set_column_span_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column_span" type="gint"/>
        </parameters>
      </method>
      <method name="SetEntryTextColumn" cname="gtk_combo_box_set_entry_text_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="text_column" type="gint"/>
        </parameters>
      </method>
      <method name="SetFocusOnClick" cname="gtk_combo_box_set_focus_on_click">
        <return-type type="void"/>
        <parameters>
          <parameter name="focus_on_click" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIdColumn" cname="gtk_combo_box_set_id_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="id_column" type="gint"/>
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_combo_box_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="model" type="GtkTreeModel*"/>
        </parameters>
      </method>
      <method name="SetPopupFixedWidth" cname="gtk_combo_box_set_popup_fixed_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="fixed" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRowSeparatorFunc" cname="gtk_combo_box_set_row_separator_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GtkTreeViewRowSeparatorFunc"/>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetRowSpanColumn" cname="gtk_combo_box_set_row_span_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="row_span" type="gint"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_combo_box_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetWrapWidth" cname="gtk_combo_box_set_wrap_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
        </parameters>
      </method>
      <property name="Active" cname="active" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ActiveId" cname="active-id" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AddTearoffs" cname="add-tearoffs" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ButtonSensitivity" cname="button-sensitivity" type="GtkSensitivityType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CellArea" cname="cell-area" type="GtkCellArea*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="ColumnSpanColumn" cname="column-span-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EntryTextColumn" cname="entry-text-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FocusOnClick" cname="focus-on-click" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasEntry" cname="has-entry" type="gboolean" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="HasFrame" cname="has-frame" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IdColumn" cname="id-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Model" cname="model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PopupFixedWidth" cname="popup-fixed-width" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PopupShown" cname="popup-shown" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="RowSpanColumn" cname="row-span-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TearoffTitle" cname="tearoff-title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapWidth" cname="wrap-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkComboBoxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="last" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="FormatEntryText" cname="format-entry-text" when="last" field_name="format_entry_text">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="MoveActive" cname="move-active" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="scroll_type" type="GtkScrollType"/>
        </parameters>
      </signal>
      <signal name="Popdown" cname="popdown" when="last">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="Popup" cname="popup" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ComboBoxText" cname="GtkComboBoxText" abstract="false" opaque="false" hidden="false" parent="GtkComboBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellEditable"/>
        <interface cname="GtkCellLayout"/>
      </implements>
      <class_struct cname="GtkComboBoxTextClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkComboBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_combo_box_text_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_combo_box_text_new" disable_void_ctor=""/>
      <constructor cname="gtk_combo_box_text_new_with_entry" disable_void_ctor=""/>
      <method name="Append" cname="gtk_combo_box_text_append">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="id" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AppendText" cname="gtk_combo_box_text_append_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetActiveText" cname="gtk_combo_box_text_get_active_text">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Insert" cname="gtk_combo_box_text_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter allow-none="1" name="id" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="InsertText" cname="gtk_combo_box_text_insert_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Prepend" cname="gtk_combo_box_text_prepend">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="id" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="PrependText" cname="gtk_combo_box_text_prepend_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Remove" cname="gtk_combo_box_text_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="RemoveAll" cname="gtk_combo_box_text_remove_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GtkComboBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkComboBoxTextPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Container" cname="GtkContainer" abstract="true" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkContainerClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="add"/>
        <method signal_vm="remove"/>
        <method signal_vm="check_resize"/>
        <method vm="forall"/>
        <method signal_vm="set_focus_child"/>
        <method vm="child_type"/>
        <method vm="composite_name"/>
        <method vm="set_child_property"/>
        <method vm="get_child_property"/>
        <method vm="get_path_for_child"/>
        <field cname="_handle_border_width" access="private" writeable="false" readable="false" bits="1" name="_handleHandleBorderWidth" type="guint"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="FindChildProperty" cname="gtk_container_class_find_child_property" shared="true">
        <return-type type="GParamSpec*"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HandleBorderWidth" cname="gtk_container_class_handle_border_width" shared="true">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="InstallChildProperty" cname="gtk_container_class_install_child_property" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_id" type="guint"/>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </method>
      <method name="ListChildProperties" cname="gtk_container_class_list_child_properties" shared="true">
        <return-type type="GParamSpec**" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="n_properties" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetType" cname="gtk_container_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="ChildType" cname="child_type">
        <return-type type="GType"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="CompositeName" cname="composite_name">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Forall" cname="forall">
        <return-type type="void"/>
        <parameters>
          <parameter name="include_internals" type="gboolean"/>
          <parameter closure="2" scope="call" name="callback" type="GtkCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetChildProperty" cname="get_child_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="property_id" type="guint"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPathForChild" cname="get_path_for_child">
        <return-type type="GtkWidgetPath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetChildProperty" cname="set_child_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="property_id" type="guint"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </virtual_method>
      <method name="ChildGetProperty" cname="gtk_container_child_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ChildNotify" cname="gtk_container_child_notify">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="child_property" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ChildSetProperty" cname="gtk_container_child_set_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ChildType" cname="gtk_container_child_type">
        <return-type type="GType"/>
        <parameters/>
      </method>
      <method name="Forall" cname="gtk_container_forall">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="callback" type="GtkCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_container_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="callback" type="GtkCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetBorderWidth" cname="gtk_container_get_border_width">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetChildren" cname="gtk_container_get_children">
        <return-type type="GList*" element_type="GtkWidget*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="GetFocusChain" cname="gtk_container_get_focus_chain">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="focusable_widgets" type="GList**" element_type="GtkWidget*" elements_owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFocusChild" cname="gtk_container_get_focus_child">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetFocusHadjustment" cname="gtk_container_get_focus_hadjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetFocusVadjustment" cname="gtk_container_get_focus_vadjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetPathForChild" cname="gtk_container_get_path_for_child">
        <return-type type="GtkWidgetPath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetResizeMode" cname="gtk_container_get_resize_mode">
        <return-type type="GtkResizeMode"/>
        <parameters/>
      </method>
      <method name="PropagateDraw" cname="gtk_container_propagate_draw">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="cr" type="cairo.Context"/>
        </parameters>
      </method>
      <method name="ResizeChildren" cname="gtk_container_resize_children">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetBorderWidth" cname="gtk_container_set_border_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="border_width" type="guint"/>
        </parameters>
      </method>
      <method name="SetFocusChain" cname="gtk_container_set_focus_chain">
        <return-type type="void"/>
        <parameters>
          <parameter name="focusable_widgets" type="GList*" element_type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetFocusHadjustment" cname="gtk_container_set_focus_hadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetFocusVadjustment" cname="gtk_container_set_focus_vadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetReallocateRedraws" cname="gtk_container_set_reallocate_redraws">
        <return-type type="void"/>
        <parameters>
          <parameter name="needs_redraws" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetResizeMode" cname="gtk_container_set_resize_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="resize_mode" type="GtkResizeMode"/>
        </parameters>
      </method>
      <method name="UnsetFocusChain" cname="gtk_container_unset_focus_chain">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="BorderWidth" cname="border-width" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Child" cname="child" type="GtkWidget*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="ResizeMode" cname="resize-mode" type="GtkResizeMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="widget" access="public" writeable="false" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkContainerPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Add" cname="add" when="first" field_name="add">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="CheckResize" cname="check-resize" when="last" field_name="check_resize">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Remove" cname="remove" when="first" field_name="remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="SetFocusChild" cname="set-focus-child" when="first" field_name="set_focus_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkWidget*"/>
        </parameters>
      </signal>
    </object>
    <object name="CssProvider" cname="GtkCssProvider" abstract="false" opaque="true" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkStyleProvider"/>
      </implements>
      <class_struct cname="GtkCssProviderClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="parsing_error"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_css_provider_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_css_provider_new" disable_void_ctor=""/>
      <method name="GetDefault" cname="gtk_css_provider_get_default" shared="true">
        <return-type type="GtkCssProvider*"/>
      </method>
      <method name="GetNamed" cname="gtk_css_provider_get_named" shared="true">
        <return-type type="GtkCssProvider*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="variant" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LoadFromData" cname="gtk_css_provider_load_from_data">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="data" type="const-gchar*" array="true" array_length_param_index="1"/>
          <parameter name="length" type="gssize"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadFromFile" cname="gtk_css_provider_load_from_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file" type="GFile*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadFromPath" cname="gtk_css_provider_load_from_path">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="path" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ToString" cname="gtk_css_provider_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkCssProviderPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ParsingError" cname="parsing-error" when="last" field_name="parsing_error">
        <return-type type="void"/>
        <parameters>
          <parameter name="section" type="GtkCssSection*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="error" type="GError*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="Dialog" cname="GtkDialog" abstract="false" opaque="false" hidden="false" parent="GtkWindow">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWindowClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="response"/>
        <method signal_vm="close"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_dialog_new" disable_void_ctor=""/>
      <method name="AddActionWidget" cname="gtk_dialog_add_action_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </method>
      <method name="AddButton" cname="gtk_dialog_add_button">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="button_text" type="const-gchar*"/>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </method>
      <method name="GetActionArea" cname="gtk_dialog_get_action_area">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetContentArea" cname="gtk_dialog_get_content_area">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetResponseForWidget" cname="gtk_dialog_get_response_for_widget">
        <return-type type="gint"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetWidgetForResponse" cname="gtk_dialog_get_widget_for_response">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </method>
      <method name="Run" cname="gtk_dialog_run">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="SetAlternativeButtonOrderFromArray" cname="gtk_dialog_set_alternative_button_order_from_array">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_params" type="gint"/>
          <parameter name="new_order" type="gint*" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="SetDefaultResponse" cname="gtk_dialog_set_default_response">
        <return-type type="void"/>
        <parameters>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </method>
      <method name="SetResponseSensitive" cname="gtk_dialog_set_response_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="response_id" type="gint"/>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <field cname="window" access="public" writeable="false" readable="true" name="Window" type="GtkWindow*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Close" cname="close" when="last" field_name="close">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Response" cname="response" when="last" field_name="response">
        <return-type type="void"/>
        <parameters>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </signal>
    </object>
    <object name="DrawingArea" cname="GtkDrawingArea" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkDrawingAreaClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_drawing_area_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_drawing_area_new" disable_void_ctor=""/>
      <field cname="widget" access="public" writeable="false" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="dummy" access="private" writeable="false" readable="false" name="Dummy" type="gpointer"/>
    </object>
    <object name="Entry" cname="GtkEntry" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellEditable"/>
        <interface cname="GtkEditable"/>
      </implements>
      <class_struct cname="GtkEntryClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="populate_popup"/>
        <method signal_vm="activate"/>
        <method signal_vm="move_cursor"/>
        <method signal_vm="insert_at_cursor"/>
        <method signal_vm="delete_from_cursor"/>
        <method signal_vm="backspace"/>
        <method signal_vm="cut_clipboard"/>
        <method signal_vm="copy_clipboard"/>
        <method signal_vm="paste_clipboard"/>
        <method signal_vm="toggle_overwrite"/>
        <method vm="get_text_area_size"/>
        <method vm="get_frame_size"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_entry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_entry_new" disable_void_ctor=""/>
      <constructor cname="gtk_entry_new_with_buffer">
        <parameters>
          <parameter name="buffer" type="GtkEntryBuffer*"/>
        </parameters>
      </constructor>
      <virtual_method name="GetFrameSize" cname="get_frame_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetTextAreaSize" cname="get_text_area_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <method name="GetActivatesDefault" cname="gtk_entry_get_activates_default">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetAlignment" cname="gtk_entry_get_alignment">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetAttributes" cname="gtk_entry_get_attributes">
        <return-type type="PangoAttrList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetBuffer" cname="gtk_entry_get_buffer">
        <return-type type="GtkEntryBuffer*"/>
        <parameters/>
      </method>
      <method name="GetCompletion" cname="gtk_entry_get_completion">
        <return-type type="GtkEntryCompletion*"/>
        <parameters/>
      </method>
      <method name="GetCurrentIconDragSource" cname="gtk_entry_get_current_icon_drag_source">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetCursorHadjustment" cname="gtk_entry_get_cursor_hadjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetHasFrame" cname="gtk_entry_get_has_frame">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetIconActivatable" cname="gtk_entry_get_icon_activatable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconArea" cname="gtk_entry_get_icon_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter name="icon_area" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetIconAtPos" cname="gtk_entry_get_icon_at_pos">
        <return-type type="gint"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetIconGicon" cname="gtk_entry_get_icon_gicon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconName" cname="gtk_entry_get_icon_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconPixbuf" cname="gtk_entry_get_icon_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconSensitive" cname="gtk_entry_get_icon_sensitive">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconStock" cname="gtk_entry_get_icon_stock">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconStorageType" cname="gtk_entry_get_icon_storage_type">
        <return-type type="GtkImageType"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconTooltipMarkup" cname="gtk_entry_get_icon_tooltip_markup">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetIconTooltipText" cname="gtk_entry_get_icon_tooltip_text">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
        </parameters>
      </method>
      <method name="GetInnerBorder" cname="gtk_entry_get_inner_border" deprecated="true">
        <return-type type="GtkBorder*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetInputHints" cname="gtk_entry_get_input_hints">
        <return-type type="GtkInputHints"/>
        <parameters/>
      </method>
      <method name="GetInputPurpose" cname="gtk_entry_get_input_purpose">
        <return-type type="GtkInputPurpose"/>
        <parameters/>
      </method>
      <method name="GetInvisibleChar" cname="gtk_entry_get_invisible_char">
        <return-type type="gunichar"/>
        <parameters/>
      </method>
      <method name="GetLayout" cname="gtk_entry_get_layout">
        <return-type type="PangoLayout*"/>
        <parameters/>
      </method>
      <method name="GetLayoutOffsets" cname="gtk_entry_get_layout_offsets">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetMaxLength" cname="gtk_entry_get_max_length">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetOverwriteMode" cname="gtk_entry_get_overwrite_mode">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPlaceholderText" cname="gtk_entry_get_placeholder_text">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetProgressFraction" cname="gtk_entry_get_progress_fraction">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetProgressPulseStep" cname="gtk_entry_get_progress_pulse_step">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetText" cname="gtk_entry_get_text">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTextArea" cname="gtk_entry_get_text_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="text_area" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetTextLength" cname="gtk_entry_get_text_length">
        <return-type type="guint16"/>
        <parameters/>
      </method>
      <method name="GetVisibility" cname="gtk_entry_get_visibility">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetWidthChars" cname="gtk_entry_get_width_chars">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="ImContextFilterKeypress" cname="gtk_entry_im_context_filter_keypress">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LayoutIndexToTextIndex" cname="gtk_entry_layout_index_to_text_index">
        <return-type type="gint"/>
        <parameters>
          <parameter name="layout_index" type="gint"/>
        </parameters>
      </method>
      <method name="ProgressPulse" cname="gtk_entry_progress_pulse">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ResetImContext" cname="gtk_entry_reset_im_context">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetActivatesDefault" cname="gtk_entry_set_activates_default">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetAlignment" cname="gtk_entry_set_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_entry_set_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="attrs" type="PangoAttrList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetBuffer" cname="gtk_entry_set_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="GtkEntryBuffer*"/>
        </parameters>
      </method>
      <method name="SetCompletion" cname="gtk_entry_set_completion">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="completion" type="GtkEntryCompletion*"/>
        </parameters>
      </method>
      <method name="SetCursorHadjustment" cname="gtk_entry_set_cursor_hadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetHasFrame" cname="gtk_entry_set_has_frame">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIconActivatable" cname="gtk_entry_set_icon_activatable">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter name="activatable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIconDragSource" cname="gtk_entry_set_icon_drag_source">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter name="target_list" type="GtkTargetList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="SetIconFromGicon" cname="gtk_entry_set_icon_from_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter allow-none="1" name="icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="SetIconFromIconName" cname="gtk_entry_set_icon_from_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter allow-none="1" name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetIconFromPixbuf" cname="gtk_entry_set_icon_from_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter allow-none="1" name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetIconFromStock" cname="gtk_entry_set_icon_from_stock">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter allow-none="1" name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetIconSensitive" cname="gtk_entry_set_icon_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter name="sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIconTooltipMarkup" cname="gtk_entry_set_icon_tooltip_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter allow-none="1" name="tooltip" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetIconTooltipText" cname="gtk_entry_set_icon_tooltip_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter allow-none="1" name="tooltip" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetInnerBorder" cname="gtk_entry_set_inner_border" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="border" type="GtkBorder*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetInputHints" cname="gtk_entry_set_input_hints">
        <return-type type="void"/>
        <parameters>
          <parameter name="hints" type="GtkInputHints"/>
        </parameters>
      </method>
      <method name="SetInputPurpose" cname="gtk_entry_set_input_purpose">
        <return-type type="void"/>
        <parameters>
          <parameter name="purpose" type="GtkInputPurpose"/>
        </parameters>
      </method>
      <method name="SetInvisibleChar" cname="gtk_entry_set_invisible_char">
        <return-type type="void"/>
        <parameters>
          <parameter name="ch" type="gunichar"/>
        </parameters>
      </method>
      <method name="SetMaxLength" cname="gtk_entry_set_max_length">
        <return-type type="void"/>
        <parameters>
          <parameter name="max" type="gint"/>
        </parameters>
      </method>
      <method name="SetOverwriteMode" cname="gtk_entry_set_overwrite_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="overwrite" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPlaceholderText" cname="gtk_entry_set_placeholder_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetProgressFraction" cname="gtk_entry_set_progress_fraction">
        <return-type type="void"/>
        <parameters>
          <parameter name="fraction" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetProgressPulseStep" cname="gtk_entry_set_progress_pulse_step">
        <return-type type="void"/>
        <parameters>
          <parameter name="fraction" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_entry_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetVisibility" cname="gtk_entry_set_visibility">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetWidthChars" cname="gtk_entry_set_width_chars">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </method>
      <method name="TextIndexToLayoutIndex" cname="gtk_entry_text_index_to_layout_index">
        <return-type type="gint"/>
        <parameters>
          <parameter name="text_index" type="gint"/>
        </parameters>
      </method>
      <method name="UnsetInvisibleChar" cname="gtk_entry_unset_invisible_char">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="ActivatesDefault" cname="activates-default" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Attributes" cname="attributes" type="PangoAttrList*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Buffer" cname="buffer" type="GtkEntryBuffer*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="CapsLockWarning" cname="caps-lock-warning" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Completion" cname="completion" type="GtkEntryCompletion*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CursorPosition" cname="cursor-position" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasFrame" cname="has-frame" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ImModule" cname="im-module" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InnerBorder" cname="inner-border" type="GtkBorder*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InputHints" cname="input-hints" type="GtkInputHints" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InputPurpose" cname="input-purpose" type="GtkInputPurpose" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InvisibleChar" cname="invisible-char" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InvisibleCharSet" cname="invisible-char-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MaxLength" cname="max-length" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="OverwriteMode" cname="overwrite-mode" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PlaceholderText" cname="placeholder-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PopulateAll" cname="populate-all" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconActivatable" cname="primary-icon-activatable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconGicon" cname="primary-icon-gicon" type="GIcon*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconName" cname="primary-icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconPixbuf" cname="primary-icon-pixbuf" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconSensitive" cname="primary-icon-sensitive" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconStock" cname="primary-icon-stock" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconStorageType" cname="primary-icon-storage-type" type="GtkImageType" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="PrimaryIconTooltipMarkup" cname="primary-icon-tooltip-markup" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PrimaryIconTooltipText" cname="primary-icon-tooltip-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ProgressFraction" cname="progress-fraction" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ProgressPulseStep" cname="progress-pulse-step" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ScrollOffset" cname="scroll-offset" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="SecondaryIconActivatable" cname="secondary-icon-activatable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryIconGicon" cname="secondary-icon-gicon" type="GIcon*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryIconName" cname="secondary-icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryIconPixbuf" cname="secondary-icon-pixbuf" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryIconSensitive" cname="secondary-icon-sensitive" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryIconStock" cname="secondary-icon-stock" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryIconStorageType" cname="secondary-icon-storage-type" type="GtkImageType" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="SecondaryIconTooltipMarkup" cname="secondary-icon-tooltip-markup" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryIconTooltipText" cname="secondary-icon-tooltip-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SelectionBound" cname="selection-bound" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="ShadowType" cname="shadow-type" type="GtkShadowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TextLength" cname="text-length" type="guint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="TruncateMultiline" cname="truncate-multiline" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visibility" cname="visibility" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WidthChars" cname="width-chars" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkEntryPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Activate" cname="activate" when="last" field_name="activate">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Backspace" cname="backspace" when="last" field_name="backspace">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="CopyClipboard" cname="copy-clipboard" when="last" field_name="copy_clipboard">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="CutClipboard" cname="cut-clipboard" when="last" field_name="cut_clipboard">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="DeleteFromCursor" cname="delete-from-cursor" when="last" field_name="delete_from_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkDeleteType"/>
          <parameter name="count" type="gint"/>
        </parameters>
      </signal>
      <signal name="IconPress" cname="icon-press" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter name="event" type="GdkEventButton*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="IconRelease" cname="icon-release" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_pos" type="GtkEntryIconPosition"/>
          <parameter name="event" type="GdkEventButton*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="InsertAtCursor" cname="insert-at-cursor" when="last" field_name="insert_at_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="MoveCursor" cname="move-cursor" when="last" field_name="move_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="step" type="GtkMovementStep"/>
          <parameter name="count" type="gint"/>
          <parameter name="extend_selection" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="PasteClipboard" cname="paste-clipboard" when="last" field_name="paste_clipboard">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PopulatePopup" cname="populate-popup" when="last" field_name="populate_popup">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="PreeditChanged" cname="preedit-changed" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="preedit" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="ToggleOverwrite" cname="toggle-overwrite" when="last" field_name="toggle_overwrite">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="EntryBuffer" cname="GtkEntryBuffer" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkEntryBufferClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="inserted_text"/>
        <method signal_vm="deleted_text"/>
        <method vm="get_text"/>
        <method vm="get_length"/>
        <method vm="insert_text"/>
        <method vm="delete_text"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_entry_buffer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_entry_buffer_new">
        <parameters>
          <parameter name="initial_chars" type="const-gchar*"/>
          <parameter name="n_initial_chars" type="gint"/>
        </parameters>
      </constructor>
      <virtual_method name="DeleteText" cname="delete_text">
        <return-type type="guint"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="n_chars" type="guint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetLength" cname="get_length">
        <return-type type="guint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetText" cname="get_text">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="n_bytes" type="gsize"/>
        </parameters>
      </virtual_method>
      <virtual_method name="InsertText" cname="insert_text">
        <return-type type="guint"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="chars" type="const-gchar*"/>
          <parameter name="n_chars" type="guint"/>
        </parameters>
      </virtual_method>
      <method name="DeleteText" cname="gtk_entry_buffer_delete_text">
        <return-type type="guint"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </method>
      <method name="EmitDeletedText" cname="gtk_entry_buffer_emit_deleted_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="n_chars" type="guint"/>
        </parameters>
      </method>
      <method name="EmitInsertedText" cname="gtk_entry_buffer_emit_inserted_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="chars" type="const-gchar*"/>
          <parameter name="n_chars" type="guint"/>
        </parameters>
      </method>
      <method name="GetBytes" cname="gtk_entry_buffer_get_bytes">
        <return-type type="gsize"/>
        <parameters/>
      </method>
      <method name="GetLength" cname="gtk_entry_buffer_get_length">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetMaxLength" cname="gtk_entry_buffer_get_max_length">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetText" cname="gtk_entry_buffer_get_text">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="InsertText" cname="gtk_entry_buffer_insert_text">
        <return-type type="guint"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="chars" type="const-gchar*"/>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </method>
      <method name="SetMaxLength" cname="gtk_entry_buffer_set_max_length">
        <return-type type="void"/>
        <parameters>
          <parameter name="max_length" type="gint"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_entry_buffer_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="chars" type="const-gchar*"/>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </method>
      <property name="Length" cname="length" type="guint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="MaxLength" cname="max-length" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkEntryBufferPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="DeletedText" cname="deleted-text" when="first" field_name="deleted_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="n_chars" type="guint"/>
        </parameters>
      </signal>
      <signal name="InsertedText" cname="inserted-text" when="first" field_name="inserted_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="guint"/>
          <parameter name="chars" type="const-gchar*"/>
          <parameter name="n_chars" type="guint"/>
        </parameters>
      </signal>
    </object>
    <object name="EntryCompletion" cname="GtkEntryCompletion" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellLayout"/>
      </implements>
      <class_struct cname="GtkEntryCompletionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="match_selected"/>
        <method signal_vm="action_activated"/>
        <method signal_vm="insert_prefix"/>
        <method signal_vm="cursor_on_match"/>
        <method vm="_gtk_reserved0"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved0" cname="_gtk_reserved0" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_entry_completion_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_entry_completion_new" disable_void_ctor=""/>
      <constructor cname="gtk_entry_completion_new_with_area">
        <parameters>
          <parameter name="area" type="GtkCellArea*"/>
        </parameters>
      </constructor>
      <method name="Complete" cname="gtk_entry_completion_complete">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ComputePrefix" cname="gtk_entry_completion_compute_prefix">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DeleteAction" cname="gtk_entry_completion_delete_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="GetCompletionPrefix" cname="gtk_entry_completion_get_completion_prefix">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetEntry" cname="gtk_entry_completion_get_entry">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetInlineCompletion" cname="gtk_entry_completion_get_inline_completion">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetInlineSelection" cname="gtk_entry_completion_get_inline_selection">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetMinimumKeyLength" cname="gtk_entry_completion_get_minimum_key_length">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetModel" cname="gtk_entry_completion_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="GetPopupCompletion" cname="gtk_entry_completion_get_popup_completion">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPopupSetWidth" cname="gtk_entry_completion_get_popup_set_width">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPopupSingleMatch" cname="gtk_entry_completion_get_popup_single_match">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTextColumn" cname="gtk_entry_completion_get_text_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="InsertActionMarkup" cname="gtk_entry_completion_insert_action_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="index_" type="gint"/>
          <parameter name="markup" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="InsertActionText" cname="gtk_entry_completion_insert_action_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="index_" type="gint"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetInlineCompletion" cname="gtk_entry_completion_set_inline_completion">
        <return-type type="void"/>
        <parameters>
          <parameter name="inline_completion" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetInlineSelection" cname="gtk_entry_completion_set_inline_selection">
        <return-type type="void"/>
        <parameters>
          <parameter name="inline_selection" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMatchFunc" cname="gtk_entry_completion_set_match_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GtkEntryCompletionMatchFunc"/>
          <parameter name="func_data" type="gpointer"/>
          <parameter scope="async" name="func_notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetMinimumKeyLength" cname="gtk_entry_completion_set_minimum_key_length">
        <return-type type="void"/>
        <parameters>
          <parameter name="length" type="gint"/>
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_entry_completion_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="model" type="GtkTreeModel*"/>
        </parameters>
      </method>
      <method name="SetPopupCompletion" cname="gtk_entry_completion_set_popup_completion">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup_completion" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPopupSetWidth" cname="gtk_entry_completion_set_popup_set_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup_set_width" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPopupSingleMatch" cname="gtk_entry_completion_set_popup_single_match">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup_single_match" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTextColumn" cname="gtk_entry_completion_set_text_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <property name="CellArea" cname="cell-area" type="GtkCellArea*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="InlineCompletion" cname="inline-completion" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InlineSelection" cname="inline-selection" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MinimumKeyLength" cname="minimum-key-length" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Model" cname="model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PopupCompletion" cname="popup-completion" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PopupSetWidth" cname="popup-set-width" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PopupSingleMatch" cname="popup-single-match" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TextColumn" cname="text-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkEntryCompletionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActionActivated" cname="action-activated" when="last" field_name="action_activated">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="gint"/>
        </parameters>
      </signal>
      <signal name="CursorOnMatch" cname="cursor-on-match" when="last" field_name="cursor_on_match">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="InsertPrefix" cname="insert-prefix" when="last" field_name="insert_prefix">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="prefix" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="MatchSelected" cname="match-selected" when="last" field_name="match_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="EventBox" cname="GtkEventBox" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkEventBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_event_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_event_box_new" disable_void_ctor=""/>
      <method name="GetAboveChild" cname="gtk_event_box_get_above_child">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisibleWindow" cname="gtk_event_box_get_visible_window">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAboveChild" cname="gtk_event_box_set_above_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="above_child" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisibleWindow" cname="gtk_event_box_set_visible_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible_window" type="gboolean"/>
        </parameters>
      </method>
      <property name="AboveChild" cname="above-child" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VisibleWindow" cname="visible-window" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkEventBoxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Expander" cname="GtkExpander" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkExpanderClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="activate"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_expander_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_expander_new">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_expander_new_with_mnemonic">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetExpanded" cname="gtk_expander_get_expanded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLabel" cname="gtk_expander_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLabelFill" cname="gtk_expander_get_label_fill">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLabelWidget" cname="gtk_expander_get_label_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetResizeToplevel" cname="gtk_expander_get_resize_toplevel">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSpacing" cname="gtk_expander_get_spacing">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetUseMarkup" cname="gtk_expander_get_use_markup">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUseUnderline" cname="gtk_expander_get_use_underline">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetExpanded" cname="gtk_expander_set_expanded">
        <return-type type="void"/>
        <parameters>
          <parameter name="expanded" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_expander_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLabelFill" cname="gtk_expander_set_label_fill">
        <return-type type="void"/>
        <parameters>
          <parameter name="label_fill" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_expander_set_label_widget">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="label_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetResizeToplevel" cname="gtk_expander_set_resize_toplevel">
        <return-type type="void"/>
        <parameters>
          <parameter name="resize_toplevel" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_expander_set_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </method>
      <method name="SetUseMarkup" cname="gtk_expander_set_use_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_markup" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_expander_set_use_underline">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_underline" type="gboolean"/>
        </parameters>
      </method>
      <property name="Expanded" cname="expanded" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="LabelFill" cname="label-fill" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="LabelWidget" cname="label-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ResizeToplevel" cname="resize-toplevel" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Spacing" cname="spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseMarkup" cname="use-markup" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="UseUnderline" cname="use-underline" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkExpanderPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Activate" cname="activate" when="last" field_name="activate">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="FileChooserButton" cname="GtkFileChooserButton" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkFileChooser"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkFileChooserButtonClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="file_set"/>
        <field cname="__gtk_reserved1" access="private" writeable="false" readable="false" name="__gtkGtkReserved1" type="gpointer"/>
        <field cname="__gtk_reserved2" access="private" writeable="false" readable="false" name="__gtkGtkReserved2" type="gpointer"/>
        <field cname="__gtk_reserved3" access="private" writeable="false" readable="false" name="__gtkGtkReserved3" type="gpointer"/>
        <field cname="__gtk_reserved4" access="private" writeable="false" readable="false" name="__gtkGtkReserved4" type="gpointer"/>
      </class_struct>
      <method name="GetType" cname="gtk_file_chooser_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_file_chooser_button_new">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="action" type="GtkFileChooserAction"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_file_chooser_button_new_with_dialog">
        <parameters>
          <parameter name="dialog" type="GtkWidget*"/>
        </parameters>
      </constructor>
      <method name="GetFocusOnClick" cname="gtk_file_chooser_button_get_focus_on_click">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTitle" cname="gtk_file_chooser_button_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetWidthChars" cname="gtk_file_chooser_button_get_width_chars">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="SetFocusOnClick" cname="gtk_file_chooser_button_set_focus_on_click">
        <return-type type="void"/>
        <parameters>
          <parameter name="focus_on_click" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_file_chooser_button_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetWidthChars" cname="gtk_file_chooser_button_set_width_chars">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </method>
      <property name="Dialog" cname="dialog" type="GtkFileChooser*" readable="false" writeable="true" construct="false" construct-only="true"/>
      <property name="FocusOnClick" cname="focus-on-click" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WidthChars" cname="width-chars" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFileChooserButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="FileSet" cname="file-set" when="first" field_name="file_set">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="FileChooserDialog" cname="GtkFileChooserDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkFileChooser"/>
      </implements>
      <class_struct cname="GtkFileChooserDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_file_chooser_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkFileChooserDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="FileChooserWidget" cname="GtkFileChooserWidget" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkFileChooser"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkFileChooserWidgetClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_file_chooser_widget_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_file_chooser_widget_new">
        <parameters>
          <parameter name="action" type="GtkFileChooserAction"/>
        </parameters>
      </constructor>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkBox*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkFileChooserWidgetPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="FileFilter" cname="GtkFileFilter" abstract="false" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <method name="GetType" cname="gtk_file_filter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_file_filter_new" disable_void_ctor=""/>
      <method name="AddCustom" cname="gtk_file_filter_add_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="needed" type="GtkFileFilterFlags"/>
          <parameter closure="2" destroy="3" scope="notified" name="func" type="GtkFileFilterFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="AddMimeType" cname="gtk_file_filter_add_mime_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="mime_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddPattern" cname="gtk_file_filter_add_pattern">
        <return-type type="void"/>
        <parameters>
          <parameter name="pattern" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddPixbufFormats" cname="gtk_file_filter_add_pixbuf_formats">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Filter" cname="gtk_file_filter_filter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filter_info" type="GtkFileFilterInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetName" cname="gtk_file_filter_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetNeeded" cname="gtk_file_filter_get_needed">
        <return-type type="GtkFileFilterFlags"/>
        <parameters/>
      </method>
      <method name="SetName" cname="gtk_file_filter_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="Fixed" cname="GtkFixed" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkFixedClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_fixed_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_fixed_new" disable_void_ctor=""/>
      <method name="Move" cname="gtk_fixed_move">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="Put" cname="gtk_fixed_put">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFixedPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="FontButton" cname="GtkFontButton" abstract="false" opaque="false" hidden="false" parent="GtkButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkFontChooser"/>
      </implements>
      <class_struct cname="GtkFontButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="font_set"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_font_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_font_button_new" disable_void_ctor=""/>
      <constructor cname="gtk_font_button_new_with_font">
        <parameters>
          <parameter name="fontname" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetFontName" cname="gtk_font_button_get_font_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetShowSize" cname="gtk_font_button_get_show_size">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowStyle" cname="gtk_font_button_get_show_style">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTitle" cname="gtk_font_button_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetUseFont" cname="gtk_font_button_get_use_font">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUseSize" cname="gtk_font_button_get_use_size">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetFontName" cname="gtk_font_button_set_font_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fontname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetShowSize" cname="gtk_font_button_set_show_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_size" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowStyle" cname="gtk_font_button_set_show_style">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_style" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_font_button_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetUseFont" cname="gtk_font_button_set_use_font">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_font" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUseSize" cname="gtk_font_button_set_use_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_size" type="gboolean"/>
        </parameters>
      </method>
      <property name="FontName" cname="font-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowSize" cname="show-size" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowStyle" cname="show-style" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseFont" cname="use-font" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseSize" cname="use-size" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="button" access="public" writeable="false" readable="true" name="Button" type="GtkButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFontButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="FontSet" cname="font-set" when="first" field_name="font_set">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="FontChooserDialog" cname="GtkFontChooserDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkFontChooser"/>
      </implements>
      <class_struct cname="GtkFontChooserDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_font_chooser_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_font_chooser_dialog_new">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </constructor>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFontChooserDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="FontChooserWidget" cname="GtkFontChooserWidget" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkFontChooser"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkFontChooserWidgetClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_font_chooser_widget_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_font_chooser_widget_new" disable_void_ctor=""/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFontChooserWidgetPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="FontSelection" cname="GtkFontSelection" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkFontSelectionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_font_selection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_font_selection_new" disable_void_ctor=""/>
      <method name="GetFace" cname="gtk_font_selection_get_face" deprecated="true">
        <return-type type="PangoFontFace*"/>
        <parameters/>
      </method>
      <method name="GetFaceList" cname="gtk_font_selection_get_face_list" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetFamily" cname="gtk_font_selection_get_family" deprecated="true">
        <return-type type="PangoFontFamily*"/>
        <parameters/>
      </method>
      <method name="GetFamilyList" cname="gtk_font_selection_get_family_list" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetFontName" cname="gtk_font_selection_get_font_name" deprecated="true">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetPreviewEntry" cname="gtk_font_selection_get_preview_entry" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetPreviewText" cname="gtk_font_selection_get_preview_text" deprecated="true">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gtk_font_selection_get_size" deprecated="true">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSizeEntry" cname="gtk_font_selection_get_size_entry" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetSizeList" cname="gtk_font_selection_get_size_list" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="SetFontName" cname="gtk_font_selection_set_font_name" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fontname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gtk_font_selection_set_preview_text" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="FontName" cname="font-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PreviewText" cname="preview-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFontSelectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="FontSelectionDialog" cname="GtkFontSelectionDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkFontSelectionDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_font_selection_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_font_selection_dialog_new">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetCancelButton" cname="gtk_font_selection_dialog_get_cancel_button" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetFontName" cname="gtk_font_selection_dialog_get_font_name" deprecated="true">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetFontSelection" cname="gtk_font_selection_dialog_get_font_selection" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetOkButton" cname="gtk_font_selection_dialog_get_ok_button" deprecated="true">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetPreviewText" cname="gtk_font_selection_dialog_get_preview_text" deprecated="true">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="SetFontName" cname="gtk_font_selection_dialog_set_font_name" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fontname" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gtk_font_selection_dialog_set_preview_text" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFontSelectionDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Frame" cname="GtkFrame" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkFrameClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="compute_child_allocation"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_frame_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_frame_new">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="ComputeChildAllocation" cname="compute_child_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter name="allocation" type="GdkRectangle"/>
        </parameters>
      </virtual_method>
      <method name="GetLabel" cname="gtk_frame_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLabelAlign" cname="gtk_frame_get_label_align">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="xalign" type="gfloat*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="yalign" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetLabelWidget" cname="gtk_frame_get_label_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetShadowType" cname="gtk_frame_get_shadow_type">
        <return-type type="GtkShadowType"/>
        <parameters/>
      </method>
      <method name="SetLabel" cname="gtk_frame_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLabelAlign" cname="gtk_frame_set_label_align">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_frame_set_label_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="label_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_frame_set_shadow_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkShadowType"/>
        </parameters>
      </method>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LabelWidget" cname="label-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LabelXalign" cname="label-xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LabelYalign" cname="label-yalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShadowType" cname="shadow-type" type="GtkShadowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkFramePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Grid" cname="GtkGrid" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkGridClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_grid_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_grid_new" disable_void_ctor=""/>
      <method name="Attach" cname="gtk_grid_attach">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="left" type="gint"/>
          <parameter name="top" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="AttachNextTo" cname="gtk_grid_attach_next_to">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="sibling" type="GtkWidget*"/>
          <parameter name="side" type="GtkPositionType"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="GetChildAt" cname="gtk_grid_get_child_at">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="left" type="gint"/>
          <parameter name="top" type="gint"/>
        </parameters>
      </method>
      <method name="GetColumnHomogeneous" cname="gtk_grid_get_column_homogeneous">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetColumnSpacing" cname="gtk_grid_get_column_spacing">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetRowHomogeneous" cname="gtk_grid_get_row_homogeneous">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRowSpacing" cname="gtk_grid_get_row_spacing">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="InsertColumn" cname="gtk_grid_insert_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="InsertNextTo" cname="gtk_grid_insert_next_to">
        <return-type type="void"/>
        <parameters>
          <parameter name="sibling" type="GtkWidget*"/>
          <parameter name="side" type="GtkPositionType"/>
        </parameters>
      </method>
      <method name="InsertRow" cname="gtk_grid_insert_row">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="SetColumnHomogeneous" cname="gtk_grid_set_column_homogeneous">
        <return-type type="void"/>
        <parameters>
          <parameter name="homogeneous" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetColumnSpacing" cname="gtk_grid_set_column_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="guint"/>
        </parameters>
      </method>
      <method name="SetRowHomogeneous" cname="gtk_grid_set_row_homogeneous">
        <return-type type="void"/>
        <parameters>
          <parameter name="homogeneous" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRowSpacing" cname="gtk_grid_set_row_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="guint"/>
        </parameters>
      </method>
      <property name="ColumnHomogeneous" cname="column-homogeneous" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ColumnSpacing" cname="column-spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RowHomogeneous" cname="row-homogeneous" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RowSpacing" cname="row-spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="private" writeable="false" readable="false" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkGridPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="HBox" cname="GtkHBox" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkHBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_hbox_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_hbox_new">
        <parameters>
          <parameter name="homogeneous" type="gboolean"/>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </constructor>
      <field cname="box" access="public" writeable="false" readable="true" name="Box" type="GtkBox*"/>
    </object>
    <object name="HButtonBox" cname="GtkHButtonBox" abstract="false" opaque="false" hidden="false" parent="GtkButtonBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkHButtonBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkButtonBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_hbutton_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_hbutton_box_new" disable_void_ctor=""/>
      <field cname="button_box" access="public" writeable="false" readable="true" name="ButtonBox" type="GtkButtonBox*"/>
    </object>
    <object name="HPaned" cname="GtkHPaned" abstract="false" opaque="false" hidden="false" parent="GtkPaned">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkHPanedClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkPanedClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_hpaned_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_hpaned_new" disable_void_ctor=""/>
      <field cname="paned" access="public" writeable="false" readable="true" name="Paned" type="GtkPaned*"/>
    </object>
    <object name="HSV" cname="GtkHSV" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkHSVClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method signal_vm="move"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_hsv_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_hsv_new" disable_void_ctor=""/>
      <method name="ToRgb" cname="gtk_hsv_to_rgb" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="h" type="gdouble"/>
          <parameter name="s" type="gdouble"/>
          <parameter name="v" type="gdouble"/>
          <parameter name="r" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="g" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="b" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetColor" cname="gtk_hsv_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="h" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="s" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="v" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetMetrics" cname="gtk_hsv_get_metrics">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gint*" owned="true" pass_as="out"/>
          <parameter name="ring_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IsAdjusting" cname="gtk_hsv_is_adjusting">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetColor" cname="gtk_hsv_set_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="h" type="gdouble"/>
          <parameter name="s" type="gdouble"/>
          <parameter name="v" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetMetrics" cname="gtk_hsv_set_metrics">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gint"/>
          <parameter name="ring_width" type="gint"/>
        </parameters>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkHSVPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="first" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Move" cname="move" when="last" field_name="move">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkDirectionType"/>
        </parameters>
      </signal>
    </object>
    <object name="HScale" cname="GtkHScale" abstract="false" opaque="false" hidden="false" parent="GtkScale">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkHScaleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkScaleClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_hscale_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_hscale_new">
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_hscale_new_with_range">
        <parameters>
          <parameter name="min" type="gdouble"/>
          <parameter name="max" type="gdouble"/>
          <parameter name="step" type="gdouble"/>
        </parameters>
      </constructor>
      <field cname="scale" access="public" writeable="false" readable="true" name="Scale" type="GtkScale*"/>
    </object>
    <object name="HScrollbar" cname="GtkHScrollbar" abstract="false" opaque="false" hidden="false" parent="GtkScrollbar">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkHScrollbarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkScrollbarClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_hscrollbar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_hscrollbar_new">
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <field cname="scrollbar" access="public" writeable="false" readable="true" name="Scrollbar" type="GtkScrollbar*"/>
    </object>
    <object name="HSeparator" cname="GtkHSeparator" abstract="false" opaque="false" hidden="false" parent="GtkSeparator">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkHSeparatorClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkSeparatorClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_hseparator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_hseparator_new" disable_void_ctor=""/>
      <field cname="separator" access="public" writeable="false" readable="true" name="Separator" type="GtkSeparator*"/>
    </object>
    <object name="HandleBox" cname="GtkHandleBox" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkHandleBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="child_attached"/>
        <method signal_vm="child_detached"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_handle_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_handle_box_new" disable_void_ctor=""/>
      <method name="GetChildDetached" cname="gtk_handle_box_get_child_detached" deprecated="true">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHandlePosition" cname="gtk_handle_box_get_handle_position" deprecated="true">
        <return-type type="GtkPositionType"/>
        <parameters/>
      </method>
      <method name="GetShadowType" cname="gtk_handle_box_get_shadow_type" deprecated="true">
        <return-type type="GtkShadowType"/>
        <parameters/>
      </method>
      <method name="GetSnapEdge" cname="gtk_handle_box_get_snap_edge" deprecated="true">
        <return-type type="GtkPositionType"/>
        <parameters/>
      </method>
      <method name="SetHandlePosition" cname="gtk_handle_box_set_handle_position" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="GtkPositionType"/>
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_handle_box_set_shadow_type" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkShadowType"/>
        </parameters>
      </method>
      <method name="SetSnapEdge" cname="gtk_handle_box_set_snap_edge" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="edge" type="GtkPositionType"/>
        </parameters>
      </method>
      <property name="HandlePosition" cname="handle-position" type="GtkPositionType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShadowType" cname="shadow-type" type="GtkShadowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SnapEdge" cname="snap-edge" type="GtkPositionType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SnapEdgeSet" cname="snap-edge-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkHandleBoxPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ChildAttached" cname="child-attached" when="first" field_name="child_attached">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="ChildDetached" cname="child-detached" when="first" field_name="child_detached">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </signal>
    </object>
    <object name="IMContext" cname="GtkIMContext" abstract="true" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkIMContextClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="preedit_start"/>
        <method signal_vm="preedit_end"/>
        <method signal_vm="preedit_changed"/>
        <method signal_vm="commit"/>
        <method signal_vm="retrieve_surrounding"/>
        <method signal_vm="delete_surrounding"/>
        <method vm="set_client_window"/>
        <method vm="get_preedit_string"/>
        <method vm="filter_keypress"/>
        <method vm="focus_in"/>
        <method vm="focus_out"/>
        <method vm="reset"/>
        <method vm="set_cursor_location"/>
        <method vm="set_use_preedit"/>
        <method vm="set_surrounding"/>
        <method vm="get_surrounding"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_im_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="FilterKeypress" cname="filter_keypress">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <virtual_method name="FocusIn" cname="focus_in">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="FocusOut" cname="focus_out">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetPreeditString" cname="get_preedit_string">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="gchar*" owned="true" pass_as="out"/>
          <parameter name="attrs" type="PangoAttrList**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cursor_pos" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetSurrounding" cname="get_surrounding">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="text" type="gchar*" owned="true" pass_as="out"/>
          <parameter name="cursor_index" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetClientWindow" cname="set_client_window">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="window" type="GdkWindow*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetCursorLocation" cname="set_cursor_location">
        <return-type type="void"/>
        <parameters>
          <parameter name="area" type="cairo_rectangle_int_t"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetSurrounding" cname="set_surrounding">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
          <parameter name="cursor_index" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetUsePreedit" cname="set_use_preedit">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_preedit" type="gboolean"/>
        </parameters>
      </virtual_method>
      <method name="FilterKeypress" cname="gtk_im_context_filter_keypress">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="FocusIn" cname="gtk_im_context_focus_in">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FocusOut" cname="gtk_im_context_focus_out">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetPreeditString" cname="gtk_im_context_get_preedit_string">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="gchar*" owned="true" pass_as="out"/>
          <parameter name="attrs" type="PangoAttrList**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="cursor_pos" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSurrounding" cname="gtk_im_context_get_surrounding">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="text" type="gchar*" owned="true" pass_as="out"/>
          <parameter name="cursor_index" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Reset" cname="gtk_im_context_reset">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetClientWindow" cname="gtk_im_context_set_client_window">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="SetCursorLocation" cname="gtk_im_context_set_cursor_location">
        <return-type type="void"/>
        <parameters>
          <parameter name="area" type="cairo_rectangle_int_t"/>
        </parameters>
      </method>
      <method name="SetSurrounding" cname="gtk_im_context_set_surrounding">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
          <parameter name="cursor_index" type="gint"/>
        </parameters>
      </method>
      <method name="SetUsePreedit" cname="gtk_im_context_set_use_preedit">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_preedit" type="gboolean"/>
        </parameters>
      </method>
      <property name="InputHints" cname="input-hints" type="GtkInputHints" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InputPurpose" cname="input-purpose" type="GtkInputPurpose" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <signal name="Commit" cname="commit" when="last" field_name="commit">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="DeleteSurrounding" cname="delete-surrounding" when="last" field_name="delete_surrounding">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="offset" type="gint"/>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </signal>
      <signal name="PreeditChanged" cname="preedit-changed" when="last" field_name="preedit_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PreeditEnd" cname="preedit-end" when="last" field_name="preedit_end">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PreeditStart" cname="preedit-start" when="last" field_name="preedit_start">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="RetrieveSurrounding" cname="retrieve-surrounding" when="last" field_name="retrieve_surrounding">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
    </object>
    <object name="IMContextSimple" cname="GtkIMContextSimple" abstract="false" opaque="false" hidden="false" parent="GtkIMContext">
      <class_struct cname="GtkIMContextSimpleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkIMContextClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_im_context_simple_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_im_context_simple_new" disable_void_ctor=""/>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GtkIMContext*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkIMContextSimplePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="IMMulticontext" cname="GtkIMMulticontext" abstract="false" opaque="false" hidden="false" parent="GtkIMContext">
      <class_struct cname="GtkIMMulticontextClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkIMContextClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_im_multicontext_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_im_multicontext_new" disable_void_ctor=""/>
      <method name="AppendMenuitems" cname="gtk_im_multicontext_append_menuitems">
        <return-type type="void"/>
        <parameters>
          <parameter name="menushell" type="GtkMenuShell*"/>
        </parameters>
      </method>
      <method name="GetContextId" cname="gtk_im_multicontext_get_context_id">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="SetContextId" cname="gtk_im_multicontext_set_context_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="context_id" type="const-gchar*"/>
        </parameters>
      </method>
      <field cname="object" access="public" writeable="false" readable="true" name="Object" type="GtkIMContext*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkIMMulticontextPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="IconFactory" cname="GtkIconFactory" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkIconFactoryClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_icon_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_icon_factory_new" disable_void_ctor=""/>
      <method name="LookupDefault" cname="gtk_icon_factory_lookup_default" shared="true">
        <return-type type="GtkIconSet*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Add" cname="gtk_icon_factory_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="icon_set" type="GtkIconSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddDefault" cname="gtk_icon_factory_add_default">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Lookup" cname="gtk_icon_factory_lookup">
        <return-type type="GtkIconSet*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RemoveDefault" cname="gtk_icon_factory_remove_default">
        <return-type type="void"/>
        <parameters/>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkIconFactoryPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="IconInfo" cname="GtkIconInfo" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkIconInfoClass"/>
      <method name="GetType" cname="gtk_icon_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_icon_info_new_for_pixbuf">
        <parameters>
          <parameter name="icon_theme" type="GtkIconTheme*"/>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <method name="GetAttachPoints" cname="gtk_icon_info_get_attach_points">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="points" type="GdkPoint***" owned="true" pass_as="out" array="true" array_length_param_index="1"/>
          <parameter allow-none="1" name="n_points" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetBaseSize" cname="gtk_icon_info_get_base_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetBuiltinPixbuf" cname="gtk_icon_info_get_builtin_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters/>
      </method>
      <method name="GetDisplayName" cname="gtk_icon_info_get_display_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetEmbeddedRect" cname="gtk_icon_info_get_embedded_rect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="rectangle" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetFilename" cname="gtk_icon_info_get_filename">
        <return-type type="const-gfilename*"/>
        <parameters/>
      </method>
      <method name="LoadIcon" cname="gtk_icon_info_load_icon">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadIconAsync" cname="gtk_icon_info_load_icon_async">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="cancellable" type="GCancellable*"/>
          <parameter closure="2" scope="async" allow-none="1" name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LoadIconFinish" cname="gtk_icon_info_load_icon_finish">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="res" type="GAsyncResult*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadSymbolic" cname="gtk_icon_info_load_symbolic">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="fg" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="success_color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="warning_color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="error_color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="was_symbolic" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadSymbolicAsync" cname="gtk_icon_info_load_symbolic_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="fg" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="success_color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="warning_color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="error_color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="cancellable" type="GCancellable*"/>
          <parameter closure="6" scope="async" allow-none="1" name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LoadSymbolicFinish" cname="gtk_icon_info_load_symbolic_finish">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="res" type="GAsyncResult*"/>
          <parameter allow-none="1" name="was_symbolic" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadSymbolicForContext" cname="gtk_icon_info_load_symbolic_for_context">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter allow-none="1" name="was_symbolic" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadSymbolicForContextAsync" cname="gtk_icon_info_load_symbolic_for_context_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter allow-none="1" name="cancellable" type="GCancellable*"/>
          <parameter closure="3" scope="async" allow-none="1" name="callback" type="GAsyncReadyCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="LoadSymbolicForContextFinish" cname="gtk_icon_info_load_symbolic_for_context_finish">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="res" type="GAsyncResult*"/>
          <parameter allow-none="1" name="was_symbolic" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadSymbolicForStyle" cname="gtk_icon_info_load_symbolic_for_style" deprecated="true">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="state" type="GtkStateType"/>
          <parameter allow-none="1" name="was_symbolic" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetRawCoordinates" cname="gtk_icon_info_set_raw_coordinates">
        <return-type type="void"/>
        <parameters>
          <parameter name="raw_coordinates" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object name="IconTheme" cname="GtkIconTheme" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkIconThemeClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_icon_theme_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_icon_theme_new" disable_void_ctor=""/>
      <method name="AddBuiltinIcon" cname="gtk_icon_theme_add_builtin_icon" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="GetDefault" cname="gtk_icon_theme_get_default" shared="true">
        <return-type type="GtkIconTheme*"/>
      </method>
      <method name="GetForScreen" cname="gtk_icon_theme_get_for_screen" shared="true">
        <return-type type="GtkIconTheme*"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="AppendSearchPath" cname="gtk_icon_theme_append_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="ChooseIcon" cname="gtk_icon_theme_choose_icon">
        <return-type type="GtkIconInfo*" owned="true"/>
        <parameters>
          <parameter name="icon_names" type="const-gchar*" array="true" null_term_array="true"/>
          <parameter name="size" type="gint"/>
          <parameter name="flags" type="GtkIconLookupFlags"/>
        </parameters>
      </method>
      <method name="GetExampleIconName" cname="gtk_icon_theme_get_example_icon_name">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetIconSizes" cname="gtk_icon_theme_get_icon_sizes">
        <return-type type="gint*" array="true" null_term_array="true"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetSearchPath" cname="gtk_icon_theme_get_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="gchar***" owned="true" pass_as="out" array="true" array_length_param_index="1"/>
          <parameter name="n_elements" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="HasIcon" cname="gtk_icon_theme_has_icon">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ListContexts" cname="gtk_icon_theme_list_contexts">
        <return-type type="GList*" element_type="gchar*" elements_owned="true" owned="true"/>
        <parameters/>
      </method>
      <method name="ListIcons" cname="gtk_icon_theme_list_icons">
        <return-type type="GList*" element_type="gchar*" elements_owned="true" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="context" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LoadIcon" cname="gtk_icon_theme_load_icon">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters throws="1">
          <parameter name="icon_name" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
          <parameter name="flags" type="GtkIconLookupFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LookupByGicon" cname="gtk_icon_theme_lookup_by_gicon">
        <return-type type="GtkIconInfo*" owned="true"/>
        <parameters>
          <parameter name="icon" type="GIcon*"/>
          <parameter name="size" type="gint"/>
          <parameter name="flags" type="GtkIconLookupFlags"/>
        </parameters>
      </method>
      <method name="LookupIcon" cname="gtk_icon_theme_lookup_icon">
        <return-type type="GtkIconInfo*" owned="true"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
          <parameter name="flags" type="GtkIconLookupFlags"/>
        </parameters>
      </method>
      <method name="PrependSearchPath" cname="gtk_icon_theme_prepend_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="RescanIfNeeded" cname="gtk_icon_theme_rescan_if_needed">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetCustomTheme" cname="gtk_icon_theme_set_custom_theme">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="theme_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_icon_theme_set_screen">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="SetSearchPath" cname="gtk_icon_theme_set_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="const-gchar*" array="true" array_length_param_index="1"/>
          <parameter name="n_elements" type="gint"/>
        </parameters>
      </method>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkIconThemePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="last" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="IconView" cname="GtkIconView" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellLayout"/>
        <interface cname="GtkScrollable"/>
      </implements>
      <class_struct cname="GtkIconViewClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="item_activated"/>
        <method signal_vm="selection_changed"/>
        <method signal_vm="select_all"/>
        <method signal_vm="unselect_all"/>
        <method signal_vm="select_cursor_item"/>
        <method signal_vm="toggle_cursor_item"/>
        <method signal_vm="move_cursor"/>
        <method signal_vm="activate_cursor_item"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_icon_view_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_icon_view_new" disable_void_ctor=""/>
      <constructor cname="gtk_icon_view_new_with_area">
        <parameters>
          <parameter name="area" type="GtkCellArea*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_icon_view_new_with_model">
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
        </parameters>
      </constructor>
      <method name="ConvertWidgetToBinWindowCoords" cname="gtk_icon_view_convert_widget_to_bin_window_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="wx" type="gint"/>
          <parameter name="wy" type="gint"/>
          <parameter name="bx" type="gint*" owned="true" pass_as="out"/>
          <parameter name="by" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="CreateDragIcon" cname="gtk_icon_view_create_drag_icon">
        <return-type type="cairo.Surface*" owned="true"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="EnableModelDragDest" cname="gtk_icon_view_enable_model_drag_dest">
        <return-type type="void"/>
        <parameters>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="EnableModelDragSource" cname="gtk_icon_view_enable_model_drag_source">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_button_mask" type="GdkModifierType"/>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="2"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="GetActivateOnSingleClick" cname="gtk_icon_view_get_activate_on_single_click">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetCellRect" cname="gtk_icon_view_get_cell_rect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="cell" type="GtkCellRenderer*"/>
          <parameter name="rect" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetColumnSpacing" cname="gtk_icon_view_get_column_spacing">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetColumns" cname="gtk_icon_view_get_columns">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetCursor" cname="gtk_icon_view_get_cursor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="cell" type="GtkCellRenderer*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDestItemAtPos" cname="gtk_icon_view_get_dest_item_at_pos">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="drag_x" type="gint"/>
          <parameter name="drag_y" type="gint"/>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="pos" type="GtkIconViewDropPosition" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDragDestItem" cname="gtk_icon_view_get_drag_dest_item">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="pos" type="GtkIconViewDropPosition" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetItemAtPos" cname="gtk_icon_view_get_item_at_pos">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="cell" type="GtkCellRenderer*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetItemColumn" cname="gtk_icon_view_get_item_column">
        <return-type type="gint"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetItemOrientation" cname="gtk_icon_view_get_item_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </method>
      <method name="GetItemPadding" cname="gtk_icon_view_get_item_padding">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetItemRow" cname="gtk_icon_view_get_item_row">
        <return-type type="gint"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetItemWidth" cname="gtk_icon_view_get_item_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMargin" cname="gtk_icon_view_get_margin">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMarkupColumn" cname="gtk_icon_view_get_markup_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetModel" cname="gtk_icon_view_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="GetPathAtPos" cname="gtk_icon_view_get_path_at_pos">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetPixbufColumn" cname="gtk_icon_view_get_pixbuf_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetReorderable" cname="gtk_icon_view_get_reorderable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRowSpacing" cname="gtk_icon_view_get_row_spacing">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSelectedItems" cname="gtk_icon_view_get_selected_items">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSelectionMode" cname="gtk_icon_view_get_selection_mode">
        <return-type type="GtkSelectionMode"/>
        <parameters/>
      </method>
      <method name="GetSpacing" cname="gtk_icon_view_get_spacing">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTextColumn" cname="gtk_icon_view_get_text_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTooltipColumn" cname="gtk_icon_view_get_tooltip_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTooltipContext" cname="gtk_icon_view_get_tooltip_context">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint*" owned="true" pass_as="ref"/>
          <parameter name="y" type="gint*" owned="true" pass_as="ref"/>
          <parameter name="keyboard_tip" type="gboolean"/>
          <parameter allow-none="1" name="model" type="GtkTreeModel*" pass_as="out"/>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetVisibleRange" cname="gtk_icon_view_get_visible_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="start_path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="end_path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PathIsSelected" cname="gtk_icon_view_path_is_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ScrollToPath" cname="gtk_icon_view_scroll_to_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="use_align" type="gboolean"/>
          <parameter name="row_align" type="gfloat"/>
          <parameter name="col_align" type="gfloat"/>
        </parameters>
      </method>
      <method name="SelectPath" cname="gtk_icon_view_select_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SelectedForeach" cname="gtk_icon_view_selected_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GtkIconViewForeachFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetActivateOnSingleClick" cname="gtk_icon_view_set_activate_on_single_click">
        <return-type type="void"/>
        <parameters>
          <parameter name="single" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetColumnSpacing" cname="gtk_icon_view_set_column_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="column_spacing" type="gint"/>
        </parameters>
      </method>
      <method name="SetColumns" cname="gtk_icon_view_set_columns">
        <return-type type="void"/>
        <parameters>
          <parameter name="columns" type="gint"/>
        </parameters>
      </method>
      <method name="SetCursor" cname="gtk_icon_view_set_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="cell" type="GtkCellRenderer*"/>
          <parameter name="start_editing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDragDestItem" cname="gtk_icon_view_set_drag_dest_item">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pos" type="GtkIconViewDropPosition"/>
        </parameters>
      </method>
      <method name="SetItemOrientation" cname="gtk_icon_view_set_item_orientation">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </method>
      <method name="SetItemPadding" cname="gtk_icon_view_set_item_padding">
        <return-type type="void"/>
        <parameters>
          <parameter name="item_padding" type="gint"/>
        </parameters>
      </method>
      <method name="SetItemWidth" cname="gtk_icon_view_set_item_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="item_width" type="gint"/>
        </parameters>
      </method>
      <method name="SetMargin" cname="gtk_icon_view_set_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gint"/>
        </parameters>
      </method>
      <method name="SetMarkupColumn" cname="gtk_icon_view_set_markup_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_icon_view_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="model" type="GtkTreeModel*"/>
        </parameters>
      </method>
      <method name="SetPixbufColumn" cname="gtk_icon_view_set_pixbuf_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_icon_view_set_reorderable">
        <return-type type="void"/>
        <parameters>
          <parameter name="reorderable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRowSpacing" cname="gtk_icon_view_set_row_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="row_spacing" type="gint"/>
        </parameters>
      </method>
      <method name="SetSelectionMode" cname="gtk_icon_view_set_selection_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GtkSelectionMode"/>
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_icon_view_set_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </method>
      <method name="SetTextColumn" cname="gtk_icon_view_set_text_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="SetTooltipCell" cname="gtk_icon_view_set_tooltip_cell">
        <return-type type="void"/>
        <parameters>
          <parameter name="tooltip" type="GtkTooltip*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="cell" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="SetTooltipColumn" cname="gtk_icon_view_set_tooltip_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="SetTooltipItem" cname="gtk_icon_view_set_tooltip_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="tooltip" type="GtkTooltip*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnselectPath" cname="gtk_icon_view_unselect_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnsetModelDragDest" cname="gtk_icon_view_unset_model_drag_dest">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnsetModelDragSource" cname="gtk_icon_view_unset_model_drag_source">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="ActivateOnSingleClick" cname="activate-on-single-click" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CellArea" cname="cell-area" type="GtkCellArea*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="ColumnSpacing" cname="column-spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Columns" cname="columns" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ItemOrientation" cname="item-orientation" type="GtkOrientation" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ItemPadding" cname="item-padding" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ItemWidth" cname="item-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Margin" cname="margin" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MarkupColumn" cname="markup-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Model" cname="model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixbufColumn" cname="pixbuf-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Reorderable" cname="reorderable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RowSpacing" cname="row-spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SelectionMode" cname="selection-mode" type="GtkSelectionMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Spacing" cname="spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TextColumn" cname="text-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TooltipColumn" cname="tooltip-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkIconViewPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActivateCursorItem" cname="activate-cursor-item" when="last" field_name="activate_cursor_item">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="ItemActivated" cname="item-activated" when="last" field_name="item_activated">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="MoveCursor" cname="move-cursor" when="last" field_name="move_cursor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="step" type="GtkMovementStep"/>
          <parameter name="count" type="gint"/>
        </parameters>
      </signal>
      <signal name="SelectAll" cname="select-all" when="last" field_name="select_all">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="SelectCursorItem" cname="select-cursor-item" when="last" field_name="select_cursor_item">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="SelectionChanged" cname="selection-changed" when="first" field_name="selection_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ToggleCursorItem" cname="toggle-cursor-item" when="last" field_name="toggle_cursor_item">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="UnselectAll" cname="unselect-all" when="last" field_name="unselect_all">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="Image" cname="GtkImage" abstract="false" opaque="false" hidden="false" parent="GtkMisc">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkImageClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMiscClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_image_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_image_new" disable_void_ctor=""/>
      <constructor cname="gtk_image_new_from_animation">
        <parameters>
          <parameter name="animation" type="GdkPixbufAnimation*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_file">
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_gicon">
        <parameters>
          <parameter name="icon" type="GIcon*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_icon_name">
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_icon_set">
        <parameters>
          <parameter name="icon_set" type="GtkIconSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_pixbuf">
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_resource">
        <parameters>
          <parameter name="resource_path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_stock">
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </constructor>
      <method name="Clear" cname="gtk_image_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAnimation" cname="gtk_image_get_animation">
        <return-type type="GdkPixbufAnimation*"/>
        <parameters/>
      </method>
      <method name="GetGicon" cname="gtk_image_get_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gicon" type="GIcon*" pass_as="out"/>
          <parameter allow-none="1" name="size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetIconName" cname="gtk_image_get_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_name" type="const-gchar*" pass_as="out"/>
          <parameter allow-none="1" name="size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetIconSet" cname="gtk_image_get_icon_set">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_set" type="GtkIconSet**" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPixbuf" cname="gtk_image_get_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters/>
      </method>
      <method name="GetPixelSize" cname="gtk_image_get_pixel_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetStock" cname="gtk_image_get_stock">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="stock_id" type="const-gchar*" pass_as="out"/>
          <parameter allow-none="1" name="size" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetStorageType" cname="gtk_image_get_storage_type">
        <return-type type="GtkImageType"/>
        <parameters/>
      </method>
      <method name="SetFromAnimation" cname="gtk_image_set_from_animation">
        <return-type type="void"/>
        <parameters>
          <parameter name="animation" type="GdkPixbufAnimation*"/>
        </parameters>
      </method>
      <method name="SetFromFile" cname="gtk_image_set_from_file">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SetFromGicon" cname="gtk_image_set_from_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon" type="GIcon*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetFromIconName" cname="gtk_image_set_from_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetFromIconSet" cname="gtk_image_set_from_icon_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_set" type="GtkIconSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetFromPixbuf" cname="gtk_image_set_from_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetFromResource" cname="gtk_image_set_from_resource">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="resource_path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetFromStock" cname="gtk_image_set_from_stock">
        <return-type type="void"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetPixelSize" cname="gtk_image_set_pixel_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="pixel_size" type="gint"/>
        </parameters>
      </method>
      <property name="File" cname="file" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Gicon" cname="gicon" type="GIcon*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconName" cname="icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconSet" cname="icon-set" type="GtkIconSet*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconSize" cname="icon-size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixbufAnimation" cname="pixbuf-animation" type="GdkPixbufAnimation*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelSize" cname="pixel-size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Resource" cname="resource" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Stock" cname="stock" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StorageType" cname="storage-type" type="GtkImageType" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="UseFallback" cname="use-fallback" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="misc" access="public" writeable="false" readable="true" name="Misc" type="GtkMisc*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkImagePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="ImageMenuItem" cname="GtkImageMenuItem" abstract="false" opaque="false" hidden="false" parent="GtkMenuItem">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkImageMenuItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMenuItemClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_image_menu_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_image_menu_item_new" disable_void_ctor=""/>
      <constructor cname="gtk_image_menu_item_new_from_stock">
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_menu_item_new_with_label">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_image_menu_item_new_with_mnemonic">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetAlwaysShowImage" cname="gtk_image_menu_item_get_always_show_image">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetImage" cname="gtk_image_menu_item_get_image">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetUseStock" cname="gtk_image_menu_item_get_use_stock">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAccelGroup" cname="gtk_image_menu_item_set_accel_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="SetAlwaysShowImage" cname="gtk_image_menu_item_set_always_show_image">
        <return-type type="void"/>
        <parameters>
          <parameter name="always_show" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetImage" cname="gtk_image_menu_item_set_image">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="image" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetUseStock" cname="gtk_image_menu_item_set_use_stock">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_stock" type="gboolean"/>
        </parameters>
      </method>
      <property name="AccelGroup" cname="accel-group" type="GtkAccelGroup*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="AlwaysShowImage" cname="always-show-image" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Image" cname="image" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseStock" cname="use-stock" type="gboolean" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="menu_item" access="public" writeable="false" readable="true" name="MenuItem" type="GtkMenuItem*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkImageMenuItemPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="InfoBar" cname="GtkInfoBar" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkInfoBarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="response"/>
        <method signal_vm="close"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_info_bar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_info_bar_new" disable_void_ctor=""/>
      <method name="AddActionWidget" cname="gtk_info_bar_add_action_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </method>
      <method name="AddButton" cname="gtk_info_bar_add_button">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="button_text" type="const-gchar*"/>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </method>
      <method name="GetActionArea" cname="gtk_info_bar_get_action_area">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetContentArea" cname="gtk_info_bar_get_content_area">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetMessageType" cname="gtk_info_bar_get_message_type">
        <return-type type="GtkMessageType"/>
        <parameters/>
      </method>
      <method name="SetDefaultResponse" cname="gtk_info_bar_set_default_response">
        <return-type type="void"/>
        <parameters>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </method>
      <method name="SetMessageType" cname="gtk_info_bar_set_message_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="message_type" type="GtkMessageType"/>
        </parameters>
      </method>
      <method name="SetResponseSensitive" cname="gtk_info_bar_set_response_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="response_id" type="gint"/>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <property name="MessageType" cname="message-type" type="GtkMessageType" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkInfoBarPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Close" cname="close" when="last" field_name="close">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Response" cname="response" when="last" field_name="response">
        <return-type type="void"/>
        <parameters>
          <parameter name="response_id" type="gint"/>
        </parameters>
      </signal>
    </object>
    <object name="Invisible" cname="GtkInvisible" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkInvisibleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_invisible_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_invisible_new" disable_void_ctor=""/>
      <constructor cname="gtk_invisible_new_for_screen">
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </constructor>
      <method name="GetScreen" cname="gtk_invisible_get_screen">
        <return-type type="GdkScreen*"/>
        <parameters/>
      </method>
      <method name="SetScreen" cname="gtk_invisible_set_screen">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <property name="Screen" cname="screen" type="GdkScreen*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="widget" access="public" writeable="false" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkInvisiblePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Label" cname="GtkLabel" abstract="false" opaque="false" hidden="false" parent="GtkMisc">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkLabelClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMiscClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="move_cursor"/>
        <method signal_vm="copy_clipboard"/>
        <method signal_vm="populate_popup"/>
        <method signal_vm="activate_link"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_label_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_label_new">
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_label_new_with_mnemonic">
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetAngle" cname="gtk_label_get_angle">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetAttributes" cname="gtk_label_get_attributes">
        <return-type type="PangoAttrList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetCurrentUri" cname="gtk_label_get_current_uri">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetEllipsize" cname="gtk_label_get_ellipsize">
        <return-type type="PangoEllipsizeMode"/>
        <parameters/>
      </method>
      <method name="GetJustify" cname="gtk_label_get_justify">
        <return-type type="GtkJustification"/>
        <parameters/>
      </method>
      <method name="GetLabel" cname="gtk_label_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLayout" cname="gtk_label_get_layout">
        <return-type type="PangoLayout*"/>
        <parameters/>
      </method>
      <method name="GetLayoutOffsets" cname="gtk_label_get_layout_offsets">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetLineWrap" cname="gtk_label_get_line_wrap">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLineWrapMode" cname="gtk_label_get_line_wrap_mode">
        <return-type type="PangoWrapMode"/>
        <parameters/>
      </method>
      <method name="GetMaxWidthChars" cname="gtk_label_get_max_width_chars">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMnemonicKeyval" cname="gtk_label_get_mnemonic_keyval">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetMnemonicWidget" cname="gtk_label_get_mnemonic_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetSelectable" cname="gtk_label_get_selectable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSelectionBounds" cname="gtk_label_get_selection_bounds">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="gint*" owned="true" pass_as="out"/>
          <parameter name="end" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSingleLineMode" cname="gtk_label_get_single_line_mode">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetText" cname="gtk_label_get_text">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTrackVisitedLinks" cname="gtk_label_get_track_visited_links">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUseMarkup" cname="gtk_label_get_use_markup">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUseUnderline" cname="gtk_label_get_use_underline">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetWidthChars" cname="gtk_label_get_width_chars">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="SelectRegion" cname="gtk_label_select_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_offset" type="gint"/>
          <parameter name="end_offset" type="gint"/>
        </parameters>
      </method>
      <method name="SetAngle" cname="gtk_label_set_angle">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_label_set_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="attrs" type="PangoAttrList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetEllipsize" cname="gtk_label_set_ellipsize">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="PangoEllipsizeMode"/>
        </parameters>
      </method>
      <method name="SetJustify" cname="gtk_label_set_justify">
        <return-type type="void"/>
        <parameters>
          <parameter name="jtype" type="GtkJustification"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_label_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLineWrap" cname="gtk_label_set_line_wrap">
        <return-type type="void"/>
        <parameters>
          <parameter name="wrap" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLineWrapMode" cname="gtk_label_set_line_wrap_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="wrap_mode" type="PangoWrapMode"/>
        </parameters>
      </method>
      <method name="SetMarkup" cname="gtk_label_set_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMarkupWithMnemonic" cname="gtk_label_set_markup_with_mnemonic">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMaxWidthChars" cname="gtk_label_set_max_width_chars">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </method>
      <method name="SetMnemonicWidget" cname="gtk_label_set_mnemonic_widget">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetPattern" cname="gtk_label_set_pattern">
        <return-type type="void"/>
        <parameters>
          <parameter name="pattern" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetSelectable" cname="gtk_label_set_selectable">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSingleLineMode" cname="gtk_label_set_single_line_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="single_line_mode" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_label_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTextWithMnemonic" cname="gtk_label_set_text_with_mnemonic">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTrackVisitedLinks" cname="gtk_label_set_track_visited_links">
        <return-type type="void"/>
        <parameters>
          <parameter name="track_links" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUseMarkup" cname="gtk_label_set_use_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_label_set_use_underline">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetWidthChars" cname="gtk_label_set_width_chars">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_chars" type="gint"/>
        </parameters>
      </method>
      <property name="Angle" cname="angle" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Attributes" cname="attributes" type="PangoAttrList*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CursorPosition" cname="cursor-position" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Ellipsize" cname="ellipsize" type="PangoEllipsizeMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Justify" cname="justify" type="GtkJustification" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MaxWidthChars" cname="max-width-chars" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MnemonicKeyval" cname="mnemonic-keyval" type="guint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="MnemonicWidget" cname="mnemonic-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Pattern" cname="pattern" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="Selectable" cname="selectable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SelectionBound" cname="selection-bound" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="SingleLineMode" cname="single-line-mode" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TrackVisitedLinks" cname="track-visited-links" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseMarkup" cname="use-markup" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseUnderline" cname="use-underline" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WidthChars" cname="width-chars" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Wrap" cname="wrap" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapMode" cname="wrap-mode" type="PangoWrapMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="misc" access="public" writeable="false" readable="true" name="Misc" type="GtkMisc*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkLabelPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActivateCurrentLink" cname="activate-current-link" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ActivateLink" cname="activate-link" when="last" field_name="activate_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="CopyClipboard" cname="copy-clipboard" when="last" field_name="copy_clipboard">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="MoveCursor" cname="move-cursor" when="last" field_name="move_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="step" type="GtkMovementStep"/>
          <parameter name="count" type="gint"/>
          <parameter name="extend_selection" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="PopulatePopup" cname="populate-popup" when="last" field_name="populate_popup">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu" type="GtkMenu*"/>
        </parameters>
      </signal>
    </object>
    <object name="Layout" cname="GtkLayout" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkScrollable"/>
      </implements>
      <class_struct cname="GtkLayoutClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_layout_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_layout_new">
        <parameters>
          <parameter name="hadjustment" type="GtkAdjustment*"/>
          <parameter name="vadjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <method name="GetBinWindow" cname="gtk_layout_get_bin_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GetHadjustment" cname="gtk_layout_get_hadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gtk_layout_get_size">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="width" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetVadjustment" cname="gtk_layout_get_vadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="Move" cname="gtk_layout_move">
        <return-type type="void"/>
        <parameters>
          <parameter name="child_widget" type="GtkWidget*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="Put" cname="gtk_layout_put">
        <return-type type="void"/>
        <parameters>
          <parameter name="child_widget" type="GtkWidget*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_layout_set_hadjustment" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_layout_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="guint"/>
          <parameter name="height" type="guint"/>
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_layout_set_vadjustment" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <property name="Height" cname="height" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Width" cname="width" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkLayoutPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="LevelBar" cname="GtkLevelBar" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkLevelBarClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="offset_changed"/>
        <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="gpointer" array="true" array_len="16"/>
      </class_struct>
      <method name="GetType" cname="gtk_level_bar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_level_bar_new" disable_void_ctor=""/>
      <constructor cname="gtk_level_bar_new_for_interval">
        <parameters>
          <parameter name="min_value" type="gdouble"/>
          <parameter name="max_value" type="gdouble"/>
        </parameters>
      </constructor>
      <method name="AddOffsetValue" cname="gtk_level_bar_add_offset_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="GetInverted" cname="gtk_level_bar_get_inverted">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetMaxValue" cname="gtk_level_bar_get_max_value">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetMinValue" cname="gtk_level_bar_get_min_value">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetMode" cname="gtk_level_bar_get_mode">
        <return-type type="GtkLevelBarMode"/>
        <parameters/>
      </method>
      <method name="GetOffsetValue" cname="gtk_level_bar_get_offset_value">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
          <parameter name="value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetValue" cname="gtk_level_bar_get_value">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="RemoveOffsetValue" cname="gtk_level_bar_remove_offset_value">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetInverted" cname="gtk_level_bar_set_inverted">
        <return-type type="void"/>
        <parameters>
          <parameter name="inverted" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMaxValue" cname="gtk_level_bar_set_max_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetMinValue" cname="gtk_level_bar_set_min_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_level_bar_set_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GtkLevelBarMode"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_level_bar_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <property name="Inverted" cname="inverted" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MaxValue" cname="max-value" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MinValue" cname="min-value" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Mode" cname="mode" type="GtkLevelBarMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Value" cname="value" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="private" writeable="false" readable="false" name="Parent" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkLevelBarPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="OffsetChanged" cname="offset-changed" when="first" field_name="offset_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="LinkButton" cname="GtkLinkButton" abstract="false" opaque="false" hidden="false" parent="GtkButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkLinkButtonClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GtkButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="activate_link"/>
        <method vm="_gtk_padding1"/>
        <method vm="_gtk_padding2"/>
        <method vm="_gtk_padding3"/>
        <method vm="_gtk_padding4"/>
      </class_struct>
      <virtual_method name="_gtkGtkPadding1" cname="_gtk_padding1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkPadding2" cname="_gtk_padding2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkPadding3" cname="_gtk_padding3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkPadding4" cname="_gtk_padding4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_link_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_link_button_new">
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_link_button_new_with_label">
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetUri" cname="gtk_link_button_get_uri">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetVisited" cname="gtk_link_button_get_visited">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetUri" cname="gtk_link_button_set_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetVisited" cname="gtk_link_button_set_visited">
        <return-type type="void"/>
        <parameters>
          <parameter name="visited" type="gboolean"/>
        </parameters>
      </method>
      <property name="Uri" cname="uri" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visited" cname="visited" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GtkButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkLinkButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActivateLink" cname="activate-link" when="last" field_name="activate_link">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
    </object>
    <object name="ListStore" cname="GtkListStore" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkTreeDragDest"/>
        <interface cname="GtkTreeDragSource"/>
        <interface cname="GtkTreeModel"/>
        <interface cname="GtkTreeSortable"/>
      </implements>
      <class_struct cname="GtkListStoreClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_list_store_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_list_store_newv">
        <parameters>
          <parameter name="n_columns" type="gint"/>
          <parameter name="types" type="GType*" array="true" array_length_param_index="0"/>
        </parameters>
      </constructor>
      <method name="Append" cname="gtk_list_store_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Clear" cname="gtk_list_store_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Insert" cname="gtk_list_store_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="InsertAfter" cname="gtk_list_store_insert_after">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="sibling" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InsertBefore" cname="gtk_list_store_insert_before">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="sibling" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InsertWithValuesv" cname="gtk_list_store_insert_with_valuesv">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="position" type="gint"/>
          <parameter name="columns" type="gint*" array="true" array_length_param_index="4"/>
          <parameter name="values" type="GValue*" array="true" array_length_param_index="4"/>
          <parameter name="n_values" type="gint"/>
        </parameters>
      </method>
      <method name="IterIsValid" cname="gtk_list_store_iter_is_valid">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MoveAfter" cname="gtk_list_store_move_after">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="position" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MoveBefore" cname="gtk_list_store_move_before">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="position" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Prepend" cname="gtk_list_store_prepend">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Remove" cname="gtk_list_store_remove">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_list_store_reorder">
        <return-type type="void"/>
        <parameters>
          <parameter name="new_order" type="gint*" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="SetColumnTypes" cname="gtk_list_store_set_column_types">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_columns" type="gint"/>
          <parameter name="types" type="GType*" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_list_store_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="column" type="gint"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetValuesv" cname="gtk_list_store_set_valuesv">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="columns" type="gint*" array="true" array_length_param_index="3"/>
          <parameter name="values" type="GValue*" array="true" array_length_param_index="3"/>
          <parameter name="n_values" type="gint"/>
        </parameters>
      </method>
      <method name="Swap" cname="gtk_list_store_swap">
        <return-type type="void"/>
        <parameters>
          <parameter name="a" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="b" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkListStorePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="LockButton" cname="GtkLockButton" abstract="false" opaque="false" hidden="false" parent="GtkButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkLockButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="reserved0"/>
        <method vm="reserved1"/>
        <method vm="reserved2"/>
        <method vm="reserved3"/>
        <method vm="reserved4"/>
        <method vm="reserved5"/>
        <method vm="reserved6"/>
        <method vm="reserved7"/>
      </class_struct>
      <virtual_method name="Reserved0" cname="reserved0" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Reserved1" cname="reserved1" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Reserved2" cname="reserved2" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Reserved3" cname="reserved3" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Reserved4" cname="reserved4" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Reserved5" cname="reserved5" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Reserved6" cname="reserved6" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="Reserved7" cname="reserved7" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_lock_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_lock_button_new">
        <parameters>
          <parameter name="permission" type="GPermission*"/>
        </parameters>
      </constructor>
      <method name="GetPermission" cname="gtk_lock_button_get_permission">
        <return-type type="GPermission*"/>
        <parameters/>
      </method>
      <method name="SetPermission" cname="gtk_lock_button_set_permission">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="permission" type="GPermission*"/>
        </parameters>
      </method>
      <property name="Permission" cname="permission" type="GPermission*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TextLock" cname="text-lock" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="TextUnlock" cname="text-unlock" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="TooltipLock" cname="tooltip-lock" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="TooltipNotAuthorized" cname="tooltip-not-authorized" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="TooltipUnlock" cname="tooltip-unlock" type="gchar*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkButton*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkLockButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Menu" cname="GtkMenu" abstract="false" opaque="false" hidden="false" parent="GtkMenuShell">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMenuClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMenuShellClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_menu_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_menu_new" disable_void_ctor=""/>
      <constructor cname="gtk_menu_new_from_model">
        <parameters>
          <parameter name="model" type="GMenuModel*"/>
        </parameters>
      </constructor>
      <method name="GetForAttachWidget" cname="gtk_menu_get_for_attach_widget" shared="true">
        <return-type type="GList*" element_type="GtkWidget*"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="Attach" cname="gtk_menu_attach">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="left_attach" type="guint"/>
          <parameter name="right_attach" type="guint"/>
          <parameter name="top_attach" type="guint"/>
          <parameter name="bottom_attach" type="guint"/>
        </parameters>
      </method>
      <method name="AttachToWidget" cname="gtk_menu_attach_to_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="attach_widget" type="GtkWidget*"/>
          <parameter scope="async" allow-none="1" name="detacher" type="GtkMenuDetachFunc"/>
        </parameters>
      </method>
      <method name="Detach" cname="gtk_menu_detach">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAccelGroup" cname="gtk_menu_get_accel_group">
        <return-type type="GtkAccelGroup*"/>
        <parameters/>
      </method>
      <method name="GetAccelPath" cname="gtk_menu_get_accel_path">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetActive" cname="gtk_menu_get_active">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetAttachWidget" cname="gtk_menu_get_attach_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetMonitor" cname="gtk_menu_get_monitor">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetReserveToggleSize" cname="gtk_menu_get_reserve_toggle_size">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTearoffState" cname="gtk_menu_get_tearoff_state">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTitle" cname="gtk_menu_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="Popdown" cname="gtk_menu_popdown">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Popup" cname="gtk_menu_popup">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="parent_menu_shell" type="GtkWidget*"/>
          <parameter allow-none="1" name="parent_menu_item" type="GtkWidget*"/>
          <parameter closure="3" scope="async" allow-none="1" name="func" type="GtkMenuPositionFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="button" type="guint"/>
          <parameter name="activate_time" type="guint32"/>
        </parameters>
      </method>
      <method name="PopupForDevice" cname="gtk_menu_popup_for_device">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="device" type="GdkDevice*"/>
          <parameter allow-none="1" name="parent_menu_shell" type="GtkWidget*"/>
          <parameter allow-none="1" name="parent_menu_item" type="GtkWidget*"/>
          <parameter closure="4" destroy="5" scope="notified" allow-none="1" name="func" type="GtkMenuPositionFunc"/>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
          <parameter name="button" type="guint"/>
          <parameter name="activate_time" type="guint32"/>
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_menu_reorder_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="Reposition" cname="gtk_menu_reposition">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetAccelGroup" cname="gtk_menu_set_accel_group">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_menu_set_accel_path">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="accel_path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetActive" cname="gtk_menu_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="SetMonitor" cname="gtk_menu_set_monitor">
        <return-type type="void"/>
        <parameters>
          <parameter name="monitor_num" type="gint"/>
        </parameters>
      </method>
      <method name="SetReserveToggleSize" cname="gtk_menu_set_reserve_toggle_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="reserve_toggle_size" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_menu_set_screen">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="SetTearoffState" cname="gtk_menu_set_tearoff_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="torn_off" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_menu_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="AccelGroup" cname="accel-group" type="GtkAccelGroup*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AccelPath" cname="accel-path" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Active" cname="active" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AttachWidget" cname="attach-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Monitor" cname="monitor" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ReserveToggleSize" cname="reserve-toggle-size" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TearoffState" cname="tearoff-state" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TearoffTitle" cname="tearoff-title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="menu_shell" access="public" writeable="false" readable="true" name="MenuShell" type="GtkMenuShell*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMenuPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="MoveScroll" cname="move-scroll" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="scroll_type" type="GtkScrollType"/>
        </parameters>
      </signal>
    </object>
    <object name="MenuBar" cname="GtkMenuBar" abstract="false" opaque="false" hidden="false" parent="GtkMenuShell">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMenuBarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMenuShellClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_menu_bar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_menu_bar_new" disable_void_ctor=""/>
      <constructor cname="gtk_menu_bar_new_from_model">
        <parameters>
          <parameter name="model" type="GMenuModel*"/>
        </parameters>
      </constructor>
      <method name="GetChildPackDirection" cname="gtk_menu_bar_get_child_pack_direction">
        <return-type type="GtkPackDirection"/>
        <parameters/>
      </method>
      <method name="GetPackDirection" cname="gtk_menu_bar_get_pack_direction">
        <return-type type="GtkPackDirection"/>
        <parameters/>
      </method>
      <method name="SetChildPackDirection" cname="gtk_menu_bar_set_child_pack_direction">
        <return-type type="void"/>
        <parameters>
          <parameter name="child_pack_dir" type="GtkPackDirection"/>
        </parameters>
      </method>
      <method name="SetPackDirection" cname="gtk_menu_bar_set_pack_direction">
        <return-type type="void"/>
        <parameters>
          <parameter name="pack_dir" type="GtkPackDirection"/>
        </parameters>
      </method>
      <property name="ChildPackDirection" cname="child-pack-direction" type="GtkPackDirection" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PackDirection" cname="pack-direction" type="GtkPackDirection" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="menu_shell" access="public" writeable="false" readable="true" name="MenuShell" type="GtkMenuShell*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMenuBarPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="MenuButton" cname="GtkMenuButton" abstract="false" opaque="false" hidden="false" parent="GtkToggleButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMenuButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToggleButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_menu_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_menu_button_new" disable_void_ctor=""/>
      <method name="GetAlignWidget" cname="gtk_menu_button_get_align_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetDirection" cname="gtk_menu_button_get_direction">
        <return-type type="GtkArrowType"/>
        <parameters/>
      </method>
      <method name="GetMenuModel" cname="gtk_menu_button_get_menu_model">
        <return-type type="GMenuModel*"/>
        <parameters/>
      </method>
      <method name="GetPopup" cname="gtk_menu_button_get_popup">
        <return-type type="GtkMenu*"/>
        <parameters/>
      </method>
      <method name="SetAlignWidget" cname="gtk_menu_button_set_align_widget">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="align_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetDirection" cname="gtk_menu_button_set_direction">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction" type="GtkArrowType"/>
        </parameters>
      </method>
      <method name="SetMenuModel" cname="gtk_menu_button_set_menu_model">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="menu_model" type="GMenuModel*"/>
        </parameters>
      </method>
      <method name="SetPopup" cname="gtk_menu_button_set_popup">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="popup" type="GtkWidget*"/>
        </parameters>
      </method>
      <property name="AlignWidget" cname="align-widget" type="GtkContainer*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Direction" cname="direction" type="GtkArrowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MenuModel" cname="menu-model" type="GMenuModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Popup" cname="popup" type="GtkMenu*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkToggleButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMenuButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="MenuItem" cname="GtkMenuItem" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMenuItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="hide_on_activate" access="public" writeable="false" readable="true" bits="1" name="HideOnActivate" type="guint"/>
        <method signal_vm="activate"/>
        <method signal_vm="activate_item"/>
        <method signal_vm="toggle_size_request"/>
        <method signal_vm="toggle_size_allocate"/>
        <method vm="set_label"/>
        <method vm="get_label"/>
        <method signal_vm="select"/>
        <method signal_vm="deselect"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_menu_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_menu_item_new" disable_void_ctor=""/>
      <constructor cname="gtk_menu_item_new_with_label">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_menu_item_new_with_mnemonic">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <virtual_method name="GetLabel" cname="get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SetLabel" cname="set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="GetAccelPath" cname="gtk_menu_item_get_accel_path">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLabel" cname="gtk_menu_item_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetReserveIndicator" cname="gtk_menu_item_get_reserve_indicator">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRightJustified" cname="gtk_menu_item_get_right_justified" deprecated="true">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSubmenu" cname="gtk_menu_item_get_submenu">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetUseUnderline" cname="gtk_menu_item_get_use_underline">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAccelPath" cname="gtk_menu_item_set_accel_path">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="accel_path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_menu_item_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetReserveIndicator" cname="gtk_menu_item_set_reserve_indicator">
        <return-type type="void"/>
        <parameters>
          <parameter name="reserve" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRightJustified" cname="gtk_menu_item_set_right_justified" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="right_justified" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSubmenu" cname="gtk_menu_item_set_submenu">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="submenu" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_menu_item_set_use_underline">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <property name="AccelPath" cname="accel-path" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RightJustified" cname="right-justified" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Submenu" cname="submenu" type="GtkMenu*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseUnderline" cname="use-underline" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMenuItemPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Activate" cname="activate" when="first" field_name="activate">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ActivateItem" cname="activate-item" when="first" field_name="activate_item">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Deselect" cname="deselect" when="first" field_name="deselect">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Select" cname="select" when="first" field_name="select">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ToggleSizeAllocate" cname="toggle-size-allocate" when="first" field_name="toggle_size_allocate">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="gint"/>
        </parameters>
      </signal>
      <signal name="ToggleSizeRequest" cname="toggle-size-request" when="first" field_name="toggle_size_request">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </signal>
    </object>
    <object name="MenuShell" cname="GtkMenuShell" abstract="true" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMenuShellClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="submenu_placement" access="public" writeable="false" readable="true" bits="1" name="SubmenuPlacement" type="guint"/>
        <method signal_vm="deactivate"/>
        <method signal_vm="selection_done"/>
        <method signal_vm="move_current"/>
        <method signal_vm="activate_current"/>
        <method signal_vm="cancel"/>
        <method vm="select_item"/>
        <method signal_vm="insert"/>
        <method vm="get_popup_delay"/>
        <method signal_vm="move_selected"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_menu_shell_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetPopupDelay" cname="get_popup_delay">
        <return-type type="gint"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="SelectItem" cname="select_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_item" type="GtkWidget*"/>
        </parameters>
      </virtual_method>
      <method name="ActivateItem" cname="gtk_menu_shell_activate_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_item" type="GtkWidget*"/>
          <parameter name="force_deactivate" type="gboolean"/>
        </parameters>
      </method>
      <method name="Append" cname="gtk_menu_shell_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="BindModel" cname="gtk_menu_shell_bind_model">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="model" type="GMenuModel*"/>
          <parameter allow-none="1" name="action_namespace" type="const-gchar*"/>
          <parameter name="with_separators" type="gboolean"/>
        </parameters>
      </method>
      <method name="Deselect" cname="gtk_menu_shell_deselect">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetParentShell" cname="gtk_menu_shell_get_parent_shell">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetSelectedItem" cname="gtk_menu_shell_get_selected_item">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetTakeFocus" cname="gtk_menu_shell_get_take_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Prepend" cname="gtk_menu_shell_prepend">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SelectFirst" cname="gtk_menu_shell_select_first">
        <return-type type="void"/>
        <parameters>
          <parameter name="search_sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SelectItem" cname="gtk_menu_shell_select_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_item" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetTakeFocus" cname="gtk_menu_shell_set_take_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="take_focus" type="gboolean"/>
        </parameters>
      </method>
      <property name="TakeFocus" cname="take-focus" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMenuShellPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActivateCurrent" cname="activate-current" when="last" field_name="activate_current">
        <return-type type="void"/>
        <parameters>
          <parameter name="force_hide" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="Cancel" cname="cancel" when="last" field_name="cancel">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="CycleFocus" cname="cycle-focus" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction" type="GtkDirectionType"/>
        </parameters>
      </signal>
      <signal name="Deactivate" cname="deactivate" when="first" field_name="deactivate">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Insert" cname="insert" when="first" field_name="insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </signal>
      <signal name="MoveCurrent" cname="move-current" when="last" field_name="move_current">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction" type="GtkMenuDirectionType"/>
        </parameters>
      </signal>
      <signal name="MoveSelected" cname="move-selected" when="last" field_name="move_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="distance" type="gint"/>
        </parameters>
      </signal>
      <signal name="SelectionDone" cname="selection-done" when="first" field_name="selection_done">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="MenuToolButton" cname="GtkMenuToolButton" abstract="false" opaque="false" hidden="false" parent="GtkToolButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMenuToolButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToolButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="show_menu"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_menu_tool_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_menu_tool_button_new">
        <parameters>
          <parameter name="icon_widget" type="GtkWidget*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_menu_tool_button_new_from_stock">
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetMenu" cname="gtk_menu_tool_button_get_menu">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="SetArrowTooltipMarkup" cname="gtk_menu_tool_button_set_arrow_tooltip_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="markup" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetArrowTooltipText" cname="gtk_menu_tool_button_set_arrow_tooltip_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMenu" cname="gtk_menu_tool_button_set_menu">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu" type="GtkWidget*"/>
        </parameters>
      </method>
      <property name="Menu" cname="menu" type="GtkMenu*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkToolButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMenuToolButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ShowMenu" cname="show-menu" when="first" field_name="show_menu">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="MessageDialog" cname="GtkMessageDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMessageDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_message_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetImage" cname="gtk_message_dialog_get_image">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetMessageArea" cname="gtk_message_dialog_get_message_area">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="SetImage" cname="gtk_message_dialog_set_image">
        <return-type type="void"/>
        <parameters>
          <parameter name="image" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetMarkup" cname="gtk_message_dialog_set_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Buttons" cname="buttons" type="GtkButtonsType" readable="false" writeable="true" construct="false" construct-only="true"/>
      <property name="Image" cname="image" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MessageArea" cname="message-area" type="GtkWidget*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="MessageType" cname="message-type" type="GtkMessageType" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="SecondaryText" cname="secondary-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SecondaryUseMarkup" cname="secondary-use-markup" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseMarkup" cname="use-markup" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMessageDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Misc" cname="GtkMisc" abstract="true" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkMiscClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_misc_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetAlignment" cname="gtk_misc_get_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="xalign" type="gfloat*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="yalign" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPadding" cname="gtk_misc_get_padding">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="xpad" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="ypad" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetAlignment" cname="gtk_misc_set_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
          <parameter name="yalign" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetPadding" cname="gtk_misc_set_padding">
        <return-type type="void"/>
        <parameters>
          <parameter name="xpad" type="gint"/>
          <parameter name="ypad" type="gint"/>
        </parameters>
      </method>
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Xpad" cname="xpad" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Ypad" cname="ypad" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="widget" access="public" writeable="false" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkMiscPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="MountOperation" cname="GtkMountOperation" abstract="false" opaque="false" hidden="false" parent="GMountOperation">
      <class_struct cname="GtkMountOperationClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GMountOperationClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_mount_operation_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_mount_operation_new">
        <parameters>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </constructor>
      <method name="GetParent" cname="gtk_mount_operation_get_parent">
        <return-type type="GtkWindow*"/>
        <parameters/>
      </method>
      <method name="GetScreen" cname="gtk_mount_operation_get_screen">
        <return-type type="GdkScreen*"/>
        <parameters/>
      </method>
      <method name="IsShowing" cname="gtk_mount_operation_is_showing">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetParent" cname="gtk_mount_operation_set_parent">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_mount_operation_set_screen">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <property name="Parent" cname="parent" type="GtkWindow*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Screen" cname="screen" type="GdkScreen*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GMountOperation*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkMountOperationPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Notebook" cname="GtkNotebook" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkNotebookClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="switch_page"/>
        <method signal_vm="select_page"/>
        <method signal_vm="focus_tab"/>
        <method signal_vm="change_current_page"/>
        <method signal_vm="move_focus_out"/>
        <method signal_vm="reorder_tab"/>
        <method vm="insert_page"/>
        <method signal_vm="create_window"/>
        <method signal_vm="page_reordered"/>
        <method signal_vm="page_removed"/>
        <method signal_vm="page_added"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_notebook_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_notebook_new" disable_void_ctor=""/>
      <virtual_method name="InsertPage" cname="insert_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="tab_label" type="GtkWidget*"/>
          <parameter name="menu_label" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </virtual_method>
      <method name="AppendPage" cname="gtk_notebook_append_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="tab_label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="AppendPageMenu" cname="gtk_notebook_append_page_menu">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="tab_label" type="GtkWidget*"/>
          <parameter allow-none="1" name="menu_label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetActionWidget" cname="gtk_notebook_get_action_widget">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="pack_type" type="GtkPackType"/>
        </parameters>
      </method>
      <method name="GetCurrentPage" cname="gtk_notebook_get_current_page">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetGroupName" cname="gtk_notebook_get_group_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetMenuLabel" cname="gtk_notebook_get_menu_label">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetMenuLabelText" cname="gtk_notebook_get_menu_label_text">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetNPages" cname="gtk_notebook_get_n_pages">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetNthPage" cname="gtk_notebook_get_nth_page">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </method>
      <method name="GetScrollable" cname="gtk_notebook_get_scrollable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowBorder" cname="gtk_notebook_get_show_border">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShowTabs" cname="gtk_notebook_get_show_tabs">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTabDetachable" cname="gtk_notebook_get_tab_detachable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetTabHborder" cname="gtk_notebook_get_tab_hborder" deprecated="true">
        <return-type type="guint16"/>
        <parameters/>
      </method>
      <method name="GetTabLabel" cname="gtk_notebook_get_tab_label">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetTabLabelText" cname="gtk_notebook_get_tab_label_text">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetTabPos" cname="gtk_notebook_get_tab_pos">
        <return-type type="GtkPositionType"/>
        <parameters/>
      </method>
      <method name="GetTabReorderable" cname="gtk_notebook_get_tab_reorderable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetTabVborder" cname="gtk_notebook_get_tab_vborder" deprecated="true">
        <return-type type="guint16"/>
        <parameters/>
      </method>
      <method name="InsertPage" cname="gtk_notebook_insert_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="tab_label" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="InsertPageMenu" cname="gtk_notebook_insert_page_menu">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="tab_label" type="GtkWidget*"/>
          <parameter allow-none="1" name="menu_label" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="NextPage" cname="gtk_notebook_next_page">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PageNum" cname="gtk_notebook_page_num">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="PopupDisable" cname="gtk_notebook_popup_disable">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PopupEnable" cname="gtk_notebook_popup_enable">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PrependPage" cname="gtk_notebook_prepend_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="tab_label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="PrependPageMenu" cname="gtk_notebook_prepend_page_menu">
        <return-type type="gint"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="tab_label" type="GtkWidget*"/>
          <parameter allow-none="1" name="menu_label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="PrevPage" cname="gtk_notebook_prev_page">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemovePage" cname="gtk_notebook_remove_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_notebook_reorder_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="SetActionWidget" cname="gtk_notebook_set_action_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="pack_type" type="GtkPackType"/>
        </parameters>
      </method>
      <method name="SetCurrentPage" cname="gtk_notebook_set_current_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </method>
      <method name="SetGroupName" cname="gtk_notebook_set_group_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="group_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetMenuLabel" cname="gtk_notebook_set_menu_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="menu_label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetMenuLabelText" cname="gtk_notebook_set_menu_label_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="menu_text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetScrollable" cname="gtk_notebook_set_scrollable">
        <return-type type="void"/>
        <parameters>
          <parameter name="scrollable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowBorder" cname="gtk_notebook_set_show_border">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_border" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetShowTabs" cname="gtk_notebook_set_show_tabs">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_tabs" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTabDetachable" cname="gtk_notebook_set_tab_detachable">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="detachable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTabLabel" cname="gtk_notebook_set_tab_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter allow-none="1" name="tab_label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetTabLabelText" cname="gtk_notebook_set_tab_label_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="tab_text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTabPos" cname="gtk_notebook_set_tab_pos">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="GtkPositionType"/>
        </parameters>
      </method>
      <method name="SetTabReorderable" cname="gtk_notebook_set_tab_reorderable">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="reorderable" type="gboolean"/>
        </parameters>
      </method>
      <property name="EnablePopup" cname="enable-popup" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GroupName" cname="group-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Page" cname="page" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Scrollable" cname="scrollable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowBorder" cname="show-border" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowTabs" cname="show-tabs" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TabPos" cname="tab-pos" type="GtkPositionType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="private" writeable="false" readable="false" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkNotebookPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ChangeCurrentPage" cname="change-current-page" when="last" field_name="change_current_page">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gint"/>
        </parameters>
      </signal>
      <signal name="CreateWindow" cname="create-window" when="last" field_name="create_window">
        <return-type type="GtkNotebook*"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </signal>
      <signal name="FocusTab" cname="focus-tab" when="last" field_name="focus_tab">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GtkNotebookTab"/>
        </parameters>
      </signal>
      <signal name="MoveFocusOut" cname="move-focus-out" when="last" field_name="move_focus_out">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkDirectionType"/>
        </parameters>
      </signal>
      <signal name="PageAdded" cname="page-added" when="last" field_name="page_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="page_num" type="guint"/>
        </parameters>
      </signal>
      <signal name="PageRemoved" cname="page-removed" when="last" field_name="page_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="page_num" type="guint"/>
        </parameters>
      </signal>
      <signal name="PageReordered" cname="page-reordered" when="last" field_name="page_reordered">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="page_num" type="guint"/>
        </parameters>
      </signal>
      <signal name="ReorderTab" cname="reorder-tab" when="last" field_name="reorder_tab">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GtkDirectionType"/>
          <parameter name="p0" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="SelectPage" cname="select-page" when="last" field_name="select_page">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="SwitchPage" cname="switch-page" when="last" field_name="switch_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="page" type="GtkWidget*"/>
          <parameter name="page_num" type="guint"/>
        </parameters>
      </signal>
    </object>
    <object name="NumerableIcon" cname="GtkNumerableIcon" abstract="false" opaque="false" hidden="false" parent="GEmblemedIcon">
      <implements>
        <interface cname="GIcon"/>
      </implements>
      <class_struct cname="GtkNumerableIconClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GEmblemedIconClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="padding" access="public" writeable="false" readable="true" name="Padding" type="gpointer" array="true" array_len="16"/>
      </class_struct>
      <method name="GetType" cname="gtk_numerable_icon_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="New" cname="gtk_numerable_icon_new" shared="true">
        <return-type type="GIcon*" owned="true"/>
        <parameters>
          <parameter name="base_icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="NewWithStyleContext" cname="gtk_numerable_icon_new_with_style_context" shared="true">
        <return-type type="GIcon*" owned="true"/>
        <parameters>
          <parameter name="base_icon" type="GIcon*"/>
          <parameter name="context" type="GtkStyleContext*"/>
        </parameters>
      </method>
      <method name="GetBackgroundGicon" cname="gtk_numerable_icon_get_background_gicon">
        <return-type type="GIcon*"/>
        <parameters/>
      </method>
      <method name="GetBackgroundIconName" cname="gtk_numerable_icon_get_background_icon_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetCount" cname="gtk_numerable_icon_get_count">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetLabel" cname="gtk_numerable_icon_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetStyleContext" cname="gtk_numerable_icon_get_style_context">
        <return-type type="GtkStyleContext*"/>
        <parameters/>
      </method>
      <method name="SetBackgroundGicon" cname="gtk_numerable_icon_set_background_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="SetBackgroundIconName" cname="gtk_numerable_icon_set_background_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetCount" cname="gtk_numerable_icon_set_count">
        <return-type type="void"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_numerable_icon_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetStyleContext" cname="gtk_numerable_icon_set_style_context">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyleContext*"/>
        </parameters>
      </method>
      <property name="BackgroundIcon" cname="background-icon" type="GIcon*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundIconName" cname="background-icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Count" cname="count" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StyleContext" cname="style-context" type="GtkStyleContext*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GEmblemedIcon*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkNumerableIconPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="OffscreenWindow" cname="GtkOffscreenWindow" abstract="false" opaque="false" hidden="false" parent="GtkWindow">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkOffscreenWindowClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWindowClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_offscreen_window_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_offscreen_window_new" disable_void_ctor=""/>
      <method name="GetPixbuf" cname="gtk_offscreen_window_get_pixbuf">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetSurface" cname="gtk_offscreen_window_get_surface">
        <return-type type="cairo.Surface"/>
        <parameters/>
      </method>
      <field cname="parent_object" access="public" writeable="false" readable="true" name="ParentObject" type="GtkWindow*"/>
    </object>
    <object name="Overlay" cname="GtkOverlay" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkOverlayClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="get_child_position"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_overlay_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_overlay_new" disable_void_ctor=""/>
      <method name="AddOverlay" cname="gtk_overlay_add_overlay">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkBin*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkOverlayPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="GetChildPosition" cname="get-child-position" when="last" field_name="get_child_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="allocation" type="cairo.RectangleInt" pass_as="out"/>
        </parameters>
      </signal>
    </object>
    <object name="PageSetup" cname="GtkPageSetup" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gtk_page_setup_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_page_setup_new" disable_void_ctor=""/>
      <constructor cname="gtk_page_setup_new_from_file">
        <parameters>
          <parameter name="file_name" type="const-gfilename*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_page_setup_new_from_key_file">
        <parameters>
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="group_name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="gtk_page_setup_copy">
        <return-type type="GtkPageSetup*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetBottomMargin" cname="gtk_page_setup_get_bottom_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetLeftMargin" cname="gtk_page_setup_get_left_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetOrientation" cname="gtk_page_setup_get_orientation">
        <return-type type="GtkPageOrientation"/>
        <parameters/>
      </method>
      <method name="GetPageHeight" cname="gtk_page_setup_get_page_height">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetPageWidth" cname="gtk_page_setup_get_page_width">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetPaperHeight" cname="gtk_page_setup_get_paper_height">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetPaperSize" cname="gtk_page_setup_get_paper_size">
        <return-type type="GtkPaperSize*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetPaperWidth" cname="gtk_page_setup_get_paper_width">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetRightMargin" cname="gtk_page_setup_get_right_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetTopMargin" cname="gtk_page_setup_get_top_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="LoadFile" cname="gtk_page_setup_load_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file_name" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadKeyFile" cname="gtk_page_setup_load_key_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="group_name" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetBottomMargin" cname="gtk_page_setup_set_bottom_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="SetLeftMargin" cname="gtk_page_setup_set_left_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_page_setup_set_orientation">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkPageOrientation"/>
        </parameters>
      </method>
      <method name="SetPaperSize" cname="gtk_page_setup_set_paper_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="GtkPaperSize*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPaperSizeAndDefaultMargins" cname="gtk_page_setup_set_paper_size_and_default_margins">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="GtkPaperSize*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetRightMargin" cname="gtk_page_setup_set_right_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="SetTopMargin" cname="gtk_page_setup_set_top_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="ToFile" cname="gtk_page_setup_to_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file_name" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ToKeyFile" cname="gtk_page_setup_to_key_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="group_name" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="Paned" cname="GtkPaned" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkPanedClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="cycle_child_focus"/>
        <method signal_vm="toggle_handle_focus"/>
        <method signal_vm="move_handle"/>
        <method signal_vm="cycle_handle_focus"/>
        <method signal_vm="accept_position"/>
        <method signal_vm="cancel_position"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_paned_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_paned_new">
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </constructor>
      <method name="Add1" cname="gtk_paned_add1">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="Add2" cname="gtk_paned_add2">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetChild1" cname="gtk_paned_get_child1">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetChild2" cname="gtk_paned_get_child2">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetHandleWindow" cname="gtk_paned_get_handle_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GetPosition" cname="gtk_paned_get_position">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="Pack1" cname="gtk_paned_pack1">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="resize" type="gboolean"/>
          <parameter name="shrink" type="gboolean"/>
        </parameters>
      </method>
      <method name="Pack2" cname="gtk_paned_pack2">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="resize" type="gboolean"/>
          <parameter name="shrink" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_paned_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <property name="MaxPosition" cname="max-position" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="MinPosition" cname="min-position" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Position" cname="position" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PositionSet" cname="position-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkPanedPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="AcceptPosition" cname="accept-position" when="last" field_name="accept_position">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="CancelPosition" cname="cancel-position" when="last" field_name="cancel_position">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="CycleChildFocus" cname="cycle-child-focus" when="last" field_name="cycle_child_focus">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="reversed" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="CycleHandleFocus" cname="cycle-handle-focus" when="last" field_name="cycle_handle_focus">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="reversed" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="MoveHandle" cname="move-handle" when="last" field_name="move_handle">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="scroll_type" type="GtkScrollType"/>
        </parameters>
      </signal>
      <signal name="ToggleHandleFocus" cname="toggle-handle-focus" when="last" field_name="toggle_handle_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
    </object>
    <object name="Plug" cname="GtkPlug" abstract="false" opaque="false" hidden="false" parent="GtkWindow">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkPlugClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWindowClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="embedded"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_plug_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_plug_new">
        <parameters>
          <parameter name="socket_id" type="gulong"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_plug_new_for_display">
        <parameters>
          <parameter name="display" type="GdkDisplay*"/>
          <parameter name="socket_id" type="gulong"/>
        </parameters>
      </constructor>
      <method name="Construct" cname="gtk_plug_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="socket_id" type="gulong"/>
        </parameters>
      </method>
      <method name="ConstructForDisplay" cname="gtk_plug_construct_for_display">
        <return-type type="void"/>
        <parameters>
          <parameter name="display" type="GdkDisplay*"/>
          <parameter name="socket_id" type="gulong"/>
        </parameters>
      </method>
      <method name="GetEmbedded" cname="gtk_plug_get_embedded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetId" cname="gtk_plug_get_id">
        <return-type type="gulong"/>
        <parameters/>
      </method>
      <method name="GetSocketWindow" cname="gtk_plug_get_socket_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <property name="SocketWindow" cname="socket-window" type="GdkWindow*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="window" access="public" writeable="false" readable="true" name="Window" type="GtkWindow*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkPlugPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Embedded" cname="embedded" when="last" field_name="embedded">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="PrintContext" cname="GtkPrintContext" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gtk_print_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="CreatePangoContext" cname="gtk_print_context_create_pango_context">
        <return-type type="PangoContext*" owned="true"/>
        <parameters/>
      </method>
      <method name="CreatePangoLayout" cname="gtk_print_context_create_pango_layout">
        <return-type type="PangoLayout*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetCairoContext" cname="gtk_print_context_get_cairo_context">
        <return-type type="cairo.Context"/>
        <parameters/>
      </method>
      <method name="GetDpiX" cname="gtk_print_context_get_dpi_x">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetDpiY" cname="gtk_print_context_get_dpi_y">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetHardMargins" cname="gtk_print_context_get_hard_margins">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="top" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="bottom" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="left" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="right" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetHeight" cname="gtk_print_context_get_height">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetPageSetup" cname="gtk_print_context_get_page_setup">
        <return-type type="GtkPageSetup*"/>
        <parameters/>
      </method>
      <method name="GetPangoFontmap" cname="gtk_print_context_get_pango_fontmap">
        <return-type type="PangoFontMap*"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="gtk_print_context_get_width">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="SetCairoContext" cname="gtk_print_context_set_cairo_context">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="dpi_x" type="gdouble"/>
          <parameter name="dpi_y" type="gdouble"/>
        </parameters>
      </method>
    </object>
    <object name="PrintOperation" cname="GtkPrintOperation" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkPrintOperationPreview"/>
      </implements>
      <class_struct cname="GtkPrintOperationClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="done"/>
        <method signal_vm="begin_print"/>
        <method signal_vm="paginate"/>
        <method signal_vm="request_page_setup"/>
        <method signal_vm="draw_page"/>
        <method signal_vm="end_print"/>
        <method signal_vm="status_changed"/>
        <method signal_vm="create_custom_widget"/>
        <method signal_vm="custom_widget_apply"/>
        <method signal_vm="preview"/>
        <method signal_vm="update_custom_widget"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_print_operation_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_print_operation_new" disable_void_ctor=""/>
      <method name="Cancel" cname="gtk_print_operation_cancel">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DrawPageFinish" cname="gtk_print_operation_draw_page_finish">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDefaultPageSetup" cname="gtk_print_operation_get_default_page_setup">
        <return-type type="GtkPageSetup*"/>
        <parameters/>
      </method>
      <method name="GetEmbedPageSetup" cname="gtk_print_operation_get_embed_page_setup">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetError" cname="gtk_print_operation_get_error">
        <return-type type="void"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="GetHasSelection" cname="gtk_print_operation_get_has_selection">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetNPagesToPrint" cname="gtk_print_operation_get_n_pages_to_print">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPrintSettings" cname="gtk_print_operation_get_print_settings">
        <return-type type="GtkPrintSettings*"/>
        <parameters/>
      </method>
      <method name="GetStatus" cname="gtk_print_operation_get_status">
        <return-type type="GtkPrintStatus"/>
        <parameters/>
      </method>
      <method name="GetStatusString" cname="gtk_print_operation_get_status_string">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetSupportSelection" cname="gtk_print_operation_get_support_selection">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsFinished" cname="gtk_print_operation_is_finished">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Run" cname="gtk_print_operation_run">
        <return-type type="GtkPrintOperationResult"/>
        <parameters throws="1">
          <parameter name="action" type="GtkPrintOperationAction"/>
          <parameter allow-none="1" name="parent" type="GtkWindow*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetAllowAsync" cname="gtk_print_operation_set_allow_async">
        <return-type type="void"/>
        <parameters>
          <parameter name="allow_async" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCurrentPage" cname="gtk_print_operation_set_current_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="current_page" type="gint"/>
        </parameters>
      </method>
      <method name="SetCustomTabLabel" cname="gtk_print_operation_set_custom_tab_label">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDefaultPageSetup" cname="gtk_print_operation_set_default_page_setup">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="default_page_setup" type="GtkPageSetup*"/>
        </parameters>
      </method>
      <method name="SetDeferDrawing" cname="gtk_print_operation_set_defer_drawing">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetEmbedPageSetup" cname="gtk_print_operation_set_embed_page_setup">
        <return-type type="void"/>
        <parameters>
          <parameter name="embed" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetExportFilename" cname="gtk_print_operation_set_export_filename">
        <return-type type="void"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SetHasSelection" cname="gtk_print_operation_set_has_selection">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_selection" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetJobName" cname="gtk_print_operation_set_job_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="job_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetNPages" cname="gtk_print_operation_set_n_pages">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_pages" type="gint"/>
        </parameters>
      </method>
      <method name="SetPrintSettings" cname="gtk_print_operation_set_print_settings">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="print_settings" type="GtkPrintSettings*"/>
        </parameters>
      </method>
      <method name="SetShowProgress" cname="gtk_print_operation_set_show_progress">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_progress" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSupportSelection" cname="gtk_print_operation_set_support_selection">
        <return-type type="void"/>
        <parameters>
          <parameter name="support_selection" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTrackPrintStatus" cname="gtk_print_operation_set_track_print_status">
        <return-type type="void"/>
        <parameters>
          <parameter name="track_status" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUnit" cname="gtk_print_operation_set_unit">
        <return-type type="void"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="SetUseFullPage" cname="gtk_print_operation_set_use_full_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="full_page" type="gboolean"/>
        </parameters>
      </method>
      <property name="AllowAsync" cname="allow-async" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CurrentPage" cname="current-page" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CustomTabLabel" cname="custom-tab-label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DefaultPageSetup" cname="default-page-setup" type="GtkPageSetup*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EmbedPageSetup" cname="embed-page-setup" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ExportFilename" cname="export-filename" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasSelection" cname="has-selection" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="JobName" cname="job-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="NPages" cname="n-pages" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="NPagesToPrint" cname="n-pages-to-print" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="PrintSettings" cname="print-settings" type="GtkPrintSettings*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowProgress" cname="show-progress" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Status" cname="status" type="GtkPrintStatus" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="StatusString" cname="status-string" type="gchar*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="SupportSelection" cname="support-selection" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TrackPrintStatus" cname="track-print-status" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Unit" cname="unit" type="GtkUnit" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseFullPage" cname="use-full-page" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkPrintOperationPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="BeginPrint" cname="begin-print" when="last" field_name="begin_print">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkPrintContext*"/>
        </parameters>
      </signal>
      <signal name="CreateCustomWidget" cname="create-custom-widget" when="last" field_name="create_custom_widget">
        <return-type type="GObject*"/>
        <parameters/>
      </signal>
      <signal name="CustomWidgetApply" cname="custom-widget-apply" when="last" field_name="custom_widget_apply">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="Done" cname="done" when="last" field_name="done">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="GtkPrintOperationResult"/>
        </parameters>
      </signal>
      <signal name="DrawPage" cname="draw-page" when="last" field_name="draw_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkPrintContext*"/>
          <parameter name="page_nr" type="gint"/>
        </parameters>
      </signal>
      <signal name="EndPrint" cname="end-print" when="last" field_name="end_print">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkPrintContext*"/>
        </parameters>
      </signal>
      <signal name="Paginate" cname="paginate" when="last" field_name="paginate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="GtkPrintContext*"/>
        </parameters>
      </signal>
      <signal name="Preview" cname="preview" when="last" field_name="preview">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="preview" type="GtkPrintOperationPreview*"/>
          <parameter name="context" type="GtkPrintContext*"/>
          <parameter allow-none="1" name="parent" type="GtkWindow*"/>
        </parameters>
      </signal>
      <signal name="RequestPageSetup" cname="request-page-setup" when="last" field_name="request_page_setup">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkPrintContext*"/>
          <parameter name="page_nr" type="gint"/>
          <parameter name="setup" type="GtkPageSetup*"/>
        </parameters>
      </signal>
      <signal name="StatusChanged" cname="status-changed" when="last" field_name="status_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="UpdateCustomWidget" cname="update-custom-widget" when="last" field_name="update_custom_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="setup" type="GtkPageSetup*"/>
          <parameter name="settings" type="GtkPrintSettings*"/>
        </parameters>
      </signal>
    </object>
    <object name="PrintSettings" cname="GtkPrintSettings" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gtk_print_settings_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_print_settings_new" disable_void_ctor=""/>
      <constructor cname="gtk_print_settings_new_from_file">
        <parameters>
          <parameter name="file_name" type="const-gfilename*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_print_settings_new_from_key_file">
        <parameters>
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="group_name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="gtk_print_settings_copy">
        <return-type type="GtkPrintSettings*" owned="true"/>
        <parameters/>
      </method>
      <method name="Foreach" cname="gtk_print_settings_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GtkPrintSettingsFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Get" cname="gtk_print_settings_get">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetBool" cname="gtk_print_settings_get_bool">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetCollate" cname="gtk_print_settings_get_collate">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDefaultSource" cname="gtk_print_settings_get_default_source">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetDither" cname="gtk_print_settings_get_dither">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetDouble" cname="gtk_print_settings_get_double">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetDoubleWithDefault" cname="gtk_print_settings_get_double_with_default">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="def" type="gdouble"/>
        </parameters>
      </method>
      <method name="GetDuplex" cname="gtk_print_settings_get_duplex">
        <return-type type="GtkPrintDuplex"/>
        <parameters/>
      </method>
      <method name="GetFinishings" cname="gtk_print_settings_get_finishings">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetInt" cname="gtk_print_settings_get_int">
        <return-type type="gint"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetIntWithDefault" cname="gtk_print_settings_get_int_with_default">
        <return-type type="gint"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="def" type="gint"/>
        </parameters>
      </method>
      <method name="GetLength" cname="gtk_print_settings_get_length">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetMediaType" cname="gtk_print_settings_get_media_type">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetNCopies" cname="gtk_print_settings_get_n_copies">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetNumberUp" cname="gtk_print_settings_get_number_up">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetNumberUpLayout" cname="gtk_print_settings_get_number_up_layout">
        <return-type type="GtkNumberUpLayout"/>
        <parameters/>
      </method>
      <method name="GetOrientation" cname="gtk_print_settings_get_orientation">
        <return-type type="GtkPageOrientation"/>
        <parameters/>
      </method>
      <method name="GetOutputBin" cname="gtk_print_settings_get_output_bin">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPageRanges" cname="gtk_print_settings_get_page_ranges">
        <return-type type="GtkPageRange**" owned="true" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="num_ranges" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPageSet" cname="gtk_print_settings_get_page_set">
        <return-type type="GtkPageSet"/>
        <parameters/>
      </method>
      <method name="GetPaperHeight" cname="gtk_print_settings_get_paper_height">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetPaperSize" cname="gtk_print_settings_get_paper_size">
        <return-type type="GtkPaperSize*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetPaperWidth" cname="gtk_print_settings_get_paper_width">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetPrintPages" cname="gtk_print_settings_get_print_pages">
        <return-type type="GtkPrintPages"/>
        <parameters/>
      </method>
      <method name="GetPrinter" cname="gtk_print_settings_get_printer">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPrinterLpi" cname="gtk_print_settings_get_printer_lpi">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetQuality" cname="gtk_print_settings_get_quality">
        <return-type type="GtkPrintQuality"/>
        <parameters/>
      </method>
      <method name="GetResolution" cname="gtk_print_settings_get_resolution">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetResolutionX" cname="gtk_print_settings_get_resolution_x">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetResolutionY" cname="gtk_print_settings_get_resolution_y">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetReverse" cname="gtk_print_settings_get_reverse">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetScale" cname="gtk_print_settings_get_scale">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetUseColor" cname="gtk_print_settings_get_use_color">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasKey" cname="gtk_print_settings_has_key">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LoadFile" cname="gtk_print_settings_load_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file_name" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="LoadKeyFile" cname="gtk_print_settings_load_key_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="group_name" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="Set" cname="gtk_print_settings_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter allow-none="1" name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetBool" cname="gtk_print_settings_set_bool">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCollate" cname="gtk_print_settings_set_collate">
        <return-type type="void"/>
        <parameters>
          <parameter name="collate" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDefaultSource" cname="gtk_print_settings_set_default_source">
        <return-type type="void"/>
        <parameters>
          <parameter name="default_source" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDither" cname="gtk_print_settings_set_dither">
        <return-type type="void"/>
        <parameters>
          <parameter name="dither" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDouble" cname="gtk_print_settings_set_double">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetDuplex" cname="gtk_print_settings_set_duplex">
        <return-type type="void"/>
        <parameters>
          <parameter name="duplex" type="GtkPrintDuplex"/>
        </parameters>
      </method>
      <method name="SetFinishings" cname="gtk_print_settings_set_finishings">
        <return-type type="void"/>
        <parameters>
          <parameter name="finishings" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetInt" cname="gtk_print_settings_set_int">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="SetLength" cname="gtk_print_settings_set_length">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="SetMediaType" cname="gtk_print_settings_set_media_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="media_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetNCopies" cname="gtk_print_settings_set_n_copies">
        <return-type type="void"/>
        <parameters>
          <parameter name="num_copies" type="gint"/>
        </parameters>
      </method>
      <method name="SetNumberUp" cname="gtk_print_settings_set_number_up">
        <return-type type="void"/>
        <parameters>
          <parameter name="number_up" type="gint"/>
        </parameters>
      </method>
      <method name="SetNumberUpLayout" cname="gtk_print_settings_set_number_up_layout">
        <return-type type="void"/>
        <parameters>
          <parameter name="number_up_layout" type="GtkNumberUpLayout"/>
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_print_settings_set_orientation">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkPageOrientation"/>
        </parameters>
      </method>
      <method name="SetOutputBin" cname="gtk_print_settings_set_output_bin">
        <return-type type="void"/>
        <parameters>
          <parameter name="output_bin" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPageRanges" cname="gtk_print_settings_set_page_ranges">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_ranges" type="GtkPageRange*" array="true" array_length_param_index="1"/>
          <parameter name="num_ranges" type="gint"/>
        </parameters>
      </method>
      <method name="SetPageSet" cname="gtk_print_settings_set_page_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="page_set" type="GtkPageSet"/>
        </parameters>
      </method>
      <method name="SetPaperHeight" cname="gtk_print_settings_set_paper_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="height" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="SetPaperSize" cname="gtk_print_settings_set_paper_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="paper_size" type="GtkPaperSize*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetPaperWidth" cname="gtk_print_settings_set_paper_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="SetPrintPages" cname="gtk_print_settings_set_print_pages">
        <return-type type="void"/>
        <parameters>
          <parameter name="pages" type="GtkPrintPages"/>
        </parameters>
      </method>
      <method name="SetPrinter" cname="gtk_print_settings_set_printer">
        <return-type type="void"/>
        <parameters>
          <parameter name="printer" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPrinterLpi" cname="gtk_print_settings_set_printer_lpi">
        <return-type type="void"/>
        <parameters>
          <parameter name="lpi" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetQuality" cname="gtk_print_settings_set_quality">
        <return-type type="void"/>
        <parameters>
          <parameter name="quality" type="GtkPrintQuality"/>
        </parameters>
      </method>
      <method name="SetResolution" cname="gtk_print_settings_set_resolution">
        <return-type type="void"/>
        <parameters>
          <parameter name="resolution" type="gint"/>
        </parameters>
      </method>
      <method name="SetResolutionXy" cname="gtk_print_settings_set_resolution_xy">
        <return-type type="void"/>
        <parameters>
          <parameter name="resolution_x" type="gint"/>
          <parameter name="resolution_y" type="gint"/>
        </parameters>
      </method>
      <method name="SetReverse" cname="gtk_print_settings_set_reverse">
        <return-type type="void"/>
        <parameters>
          <parameter name="reverse" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetScale" cname="gtk_print_settings_set_scale">
        <return-type type="void"/>
        <parameters>
          <parameter name="scale" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetUseColor" cname="gtk_print_settings_set_use_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_color" type="gboolean"/>
        </parameters>
      </method>
      <method name="ToFile" cname="gtk_print_settings_to_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="file_name" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ToKeyFile" cname="gtk_print_settings_to_key_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="group_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Unset" cname="gtk_print_settings_unset">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="ProgressBar" cname="GtkProgressBar" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkProgressBarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_progress_bar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_progress_bar_new" disable_void_ctor=""/>
      <method name="GetEllipsize" cname="gtk_progress_bar_get_ellipsize">
        <return-type type="PangoEllipsizeMode"/>
        <parameters/>
      </method>
      <method name="GetFraction" cname="gtk_progress_bar_get_fraction">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetInverted" cname="gtk_progress_bar_get_inverted">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPulseStep" cname="gtk_progress_bar_get_pulse_step">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetShowText" cname="gtk_progress_bar_get_show_text">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetText" cname="gtk_progress_bar_get_text">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="Pulse" cname="gtk_progress_bar_pulse">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetEllipsize" cname="gtk_progress_bar_set_ellipsize">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="PangoEllipsizeMode"/>
        </parameters>
      </method>
      <method name="SetFraction" cname="gtk_progress_bar_set_fraction">
        <return-type type="void"/>
        <parameters>
          <parameter name="fraction" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetInverted" cname="gtk_progress_bar_set_inverted">
        <return-type type="void"/>
        <parameters>
          <parameter name="inverted" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPulseStep" cname="gtk_progress_bar_set_pulse_step">
        <return-type type="void"/>
        <parameters>
          <parameter name="fraction" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetShowText" cname="gtk_progress_bar_set_show_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_text" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_progress_bar_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="Ellipsize" cname="ellipsize" type="PangoEllipsizeMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Fraction" cname="fraction" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Inverted" cname="inverted" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PulseStep" cname="pulse-step" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowText" cname="show-text" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkProgressBarPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="RadioAction" cname="GtkRadioAction" abstract="false" opaque="false" hidden="false" parent="GtkToggleAction">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkRadioActionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToggleActionClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_radio_action_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_radio_action_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="tooltip" type="const-gchar*"/>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </constructor>
      <method name="GetCurrentValue" cname="gtk_radio_action_get_current_value">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetGroup" cname="gtk_radio_action_get_group">
        <return-type type="GSList*" element_type="GtkRadioAction*"/>
        <parameters/>
      </method>
      <method name="JoinGroup" cname="gtk_radio_action_join_group">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="group_source" type="GtkRadioAction*"/>
        </parameters>
      </method>
      <method name="SetCurrentValue" cname="gtk_radio_action_set_current_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="current_value" type="gint"/>
        </parameters>
      </method>
      <method name="SetGroup" cname="gtk_radio_action_set_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioAction*"/>
        </parameters>
      </method>
      <property name="CurrentValue" cname="current-value" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Group" cname="group" type="GtkRadioAction*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="Value" cname="value" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkToggleAction*"/>
      <field cname="private_data" access="private" writeable="false" readable="false" name="PrivateData" type="GtkRadioActionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="first" field_name="changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="current" type="GtkRadioAction*"/>
        </parameters>
      </signal>
    </object>
    <object name="RadioButton" cname="GtkRadioButton" abstract="false" opaque="false" hidden="false" parent="GtkCheckButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkRadioButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCheckButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="group_changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_radio_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_radio_button_new">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioButton*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_from_widget">
        <parameters>
          <parameter name="radio_group_member" type="GtkRadioButton*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_label">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioButton*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_label_from_widget">
        <parameters>
          <parameter name="radio_group_member" type="GtkRadioButton*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_mnemonic">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioButton*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_mnemonic_from_widget">
        <parameters>
          <parameter name="radio_group_member" type="GtkRadioButton*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetGroup" cname="gtk_radio_button_get_group">
        <return-type type="GSList*" element_type="GtkRadioButton*"/>
        <parameters/>
      </method>
      <method name="JoinGroup" cname="gtk_radio_button_join_group">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="group_source" type="GtkRadioButton*"/>
        </parameters>
      </method>
      <method name="SetGroup" cname="gtk_radio_button_set_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioButton*"/>
        </parameters>
      </method>
      <property name="Group" cname="group" type="GtkRadioButton*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <field cname="check_button" access="public" writeable="false" readable="true" name="CheckButton" type="GtkCheckButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkRadioButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="GroupChanged" cname="group-changed" when="first" field_name="group_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="RadioMenuItem" cname="GtkRadioMenuItem" abstract="false" opaque="false" hidden="false" parent="GtkCheckMenuItem">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkRadioMenuItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkCheckMenuItemClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="group_changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_radio_menu_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_radio_menu_item_new">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioMenuItem*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_from_widget">
        <parameters>
          <parameter name="group" type="GtkRadioMenuItem*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_label">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioMenuItem*" elements_owned="true" owned="true"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_label_from_widget">
        <parameters>
          <parameter name="group" type="GtkRadioMenuItem*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_mnemonic">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioMenuItem*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_mnemonic_from_widget">
        <parameters>
          <parameter name="group" type="GtkRadioMenuItem*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetGroup" cname="gtk_radio_menu_item_get_group">
        <return-type type="GSList*" element_type="GtkRadioMenuItem*"/>
        <parameters/>
      </method>
      <method name="SetGroup" cname="gtk_radio_menu_item_set_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioMenuItem*"/>
        </parameters>
      </method>
      <property name="Group" cname="group" type="GtkRadioMenuItem*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <field cname="check_menu_item" access="public" writeable="false" readable="true" name="CheckMenuItem" type="GtkCheckMenuItem*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkRadioMenuItemPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="GroupChanged" cname="group-changed" when="first" field_name="group_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="RadioToolButton" cname="GtkRadioToolButton" abstract="false" opaque="false" hidden="false" parent="GtkToggleToolButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkRadioToolButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToggleToolButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_radio_tool_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_radio_tool_button_new">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioButton*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_from_stock">
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioButton*"/>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_from_widget">
        <parameters>
          <parameter name="group" type="GtkRadioToolButton*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_with_stock_from_widget">
        <parameters>
          <parameter name="group" type="GtkRadioToolButton*"/>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetGroup" cname="gtk_radio_tool_button_get_group">
        <return-type type="GSList*" element_type="GtkRadioButton*"/>
        <parameters/>
      </method>
      <method name="SetGroup" cname="gtk_radio_tool_button_set_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="GSList*" element_type="GtkRadioButton*"/>
        </parameters>
      </method>
      <property name="Group" cname="group" type="GtkRadioToolButton*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkToggleToolButton*"/>
    </object>
    <object name="Range" cname="GtkRange" abstract="true" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkRangeClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="slider_detail" access="public" writeable="false" readable="true" name="SliderDetail" type="gchar*"/>
        <field cname="stepper_detail" access="public" writeable="false" readable="true" name="StepperDetail" type="gchar*"/>
        <method signal_vm="value_changed"/>
        <method signal_vm="adjust_bounds"/>
        <method signal_vm="move_slider"/>
        <method vm="get_range_border"/>
        <method signal_vm="change_value"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_range_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="GetRangeBorder" cname="get_range_border">
        <return-type type="void"/>
        <parameters>
          <parameter name="border_" type="GtkBorder*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="GetAdjustment" cname="gtk_range_get_adjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetFillLevel" cname="gtk_range_get_fill_level">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetFlippable" cname="gtk_range_get_flippable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetInverted" cname="gtk_range_get_inverted">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLowerStepperSensitivity" cname="gtk_range_get_lower_stepper_sensitivity">
        <return-type type="GtkSensitivityType"/>
        <parameters/>
      </method>
      <method name="GetMinSliderSize" cname="gtk_range_get_min_slider_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetRangeRect" cname="gtk_range_get_range_rect">
        <return-type type="void"/>
        <parameters>
          <parameter name="range_rect" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetRestrictToFillLevel" cname="gtk_range_get_restrict_to_fill_level">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRoundDigits" cname="gtk_range_get_round_digits">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetShowFillLevel" cname="gtk_range_get_show_fill_level">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSliderRange" cname="gtk_range_get_slider_range">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="slider_start" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="slider_end" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSliderSizeFixed" cname="gtk_range_get_slider_size_fixed">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUpperStepperSensitivity" cname="gtk_range_get_upper_stepper_sensitivity">
        <return-type type="GtkSensitivityType"/>
        <parameters/>
      </method>
      <method name="GetValue" cname="gtk_range_get_value">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="SetAdjustment" cname="gtk_range_set_adjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetFillLevel" cname="gtk_range_set_fill_level">
        <return-type type="void"/>
        <parameters>
          <parameter name="fill_level" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetFlippable" cname="gtk_range_set_flippable">
        <return-type type="void"/>
        <parameters>
          <parameter name="flippable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIncrements" cname="gtk_range_set_increments">
        <return-type type="void"/>
        <parameters>
          <parameter name="step" type="gdouble"/>
          <parameter name="page" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetInverted" cname="gtk_range_set_inverted">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLowerStepperSensitivity" cname="gtk_range_set_lower_stepper_sensitivity">
        <return-type type="void"/>
        <parameters>
          <parameter name="sensitivity" type="GtkSensitivityType"/>
        </parameters>
      </method>
      <method name="SetMinSliderSize" cname="gtk_range_set_min_slider_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="min_size" type="gint"/>
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_range_set_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="min" type="gdouble"/>
          <parameter name="max" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetRestrictToFillLevel" cname="gtk_range_set_restrict_to_fill_level">
        <return-type type="void"/>
        <parameters>
          <parameter name="restrict_to_fill_level" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRoundDigits" cname="gtk_range_set_round_digits">
        <return-type type="void"/>
        <parameters>
          <parameter name="round_digits" type="gint"/>
        </parameters>
      </method>
      <method name="SetShowFillLevel" cname="gtk_range_set_show_fill_level">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_fill_level" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSliderSizeFixed" cname="gtk_range_set_slider_size_fixed">
        <return-type type="void"/>
        <parameters>
          <parameter name="size_fixed" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUpperStepperSensitivity" cname="gtk_range_set_upper_stepper_sensitivity">
        <return-type type="void"/>
        <parameters>
          <parameter name="sensitivity" type="GtkSensitivityType"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_range_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <property name="Adjustment" cname="adjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="FillLevel" cname="fill-level" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Inverted" cname="inverted" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LowerStepperSensitivity" cname="lower-stepper-sensitivity" type="GtkSensitivityType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RestrictToFillLevel" cname="restrict-to-fill-level" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RoundDigits" cname="round-digits" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowFillLevel" cname="show-fill-level" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UpperStepperSensitivity" cname="upper-stepper-sensitivity" type="GtkSensitivityType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="widget" access="public" writeable="false" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkRangePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="AdjustBounds" cname="adjust-bounds" when="last" field_name="adjust_bounds">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </signal>
      <signal name="ChangeValue" cname="change-value" when="last" field_name="change_value">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="scroll" type="GtkScrollType"/>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </signal>
      <signal name="MoveSlider" cname="move-slider" when="last" field_name="move_slider">
        <return-type type="void"/>
        <parameters>
          <parameter name="step" type="GtkScrollType"/>
        </parameters>
      </signal>
      <signal name="ValueChanged" cname="value-changed" when="last" field_name="value_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="RcStyle" cname="GtkRcStyle" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkRcStyleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="create_rc_style"/>
        <method vm="parse"/>
        <method vm="merge"/>
        <method vm="create_style"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_rc_style_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_rc_style_new" disable_void_ctor=""/>
      <virtual_method name="CreateRcStyle" cname="create_rc_style" hidden="true">
        <return-type type="GtkRcStyle*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="CreateStyle" cname="create_style" hidden="true">
        <return-type type="GtkStyle*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Merge" cname="merge">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="GtkRcStyle*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Parse" cname="parse">
        <return-type type="guint"/>
        <parameters>
          <parameter name="settings" type="GtkSettings*"/>
          <parameter name="scanner" type="GScanner*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="Copy" cname="gtk_rc_style_copy" deprecated="true">
        <return-type type="GtkRcStyle*" owned="true"/>
        <parameters/>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="name" access="public" writeable="false" readable="true" name="Name" type="gchar*"/>
      <field cname="bg_pixmap_name" access="public" writeable="false" readable="true" name="BgPixmapName" type="gchar" array="true" array_len="5"/>
      <field cname="font_desc" access="public" writeable="false" readable="true" name="FontDesc" type="PangoFontDescription*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="color_flags" access="public" writeable="false" readable="true" name="ColorFlags" type="GtkRcFlags" array="true" array_len="5"/>
      <field cname="fg" access="public" writeable="false" readable="true" name="Fg" type="GdkColor" array="true" array_len="5"/>
      <field cname="bg" access="public" writeable="false" readable="true" name="Bg" type="GdkColor" array="true" array_len="5"/>
      <field cname="text" access="public" writeable="false" readable="true" name="Text" type="GdkColor" array="true" array_len="5"/>
      <field cname="base" access="public" writeable="false" readable="true" name="Base" type="GdkColor" array="true" array_len="5"/>
      <field cname="xthickness" access="public" writeable="false" readable="true" name="Xthickness" type="gint"/>
      <field cname="ythickness" access="public" writeable="false" readable="true" name="Ythickness" type="gint"/>
      <field cname="rc_properties" access="private" writeable="false" readable="false" name="RcProperties" type="GArray*" array="true" null_term_array="true"/>
      <field cname="rc_style_lists" access="private" writeable="false" readable="false" name="RcStyleLists" type="GSList*" element_type="gpointer"/>
      <field cname="icon_factories" access="private" writeable="false" readable="false" name="IconFactories" type="GSList*" element_type="gpointer"/>
      <field cname="engine_specified" access="private" writeable="false" readable="false" bits="1" name="EngineSpecified" type="guint"/>
    </object>
    <object name="RecentAction" cname="GtkRecentAction" abstract="false" opaque="false" hidden="false" parent="GtkAction">
      <implements>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkRecentChooser"/>
      </implements>
      <class_struct cname="GtkRecentActionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkActionClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_recent_action_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_recent_action_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="tooltip" type="const-gchar*"/>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_recent_action_new_for_manager">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="tooltip" type="const-gchar*"/>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="manager" type="GtkRecentManager*"/>
        </parameters>
      </constructor>
      <method name="GetShowNumbers" cname="gtk_recent_action_get_show_numbers">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetShowNumbers" cname="gtk_recent_action_set_show_numbers">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_numbers" type="gboolean"/>
        </parameters>
      </method>
      <property name="ShowNumbers" cname="show-numbers" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkAction*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkRecentActionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="RecentChooserDialog" cname="GtkRecentChooserDialog" abstract="false" opaque="false" hidden="false" parent="GtkDialog">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkRecentChooser"/>
      </implements>
      <class_struct cname="GtkRecentChooserDialogClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkDialogClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_recent_chooser_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkDialog*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkRecentChooserDialogPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="RecentChooserMenu" cname="GtkRecentChooserMenu" abstract="false" opaque="false" hidden="false" parent="GtkMenu">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkRecentChooser"/>
      </implements>
      <class_struct cname="GtkRecentChooserMenuClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMenuClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="gtk_recent1"/>
        <method vm="gtk_recent2"/>
        <method vm="gtk_recent3"/>
        <method vm="gtk_recent4"/>
      </class_struct>
      <virtual_method name="GtkRecent1" cname="gtk_recent1" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="GtkRecent2" cname="gtk_recent2" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="GtkRecent3" cname="gtk_recent3" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="GtkRecent4" cname="gtk_recent4" shared="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_recent_chooser_menu_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_recent_chooser_menu_new" disable_void_ctor=""/>
      <constructor cname="gtk_recent_chooser_menu_new_for_manager">
        <parameters>
          <parameter name="manager" type="GtkRecentManager*"/>
        </parameters>
      </constructor>
      <method name="GetShowNumbers" cname="gtk_recent_chooser_menu_get_show_numbers">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetShowNumbers" cname="gtk_recent_chooser_menu_set_show_numbers">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_numbers" type="gboolean"/>
        </parameters>
      </method>
      <property name="ShowNumbers" cname="show-numbers" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkMenu*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkRecentChooserMenuPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="RecentChooserWidget" cname="GtkRecentChooserWidget" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
        <interface cname="GtkRecentChooser"/>
      </implements>
      <class_struct cname="GtkRecentChooserWidgetClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_recent_chooser_widget_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_recent_chooser_widget_new" disable_void_ctor=""/>
      <constructor cname="gtk_recent_chooser_widget_new_for_manager">
        <parameters>
          <parameter name="manager" type="GtkRecentManager*"/>
        </parameters>
      </constructor>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkRecentChooserWidgetPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="RecentFilter" cname="GtkRecentFilter" abstract="false" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <method name="GetType" cname="gtk_recent_filter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_recent_filter_new" disable_void_ctor=""/>
      <method name="AddAge" cname="gtk_recent_filter_add_age">
        <return-type type="void"/>
        <parameters>
          <parameter name="days" type="gint"/>
        </parameters>
      </method>
      <method name="AddApplication" cname="gtk_recent_filter_add_application">
        <return-type type="void"/>
        <parameters>
          <parameter name="application" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddCustom" cname="gtk_recent_filter_add_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="needed" type="GtkRecentFilterFlags"/>
          <parameter closure="2" destroy="3" scope="notified" name="func" type="GtkRecentFilterFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="data_destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="AddGroup" cname="gtk_recent_filter_add_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddMimeType" cname="gtk_recent_filter_add_mime_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="mime_type" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddPattern" cname="gtk_recent_filter_add_pattern">
        <return-type type="void"/>
        <parameters>
          <parameter name="pattern" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddPixbufFormats" cname="gtk_recent_filter_add_pixbuf_formats">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Filter" cname="gtk_recent_filter_filter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filter_info" type="GtkRecentFilterInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetName" cname="gtk_recent_filter_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetNeeded" cname="gtk_recent_filter_get_needed">
        <return-type type="GtkRecentFilterFlags"/>
        <parameters/>
      </method>
      <method name="SetName" cname="gtk_recent_filter_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object name="RecentManager" cname="GtkRecentManager" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkRecentManagerClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method vm="_gtk_recent1"/>
        <method vm="_gtk_recent2"/>
        <method vm="_gtk_recent3"/>
        <method vm="_gtk_recent4"/>
      </class_struct>
      <virtual_method name="_gtkGtkRecent1" cname="_gtk_recent1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkRecent2" cname="_gtk_recent2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkRecent3" cname="_gtk_recent3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkRecent4" cname="_gtk_recent4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_recent_manager_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_recent_manager_new" disable_void_ctor=""/>
      <method name="GetDefault" cname="gtk_recent_manager_get_default" shared="true">
        <return-type type="GtkRecentManager*"/>
      </method>
      <method name="AddFull" cname="gtk_recent_manager_add_full">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="recent_data" type="GtkRecentData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddItem" cname="gtk_recent_manager_add_item">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetItems" cname="gtk_recent_manager_get_items">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="HasItem" cname="gtk_recent_manager_has_item">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uri" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="LookupItem" cname="gtk_recent_manager_lookup_item">
        <return-type type="GtkRecentInfo*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="MoveItem" cname="gtk_recent_manager_move_item">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter allow-none="1" name="new_uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="PurgeItems" cname="gtk_recent_manager_purge_items">
        <return-type type="gint"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="RemoveItem" cname="gtk_recent_manager_remove_item">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <property name="Filename" cname="filename" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Size" cname="size" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkRecentManagerPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="first" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="Scale" cname="GtkScale" abstract="false" opaque="false" hidden="false" parent="GtkRange">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkScaleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkRangeClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="format_value"/>
        <method vm="draw_value"/>
        <method vm="get_layout_offsets"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_scale_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_scale_new">
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_scale_new_with_range">
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="min" type="gdouble"/>
          <parameter name="max" type="gdouble"/>
          <parameter name="step" type="gdouble"/>
        </parameters>
      </constructor>
      <virtual_method name="DrawValue" cname="draw_value">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetLayoutOffsets" cname="get_layout_offsets">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <method name="AddMark" cname="gtk_scale_add_mark">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
          <parameter name="position" type="GtkPositionType"/>
          <parameter allow-none="1" name="markup" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ClearMarks" cname="gtk_scale_clear_marks">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDigits" cname="gtk_scale_get_digits">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetDrawValue" cname="gtk_scale_get_draw_value">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHasOrigin" cname="gtk_scale_get_has_origin">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLayout" cname="gtk_scale_get_layout">
        <return-type type="PangoLayout*"/>
        <parameters/>
      </method>
      <method name="GetLayoutOffsets" cname="gtk_scale_get_layout_offsets">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetValuePos" cname="gtk_scale_get_value_pos">
        <return-type type="GtkPositionType"/>
        <parameters/>
      </method>
      <method name="SetDigits" cname="gtk_scale_set_digits">
        <return-type type="void"/>
        <parameters>
          <parameter name="digits" type="gint"/>
        </parameters>
      </method>
      <method name="SetDrawValue" cname="gtk_scale_set_draw_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="draw_value" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHasOrigin" cname="gtk_scale_set_has_origin">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_origin" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetValuePos" cname="gtk_scale_set_value_pos">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="GtkPositionType"/>
        </parameters>
      </method>
      <property name="Digits" cname="digits" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasOrigin" cname="has-origin" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ValuePos" cname="value-pos" type="GtkPositionType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="range" access="public" writeable="false" readable="true" name="Range" type="GtkRange*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkScalePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="FormatValue" cname="format-value" when="last" field_name="format_value">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </signal>
    </object>
    <object name="ScaleButton" cname="GtkScaleButton" abstract="false" opaque="false" hidden="false" parent="GtkButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkScaleButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="value_changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_scale_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_scale_button_new">
        <parameters>
          <parameter name="size" type="gint"/>
          <parameter name="min" type="gdouble"/>
          <parameter name="max" type="gdouble"/>
          <parameter name="step" type="gdouble"/>
          <parameter name="icons" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </constructor>
      <method name="GetAdjustment" cname="gtk_scale_button_get_adjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetMinusButton" cname="gtk_scale_button_get_minus_button">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetPlusButton" cname="gtk_scale_button_get_plus_button">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetPopup" cname="gtk_scale_button_get_popup">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetValue" cname="gtk_scale_button_get_value">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="SetAdjustment" cname="gtk_scale_button_set_adjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetIcons" cname="gtk_scale_button_set_icons">
        <return-type type="void"/>
        <parameters>
          <parameter name="icons" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_scale_button_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <property name="Adjustment" cname="adjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Size" cname="size" type="GtkIconSize" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Value" cname="value" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkScaleButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Popdown" cname="popdown" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Popup" cname="popup" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ValueChanged" cname="value-changed" when="last" field_name="value_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </signal>
    </object>
    <object name="Scrollbar" cname="GtkScrollbar" abstract="false" opaque="false" hidden="false" parent="GtkRange">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkScrollbarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkRangeClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_scrollbar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_scrollbar_new">
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <field cname="range" access="public" writeable="false" readable="true" name="Range" type="GtkRange*"/>
    </object>
    <object name="ScrolledWindow" cname="GtkScrolledWindow" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkScrolledWindowClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="scrollbar_spacing" access="public" writeable="false" readable="true" name="ScrollbarSpacing" type="gint"/>
        <method signal_vm="scroll_child"/>
        <method signal_vm="move_focus_out"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_scrolled_window_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_scrolled_window_new">
        <parameters>
          <parameter name="hadjustment" type="GtkAdjustment*"/>
          <parameter name="vadjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <method name="AddWithViewport" cname="gtk_scrolled_window_add_with_viewport" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetCaptureButtonPress" cname="gtk_scrolled_window_get_capture_button_press">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHadjustment" cname="gtk_scrolled_window_get_hadjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetHscrollbar" cname="gtk_scrolled_window_get_hscrollbar">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetKineticScrolling" cname="gtk_scrolled_window_get_kinetic_scrolling">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetMinContentHeight" cname="gtk_scrolled_window_get_min_content_height">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMinContentWidth" cname="gtk_scrolled_window_get_min_content_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPlacement" cname="gtk_scrolled_window_get_placement">
        <return-type type="GtkCornerType"/>
        <parameters/>
      </method>
      <method name="GetPolicy" cname="gtk_scrolled_window_get_policy">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="hscrollbar_policy" type="GtkPolicyType" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="vscrollbar_policy" type="GtkPolicyType" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetShadowType" cname="gtk_scrolled_window_get_shadow_type">
        <return-type type="GtkShadowType"/>
        <parameters/>
      </method>
      <method name="GetVadjustment" cname="gtk_scrolled_window_get_vadjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetVscrollbar" cname="gtk_scrolled_window_get_vscrollbar">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="SetCaptureButtonPress" cname="gtk_scrolled_window_set_capture_button_press">
        <return-type type="void"/>
        <parameters>
          <parameter name="capture_button_press" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_scrolled_window_set_hadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="hadjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetKineticScrolling" cname="gtk_scrolled_window_set_kinetic_scrolling">
        <return-type type="void"/>
        <parameters>
          <parameter name="kinetic_scrolling" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMinContentHeight" cname="gtk_scrolled_window_set_min_content_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="SetMinContentWidth" cname="gtk_scrolled_window_set_min_content_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
        </parameters>
      </method>
      <method name="SetPlacement" cname="gtk_scrolled_window_set_placement">
        <return-type type="void"/>
        <parameters>
          <parameter name="window_placement" type="GtkCornerType"/>
        </parameters>
      </method>
      <method name="SetPolicy" cname="gtk_scrolled_window_set_policy">
        <return-type type="void"/>
        <parameters>
          <parameter name="hscrollbar_policy" type="GtkPolicyType"/>
          <parameter name="vscrollbar_policy" type="GtkPolicyType"/>
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_scrolled_window_set_shadow_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkShadowType"/>
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_scrolled_window_set_vadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="vadjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="UnsetPlacement" cname="gtk_scrolled_window_unset_placement">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="HscrollbarPolicy" cname="hscrollbar-policy" type="GtkPolicyType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="KineticScrolling" cname="kinetic-scrolling" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MinContentHeight" cname="min-content-height" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MinContentWidth" cname="min-content-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShadowType" cname="shadow-type" type="GtkShadowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="VscrollbarPolicy" cname="vscrollbar-policy" type="GtkPolicyType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WindowPlacement" cname="window-placement" type="GtkCornerType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WindowPlacementSet" cname="window-placement-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkBin*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkScrolledWindowPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="MoveFocusOut" cname="move-focus-out" when="last" field_name="move_focus_out">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction_type" type="GtkDirectionType"/>
        </parameters>
      </signal>
      <signal name="ScrollChild" cname="scroll-child" when="last" field_name="scroll_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="scroll" type="GtkScrollType"/>
          <parameter name="horizontal" type="gboolean"/>
        </parameters>
      </signal>
    </object>
    <object name="SearchEntry" cname="GtkSearchEntry" abstract="false" opaque="false" hidden="false" parent="GtkEntry">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellEditable"/>
        <interface cname="GtkEditable"/>
      </implements>
      <class_struct cname="GtkSearchEntryClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkEntryClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_search_entry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_search_entry_new" disable_void_ctor=""/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkEntry*"/>
    </object>
    <object name="Separator" cname="GtkSeparator" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkSeparatorClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_separator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_separator_new">
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </constructor>
      <field cname="widget" access="public" writeable="false" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkSeparatorPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SeparatorMenuItem" cname="GtkSeparatorMenuItem" abstract="false" opaque="false" hidden="false" parent="GtkMenuItem">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkSeparatorMenuItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMenuItemClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_separator_menu_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_separator_menu_item_new" disable_void_ctor=""/>
      <field cname="menu_item" access="public" writeable="false" readable="true" name="MenuItem" type="GtkMenuItem*"/>
    </object>
    <object name="SeparatorToolItem" cname="GtkSeparatorToolItem" abstract="false" opaque="false" hidden="false" parent="GtkToolItem">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkSeparatorToolItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToolItemClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_separator_tool_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_separator_tool_item_new" disable_void_ctor=""/>
      <method name="GetDraw" cname="gtk_separator_tool_item_get_draw">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDraw" cname="gtk_separator_tool_item_set_draw">
        <return-type type="void"/>
        <parameters>
          <parameter name="draw" type="gboolean"/>
        </parameters>
      </method>
      <property name="Draw" cname="draw" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkToolItem*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkSeparatorToolItemPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Settings" cname="GtkSettings" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkStyleProvider"/>
      </implements>
      <class_struct cname="GtkSettingsClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_settings_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetDefault" cname="gtk_settings_get_default" shared="true">
        <return-type type="GtkSettings*"/>
      </method>
      <method name="GetForScreen" cname="gtk_settings_get_for_screen" shared="true">
        <return-type type="GtkSettings*"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="InstallProperty" cname="gtk_settings_install_property" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </method>
      <method name="InstallPropertyParser" cname="gtk_settings_install_property_parser" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter scope="call" name="parser" type="GtkRcPropertyParser"/>
        </parameters>
      </method>
      <method name="SetDoubleProperty" cname="gtk_settings_set_double_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="v_double" type="gdouble"/>
          <parameter name="origin" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLongProperty" cname="gtk_settings_set_long_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="v_long" type="glong"/>
          <parameter name="origin" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPropertyValue" cname="gtk_settings_set_property_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="svalue" type="GtkSettingsValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetStringProperty" cname="gtk_settings_set_string_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="v_string" type="const-gchar*"/>
          <parameter name="origin" type="const-gchar*"/>
        </parameters>
      </method>
      <property name="ColorHash" cname="color-hash" type="gpointer" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="GtkAlternativeButtonOrder" cname="gtk-alternative-button-order" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkAlternativeSortArrows" cname="gtk-alternative-sort-arrows" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkApplicationPreferDarkTheme" cname="gtk-application-prefer-dark-theme" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkAutoMnemonics" cname="gtk-auto-mnemonics" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkButtonImages" cname="gtk-button-images" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkCanChangeAccels" cname="gtk-can-change-accels" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkColorPalette" cname="gtk-color-palette" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkColorScheme" cname="gtk-color-scheme" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkCursorBlink" cname="gtk-cursor-blink" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkCursorBlinkTime" cname="gtk-cursor-blink-time" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkCursorBlinkTimeout" cname="gtk-cursor-blink-timeout" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkCursorThemeName" cname="gtk-cursor-theme-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkCursorThemeSize" cname="gtk-cursor-theme-size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkDndDragThreshold" cname="gtk-dnd-drag-threshold" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkDoubleClickDistance" cname="gtk-double-click-distance" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkDoubleClickTime" cname="gtk-double-click-time" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEnableAccels" cname="gtk-enable-accels" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEnableAnimations" cname="gtk-enable-animations" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEnableEventSounds" cname="gtk-enable-event-sounds" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEnableInputFeedbackSounds" cname="gtk-enable-input-feedback-sounds" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEnableMnemonics" cname="gtk-enable-mnemonics" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEnablePrimaryPaste" cname="gtk-enable-primary-paste" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEnableTooltips" cname="gtk-enable-tooltips" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEntryPasswordHintTimeout" cname="gtk-entry-password-hint-timeout" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkEntrySelectOnFocus" cname="gtk-entry-select-on-focus" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkErrorBell" cname="gtk-error-bell" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkFallbackIconTheme" cname="gtk-fallback-icon-theme" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkFileChooserBackend" cname="gtk-file-chooser-backend" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkFontName" cname="gtk-font-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkFontconfigTimestamp" cname="gtk-fontconfig-timestamp" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkIconSizes" cname="gtk-icon-sizes" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkIconThemeName" cname="gtk-icon-theme-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkImModule" cname="gtk-im-module" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkImPreeditStyle" cname="gtk-im-preedit-style" type="GtkIMPreeditStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkImStatusStyle" cname="gtk-im-status-style" type="GtkIMStatusStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkKeyThemeName" cname="gtk-key-theme-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkKeynavCursorOnly" cname="gtk-keynav-cursor-only" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkKeynavWrapAround" cname="gtk-keynav-wrap-around" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkLabelSelectOnFocus" cname="gtk-label-select-on-focus" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkMenuBarAccel" cname="gtk-menu-bar-accel" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkMenuBarPopupDelay" cname="gtk-menu-bar-popup-delay" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkMenuImages" cname="gtk-menu-images" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkMenuPopdownDelay" cname="gtk-menu-popdown-delay" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkMenuPopupDelay" cname="gtk-menu-popup-delay" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkModules" cname="gtk-modules" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkPrimaryButtonWarpsSlider" cname="gtk-primary-button-warps-slider" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkPrintBackends" cname="gtk-print-backends" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkPrintPreviewCommand" cname="gtk-print-preview-command" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkRecentFilesEnabled" cname="gtk-recent-files-enabled" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkRecentFilesLimit" cname="gtk-recent-files-limit" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkRecentFilesMaxAge" cname="gtk-recent-files-max-age" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkScrolledWindowPlacement" cname="gtk-scrolled-window-placement" type="GtkCornerType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkShellShowsAppMenu" cname="gtk-shell-shows-app-menu" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkShellShowsMenubar" cname="gtk-shell-shows-menubar" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkShowInputMethodMenu" cname="gtk-show-input-method-menu" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkShowUnicodeMenu" cname="gtk-show-unicode-menu" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkSoundThemeName" cname="gtk-sound-theme-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkSplitCursor" cname="gtk-split-cursor" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkThemeName" cname="gtk-theme-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkTimeoutExpand" cname="gtk-timeout-expand" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkTimeoutInitial" cname="gtk-timeout-initial" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkTimeoutRepeat" cname="gtk-timeout-repeat" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkToolbarIconSize" cname="gtk-toolbar-icon-size" type="GtkIconSize" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkToolbarStyle" cname="gtk-toolbar-style" type="GtkToolbarStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkTooltipBrowseModeTimeout" cname="gtk-tooltip-browse-mode-timeout" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkTooltipBrowseTimeout" cname="gtk-tooltip-browse-timeout" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkTooltipTimeout" cname="gtk-tooltip-timeout" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkTouchscreenMode" cname="gtk-touchscreen-mode" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkVisibleFocus" cname="gtk-visible-focus" type="GtkPolicyType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkXftAntialias" cname="gtk-xft-antialias" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkXftDpi" cname="gtk-xft-dpi" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkXftHinting" cname="gtk-xft-hinting" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkXftHintstyle" cname="gtk-xft-hintstyle" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="GtkXftRgba" cname="gtk-xft-rgba" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkSettingsPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="SizeGroup" cname="GtkSizeGroup" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkSizeGroupClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_size_group_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_size_group_new">
        <parameters>
          <parameter name="mode" type="GtkSizeGroupMode"/>
        </parameters>
      </constructor>
      <method name="AddWidget" cname="gtk_size_group_add_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="GetIgnoreHidden" cname="gtk_size_group_get_ignore_hidden">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetMode" cname="gtk_size_group_get_mode">
        <return-type type="GtkSizeGroupMode"/>
        <parameters/>
      </method>
      <method name="GetWidgets" cname="gtk_size_group_get_widgets">
        <return-type type="GSList*" element_type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="RemoveWidget" cname="gtk_size_group_remove_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetIgnoreHidden" cname="gtk_size_group_set_ignore_hidden">
        <return-type type="void"/>
        <parameters>
          <parameter name="ignore_hidden" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_size_group_set_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="GtkSizeGroupMode"/>
        </parameters>
      </method>
      <property name="IgnoreHidden" cname="ignore-hidden" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Mode" cname="mode" type="GtkSizeGroupMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkSizeGroupPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Socket" cname="GtkSocket" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkSocketClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="plug_added"/>
        <method signal_vm="plug_removed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_socket_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_socket_new" disable_void_ctor=""/>
      <method name="AddId" cname="gtk_socket_add_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="gulong"/>
        </parameters>
      </method>
      <method name="GetId" cname="gtk_socket_get_id">
        <return-type type="gulong"/>
        <parameters/>
      </method>
      <method name="GetPlugWindow" cname="gtk_socket_get_plug_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkSocketPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="PlugAdded" cname="plug-added" when="last" field_name="plug_added">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PlugRemoved" cname="plug-removed" when="last" field_name="plug_removed">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
    </object>
    <object name="SpinButton" cname="GtkSpinButton" abstract="false" opaque="false" hidden="false" parent="GtkEntry">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellEditable"/>
        <interface cname="GtkEditable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkSpinButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkEntryClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="input"/>
        <method signal_vm="output"/>
        <method signal_vm="value_changed"/>
        <method signal_vm="change_value"/>
        <method signal_vm="wrapped"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_spin_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_spin_button_new">
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
          <parameter name="climb_rate" type="gdouble"/>
          <parameter name="digits" type="guint"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_spin_button_new_with_range">
        <parameters>
          <parameter name="min" type="gdouble"/>
          <parameter name="max" type="gdouble"/>
          <parameter name="step" type="gdouble"/>
        </parameters>
      </constructor>
      <method name="Configure" cname="gtk_spin_button_configure">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="adjustment" type="GtkAdjustment*"/>
          <parameter name="climb_rate" type="gdouble"/>
          <parameter name="digits" type="guint"/>
        </parameters>
      </method>
      <method name="GetAdjustment" cname="gtk_spin_button_get_adjustment">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetDigits" cname="gtk_spin_button_get_digits">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetIncrements" cname="gtk_spin_button_get_increments">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="step" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="page" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetNumeric" cname="gtk_spin_button_get_numeric">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRange" cname="gtk_spin_button_get_range">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="min" type="gdouble*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="max" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSnapToTicks" cname="gtk_spin_button_get_snap_to_ticks">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetUpdatePolicy" cname="gtk_spin_button_get_update_policy">
        <return-type type="GtkSpinButtonUpdatePolicy"/>
        <parameters/>
      </method>
      <method name="GetValue" cname="gtk_spin_button_get_value">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetValueAsInt" cname="gtk_spin_button_get_value_as_int">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetWrap" cname="gtk_spin_button_get_wrap">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetAdjustment" cname="gtk_spin_button_set_adjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetDigits" cname="gtk_spin_button_set_digits">
        <return-type type="void"/>
        <parameters>
          <parameter name="digits" type="guint"/>
        </parameters>
      </method>
      <method name="SetIncrements" cname="gtk_spin_button_set_increments">
        <return-type type="void"/>
        <parameters>
          <parameter name="step" type="gdouble"/>
          <parameter name="page" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetNumeric" cname="gtk_spin_button_set_numeric">
        <return-type type="void"/>
        <parameters>
          <parameter name="numeric" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_spin_button_set_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="min" type="gdouble"/>
          <parameter name="max" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetSnapToTicks" cname="gtk_spin_button_set_snap_to_ticks">
        <return-type type="void"/>
        <parameters>
          <parameter name="snap_to_ticks" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetUpdatePolicy" cname="gtk_spin_button_set_update_policy">
        <return-type type="void"/>
        <parameters>
          <parameter name="policy" type="GtkSpinButtonUpdatePolicy"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_spin_button_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetWrap" cname="gtk_spin_button_set_wrap">
        <return-type type="void"/>
        <parameters>
          <parameter name="wrap" type="gboolean"/>
        </parameters>
      </method>
      <method name="Spin" cname="gtk_spin_button_spin">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction" type="GtkSpinType"/>
          <parameter name="increment" type="gdouble"/>
        </parameters>
      </method>
      <method name="Update" cname="gtk_spin_button_update">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Adjustment" cname="adjustment" type="GtkAdjustment*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ClimbRate" cname="climb-rate" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Digits" cname="digits" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Numeric" cname="numeric" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SnapToTicks" cname="snap-to-ticks" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UpdatePolicy" cname="update-policy" type="GtkSpinButtonUpdatePolicy" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Value" cname="value" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Wrap" cname="wrap" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="entry" access="public" writeable="false" readable="true" name="Entry" type="GtkEntry*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkSpinButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ChangeValue" cname="change-value" when="last" field_name="change_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkScrollType"/>
        </parameters>
      </signal>
      <signal name="Input" cname="input" when="last" field_name="input">
        <return-type type="gint"/>
        <parameters>
          <parameter name="new_value" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </signal>
      <signal name="Output" cname="output" when="last" field_name="output">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="ValueChanged" cname="value-changed" when="last" field_name="value_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Wrapped" cname="wrapped" when="last" field_name="wrapped">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="Spinner" cname="GtkSpinner" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkSpinnerClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_spinner_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_spinner_new" disable_void_ctor=""/>
      <method name="Start" cname="gtk_spinner_start">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Stop" cname="gtk_spinner_stop">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkSpinnerPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="StatusIcon" cname="GtkStatusIcon" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkStatusIconClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="activate"/>
        <method signal_vm="popup_menu"/>
        <method signal_vm="size_changed"/>
        <method signal_vm="button_press_event"/>
        <method signal_vm="button_release_event"/>
        <method signal_vm="scroll_event"/>
        <method signal_vm="query_tooltip"/>
        <field cname="__gtk_reserved1" access="public" writeable="false" readable="true" name="__gtkGtkReserved1" type="gpointer"/>
        <field cname="__gtk_reserved2" access="public" writeable="false" readable="true" name="__gtkGtkReserved2" type="gpointer"/>
        <field cname="__gtk_reserved3" access="public" writeable="false" readable="true" name="__gtkGtkReserved3" type="gpointer"/>
        <field cname="__gtk_reserved4" access="public" writeable="false" readable="true" name="__gtkGtkReserved4" type="gpointer"/>
      </class_struct>
      <method name="GetType" cname="gtk_status_icon_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_status_icon_new" disable_void_ctor=""/>
      <constructor cname="gtk_status_icon_new_from_file">
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_status_icon_new_from_gicon">
        <parameters>
          <parameter name="icon" type="GIcon*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_status_icon_new_from_icon_name">
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_status_icon_new_from_pixbuf">
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_status_icon_new_from_stock">
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="PositionMenu" cname="gtk_status_icon_position_menu" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu" type="GtkMenu*"/>
          <parameter name="x" type="gint*" owned="true" pass_as="out"/>
          <parameter name="y" type="gint*" owned="true" pass_as="out"/>
          <parameter name="push_in" type="gboolean*" owned="true" pass_as="out"/>
          <parameter name="user_data" type="GtkStatusIcon*"/>
        </parameters>
      </method>
      <method name="GetGeometry" cname="gtk_status_icon_get_geometry">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="screen" type="GdkScreen*" pass_as="out"/>
          <parameter allow-none="1" name="area" type="cairo_rectangle_int_t" pass_as="out"/>
          <parameter allow-none="1" name="orientation" type="GtkOrientation" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetGicon" cname="gtk_status_icon_get_gicon">
        <return-type type="GIcon*"/>
        <parameters/>
      </method>
      <method name="GetHasTooltip" cname="gtk_status_icon_get_has_tooltip">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetIconName" cname="gtk_status_icon_get_icon_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPixbuf" cname="gtk_status_icon_get_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters/>
      </method>
      <method name="GetScreen" cname="gtk_status_icon_get_screen">
        <return-type type="GdkScreen*"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gtk_status_icon_get_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetStock" cname="gtk_status_icon_get_stock">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetStorageType" cname="gtk_status_icon_get_storage_type">
        <return-type type="GtkImageType"/>
        <parameters/>
      </method>
      <method name="GetTitle" cname="gtk_status_icon_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTooltipMarkup" cname="gtk_status_icon_get_tooltip_markup">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetTooltipText" cname="gtk_status_icon_get_tooltip_text">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetVisible" cname="gtk_status_icon_get_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetX11WindowId" cname="gtk_status_icon_get_x11_window_id">
        <return-type type="guint32"/>
        <parameters/>
      </method>
      <method name="IsEmbedded" cname="gtk_status_icon_is_embedded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetFromFile" cname="gtk_status_icon_set_from_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SetFromGicon" cname="gtk_status_icon_set_from_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="SetFromIconName" cname="gtk_status_icon_set_from_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetFromPixbuf" cname="gtk_status_icon_set_from_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetFromStock" cname="gtk_status_icon_set_from_stock">
        <return-type type="void"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetHasTooltip" cname="gtk_status_icon_set_has_tooltip">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_tooltip" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetName" cname="gtk_status_icon_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_status_icon_set_screen">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_status_icon_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTooltipMarkup" cname="gtk_status_icon_set_tooltip_markup">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="markup" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTooltipText" cname="gtk_status_icon_set_tooltip_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_status_icon_set_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <property name="Embedded" cname="embedded" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="File" cname="file" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="Gicon" cname="gicon" type="GIcon*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasTooltip" cname="has-tooltip" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconName" cname="icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Orientation" cname="orientation" type="GtkOrientation" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Screen" cname="screen" type="GdkScreen*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Size" cname="size" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Stock" cname="stock" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StorageType" cname="storage-type" type="GtkImageType" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TooltipMarkup" cname="tooltip-markup" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TooltipText" cname="tooltip-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkStatusIconPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Activate" cname="activate" when="first" field_name="activate">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ButtonPressEvent" cname="button-press-event" when="last" field_name="button_press_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventButton*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="ButtonReleaseEvent" cname="button-release-event" when="last" field_name="button_release_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventButton*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="PopupMenu" cname="popup-menu" when="first" field_name="popup_menu">
        <return-type type="void"/>
        <parameters>
          <parameter name="button" type="guint"/>
          <parameter name="activate_time" type="guint"/>
        </parameters>
      </signal>
      <signal name="QueryTooltip" cname="query-tooltip" when="last" field_name="query_tooltip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="keyboard_mode" type="gboolean"/>
          <parameter name="tooltip" type="GtkTooltip*"/>
        </parameters>
      </signal>
      <signal name="ScrollEvent" cname="scroll-event" when="last" field_name="scroll_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventScroll*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="SizeChanged" cname="size-changed" when="last" field_name="size_changed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size" type="gint"/>
        </parameters>
      </signal>
    </object>
    <object name="Statusbar" cname="GtkStatusbar" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkStatusbarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="reserved" access="public" writeable="false" readable="true" name="Reserved" type="gpointer"/>
        <method signal_vm="text_pushed"/>
        <method signal_vm="text_popped"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_statusbar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_statusbar_new" disable_void_ctor=""/>
      <method name="GetContextId" cname="gtk_statusbar_get_context_id">
        <return-type type="guint"/>
        <parameters>
          <parameter name="context_description" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetMessageArea" cname="gtk_statusbar_get_message_area">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="Pop" cname="gtk_statusbar_pop">
        <return-type type="void"/>
        <parameters>
          <parameter name="context_id" type="guint"/>
        </parameters>
      </method>
      <method name="Push" cname="gtk_statusbar_push">
        <return-type type="guint"/>
        <parameters>
          <parameter name="context_id" type="guint"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Remove" cname="gtk_statusbar_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="context_id" type="guint"/>
          <parameter name="message_id" type="guint"/>
        </parameters>
      </method>
      <method name="RemoveAll" cname="gtk_statusbar_remove_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="context_id" type="guint"/>
        </parameters>
      </method>
      <field cname="parent_widget" access="public" writeable="false" readable="true" name="ParentWidget" type="GtkBox*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkStatusbarPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="TextPopped" cname="text-popped" when="last" field_name="text_popped">
        <return-type type="void"/>
        <parameters>
          <parameter name="context_id" type="guint"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="TextPushed" cname="text-pushed" when="last" field_name="text_pushed">
        <return-type type="void"/>
        <parameters>
          <parameter name="context_id" type="guint"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </signal>
    </object>
    <object name="Style" cname="GtkStyle" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkStyleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="realize"/>
        <method signal_vm="unrealize"/>
        <method vm="copy"/>
        <method vm="clone"/>
        <method vm="init_from_rc"/>
        <method vm="set_background"/>
        <method vm="render_icon"/>
        <method vm="draw_hline"/>
        <method vm="draw_vline"/>
        <method vm="draw_shadow"/>
        <method vm="draw_arrow"/>
        <method vm="draw_diamond"/>
        <method vm="draw_box"/>
        <method vm="draw_flat_box"/>
        <method vm="draw_check"/>
        <method vm="draw_option"/>
        <method vm="draw_tab"/>
        <method vm="draw_shadow_gap"/>
        <method vm="draw_box_gap"/>
        <method vm="draw_extension"/>
        <method vm="draw_focus"/>
        <method vm="draw_slider"/>
        <method vm="draw_handle"/>
        <method vm="draw_expander"/>
        <method vm="draw_layout"/>
        <method vm="draw_resize_grip"/>
        <method vm="draw_spinner"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
        <method vm="_gtk_reserved9"/>
        <method vm="_gtk_reserved10"/>
        <method vm="_gtk_reserved11"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved9" cname="_gtk_reserved9" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved10" cname="_gtk_reserved10" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved11" cname="_gtk_reserved11" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_style_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_style_new" disable_void_ctor=""/>
      <virtual_method name="Clone" cname="clone" hidden="true">
        <return-type type="GtkStyle*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="Copy" cname="copy">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="GtkStyle*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawArrow" cname="draw_arrow">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="arrow_type" type="GtkArrowType"/>
          <parameter name="fill" type="gboolean"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawBox" cname="draw_box">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawBoxGap" cname="draw_box_gap">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="gap_side" type="GtkPositionType"/>
          <parameter name="gap_x" type="gint"/>
          <parameter name="gap_width" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawCheck" cname="draw_check">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawDiamond" cname="draw_diamond">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawExpander" cname="draw_expander">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="expander_style" type="GtkExpanderStyle"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawExtension" cname="draw_extension">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="gap_side" type="GtkPositionType"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawFlatBox" cname="draw_flat_box">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawFocus" cname="draw_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawHandle" cname="draw_handle">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawHline" cname="draw_hline">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x1" type="gint"/>
          <parameter name="x2" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawLayout" cname="draw_layout">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="use_text" type="gboolean"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="layout" type="PangoLayout*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawOption" cname="draw_option">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawResizeGrip" cname="draw_resize_grip">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="edge" type="GdkWindowEdge"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawShadow" cname="draw_shadow">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawShadowGap" cname="draw_shadow_gap">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="gap_side" type="GtkPositionType"/>
          <parameter name="gap_x" type="gint"/>
          <parameter name="gap_width" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawSlider" cname="draw_slider">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawSpinner" cname="draw_spinner">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="step" type="guint"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawTab" cname="draw_tab">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DrawVline" cname="draw_vline">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="detail" type="const-gchar*"/>
          <parameter name="y1_" type="gint"/>
          <parameter name="y2_" type="gint"/>
          <parameter name="x" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="InitFromRc" cname="init_from_rc">
        <return-type type="void"/>
        <parameters>
          <parameter name="rc_style" type="GtkRcStyle*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderIcon" cname="render_icon" deprecated="true">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter name="source" type="GtkIconSource*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="direction" type="GtkTextDirection"/>
          <parameter name="state" type="GtkStateType"/>
          <parameter name="size" type="gint"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetBackground" cname="set_background" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
          <parameter name="state_type" type="GtkStateType"/>
        </parameters>
      </virtual_method>
      <method name="ApplyDefaultBackground" cname="gtk_style_apply_default_background" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="window" type="GdkWindow*"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="Copy" cname="gtk_style_copy" deprecated="true">
        <return-type type="GtkStyle*" owned="true"/>
        <parameters/>
      </method>
      <method name="Detach" cname="gtk_style_detach" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetStyleProperty" cname="gtk_style_get_style_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget_type" type="GType"/>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="HasContext" cname="gtk_style_has_context">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="LookupColor" cname="gtk_style_lookup_color" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="color_name" type="const-gchar*"/>
          <parameter name="color" type="GdkColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LookupIconSet" cname="gtk_style_lookup_icon_set" deprecated="true">
        <return-type type="GtkIconSet*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RenderIcon" cname="gtk_style_render_icon" deprecated="true">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter name="source" type="GtkIconSource*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="direction" type="GtkTextDirection"/>
          <parameter name="state" type="GtkStateType"/>
          <parameter name="size" type="gint"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetBackground" cname="gtk_style_set_background" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
          <parameter name="state_type" type="GtkStateType"/>
        </parameters>
      </method>
      <property name="Context" cname="context" type="GtkStyleContext*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="fg" access="public" writeable="false" readable="true" name="Fg" type="GdkColor" array="true" array_len="5"/>
      <field cname="bg" access="public" writeable="false" readable="true" name="Bg" type="GdkColor" array="true" array_len="5"/>
      <field cname="light" access="public" writeable="false" readable="true" name="Light" type="GdkColor" array="true" array_len="5"/>
      <field cname="dark" access="public" writeable="false" readable="true" name="Dark" type="GdkColor" array="true" array_len="5"/>
      <field cname="mid" access="public" writeable="false" readable="true" name="Mid" type="GdkColor" array="true" array_len="5"/>
      <field cname="text" access="public" writeable="false" readable="true" name="Text" type="GdkColor" array="true" array_len="5"/>
      <field cname="base" access="public" writeable="false" readable="true" name="Base" type="GdkColor" array="true" array_len="5"/>
      <field cname="text_aa" access="public" writeable="false" readable="true" name="TextAa" type="GdkColor" array="true" array_len="5"/>
      <field cname="black" access="public" writeable="false" readable="true" name="Black" type="GdkColor">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="white" access="public" writeable="false" readable="true" name="White" type="GdkColor">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="font_desc" access="public" writeable="false" readable="true" name="FontDesc" type="PangoFontDescription*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="xthickness" access="public" writeable="false" readable="true" name="Xthickness" type="gint"/>
      <field cname="ythickness" access="public" writeable="false" readable="true" name="Ythickness" type="gint"/>
      <field cname="background" access="public" writeable="false" readable="true" name="Background" type="cairo_pattern_t" array="true" array_len="5"/>
      <field cname="attach_count" access="private" writeable="false" readable="false" name="AttachCount" type="gint"/>
      <field cname="visual" access="private" writeable="false" readable="false" name="Visual" type="GdkVisual*"/>
      <field cname="private_font_desc" access="private" writeable="false" readable="false" name="PrivateFontDesc" type="PangoFontDescription*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="rc_style" access="private" writeable="false" readable="false" name="RcStyle" type="GtkRcStyle*"/>
      <field cname="styles" access="private" writeable="false" readable="false" name="Styles" type="GSList*" element_type="gpointer"/>
      <field cname="property_cache" access="private" writeable="false" readable="false" name="PropertyCache" type="GArray*" array="true" null_term_array="true"/>
      <field cname="icon_factories" access="private" writeable="false" readable="false" name="IconFactories" type="GSList*" element_type="gpointer"/>
      <signal name="Realize" cname="realize" when="first" field_name="realize">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Unrealize" cname="unrealize" when="first" field_name="unrealize">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="StyleContext" cname="GtkStyleContext" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkStyleContextClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_style_context_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_style_context_new" disable_void_ctor=""/>
      <method name="AddProviderForScreen" cname="gtk_style_context_add_provider_for_screen" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
          <parameter name="provider" type="GtkStyleProvider*"/>
          <parameter name="priority" type="guint"/>
        </parameters>
      </method>
      <method name="RemoveProviderForScreen" cname="gtk_style_context_remove_provider_for_screen" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
          <parameter name="provider" type="GtkStyleProvider*"/>
        </parameters>
      </method>
      <method name="ResetWidgets" cname="gtk_style_context_reset_widgets" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="AddClass" cname="gtk_style_context_add_class">
        <return-type type="void"/>
        <parameters>
          <parameter name="class_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddProvider" cname="gtk_style_context_add_provider">
        <return-type type="void"/>
        <parameters>
          <parameter name="provider" type="GtkStyleProvider*"/>
          <parameter name="priority" type="guint"/>
        </parameters>
      </method>
      <method name="AddRegion" cname="gtk_style_context_add_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="region_name" type="const-gchar*"/>
          <parameter name="flags" type="GtkRegionFlags"/>
        </parameters>
      </method>
      <method name="CancelAnimations" cname="gtk_style_context_cancel_animations" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="region_id" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetBackgroundColor" cname="gtk_style_context_get_background_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBorder" cname="gtk_style_context_get_border">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="border" type="GtkBorder*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBorderColor" cname="gtk_style_context_get_border_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetColor" cname="gtk_style_context_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDirection" cname="gtk_style_context_get_direction" deprecated="true">
        <return-type type="GtkTextDirection"/>
        <parameters/>
      </method>
      <method name="GetFont" cname="gtk_style_context_get_font" deprecated="true">
        <return-type type="PangoFontDescription*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
        </parameters>
      </method>
      <method name="GetFrameClock" cname="gtk_style_context_get_frame_clock">
        <return-type type="GdkFrameClock*"/>
        <parameters/>
      </method>
      <method name="GetJunctionSides" cname="gtk_style_context_get_junction_sides">
        <return-type type="GtkJunctionSides"/>
        <parameters/>
      </method>
      <method name="GetMargin" cname="gtk_style_context_get_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="margin" type="GtkBorder*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetPadding" cname="gtk_style_context_get_padding">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="padding" type="GtkBorder*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetParent" cname="gtk_style_context_get_parent">
        <return-type type="GtkStyleContext*"/>
        <parameters/>
      </method>
      <method name="GetPath" cname="gtk_style_context_get_path">
        <return-type type="GtkWidgetPath*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetProperty" cname="gtk_style_context_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="value" type="GValue*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetScreen" cname="gtk_style_context_get_screen">
        <return-type type="GdkScreen*"/>
        <parameters/>
      </method>
      <method name="GetSection" cname="gtk_style_context_get_section">
        <return-type type="GtkCssSection*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="property" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetState" cname="gtk_style_context_get_state">
        <return-type type="GtkStateFlags"/>
        <parameters/>
      </method>
      <method name="GetStyleProperty" cname="gtk_style_context_get_style_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="HasClass" cname="gtk_style_context_has_class">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="class_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasRegion" cname="gtk_style_context_has_region">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="region_name" type="const-gchar*"/>
          <parameter allow-none="1" name="flags_return" type="GtkRegionFlags" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Invalidate" cname="gtk_style_context_invalidate">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ListClasses" cname="gtk_style_context_list_classes">
        <return-type type="GList*" element_type="gchar*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="ListRegions" cname="gtk_style_context_list_regions">
        <return-type type="GList*" element_type="gchar*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="LookupColor" cname="gtk_style_context_lookup_color">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="color_name" type="const-gchar*"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LookupIconSet" cname="gtk_style_context_lookup_icon_set">
        <return-type type="GtkIconSet*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="NotifyStateChange" cname="gtk_style_context_notify_state_change" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
          <parameter allow-none="1" name="region_id" type="gpointer"/>
          <parameter name="state" type="GtkStateType"/>
          <parameter name="state_value" type="gboolean"/>
        </parameters>
      </method>
      <method name="PopAnimatableRegion" cname="gtk_style_context_pop_animatable_region" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PushAnimatableRegion" cname="gtk_style_context_push_animatable_region" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="region_id" type="gpointer"/>
        </parameters>
      </method>
      <method name="RemoveClass" cname="gtk_style_context_remove_class">
        <return-type type="void"/>
        <parameters>
          <parameter name="class_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RemoveProvider" cname="gtk_style_context_remove_provider">
        <return-type type="void"/>
        <parameters>
          <parameter name="provider" type="GtkStyleProvider*"/>
        </parameters>
      </method>
      <method name="RemoveRegion" cname="gtk_style_context_remove_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="region_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Restore" cname="gtk_style_context_restore">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Save" cname="gtk_style_context_save">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ScrollAnimations" cname="gtk_style_context_scroll_animations" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
          <parameter name="dx" type="gint"/>
          <parameter name="dy" type="gint"/>
        </parameters>
      </method>
      <method name="SetBackground" cname="gtk_style_context_set_background">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="SetDirection" cname="gtk_style_context_set_direction" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction" type="GtkTextDirection"/>
        </parameters>
      </method>
      <method name="SetFrameClock" cname="gtk_style_context_set_frame_clock">
        <return-type type="void"/>
        <parameters>
          <parameter name="frame_clock" type="GdkFrameClock*"/>
        </parameters>
      </method>
      <method name="SetJunctionSides" cname="gtk_style_context_set_junction_sides">
        <return-type type="void"/>
        <parameters>
          <parameter name="sides" type="GtkJunctionSides"/>
        </parameters>
      </method>
      <method name="SetParent" cname="gtk_style_context_set_parent">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="parent" type="GtkStyleContext*"/>
        </parameters>
      </method>
      <method name="SetPath" cname="gtk_style_context_set_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_style_context_set_screen">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="SetState" cname="gtk_style_context_set_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GtkStateFlags"/>
        </parameters>
      </method>
      <method name="StateIsRunning" cname="gtk_style_context_state_is_running" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
          <parameter name="progress" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <property name="Direction" cname="direction" type="GtkTextDirection" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PaintClock" cname="paint-clock" type="GdkFrameClock*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Parent" cname="parent" type="GtkStyleContext*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Screen" cname="screen" type="GdkScreen*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_object" access="public" writeable="false" readable="true" name="ParentObject" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkStyleContextPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="first" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="StyleProperties" cname="GtkStyleProperties" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkStyleProvider"/>
      </implements>
      <class_struct cname="GtkStylePropertiesClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_style_properties_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_style_properties_new" disable_void_ctor=""/>
      <method name="Clear" cname="gtk_style_properties_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetProperty" cname="gtk_style_properties_get_property">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="value" type="GValue*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LookupColor" cname="gtk_style_properties_lookup_color" deprecated="true">
        <return-type type="GtkSymbolicColor*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="MapColor" cname="gtk_style_properties_map_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="color" type="GtkSymbolicColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Merge" cname="gtk_style_properties_merge">
        <return-type type="void"/>
        <parameters>
          <parameter name="props_to_merge" type="GtkStyleProperties*"/>
          <parameter name="replace" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetProperty" cname="gtk_style_properties_set_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnsetProperty" cname="gtk_style_properties_unset_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="state" type="GtkStateFlags"/>
        </parameters>
      </method>
      <field cname="parent_object" access="public" writeable="false" readable="true" name="ParentObject" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkStylePropertiesPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Switch" cname="GtkSwitch" abstract="false" opaque="false" hidden="false" parent="GtkWidget">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkSwitchClass">
        <field cname="parent_class" access="private" writeable="false" readable="false" name="ParentClass" type="GtkWidgetClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="activate"/>
        <method vm="_switch_padding_1"/>
        <method vm="_switch_padding_2"/>
        <method vm="_switch_padding_3"/>
        <method vm="_switch_padding_4"/>
        <method vm="_switch_padding_5"/>
        <method vm="_switch_padding_6"/>
      </class_struct>
      <virtual_method name="_switchSwitchPadding1" cname="_switch_padding_1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_switchSwitchPadding2" cname="_switch_padding_2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_switchSwitchPadding3" cname="_switch_padding_3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_switchSwitchPadding4" cname="_switch_padding_4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_switchSwitchPadding5" cname="_switch_padding_5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_switchSwitchPadding6" cname="_switch_padding_6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_switch_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_switch_new" disable_void_ctor=""/>
      <method name="GetActive" cname="gtk_switch_get_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetActive" cname="gtk_switch_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_active" type="gboolean"/>
        </parameters>
      </method>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="private" writeable="false" readable="false" name="ParentInstance" type="GtkWidget*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkSwitchPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Activate" cname="activate" when="first" field_name="activate">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="Table" cname="GtkTable" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkTableClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_table_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_table_new">
        <parameters>
          <parameter name="rows" type="guint"/>
          <parameter name="columns" type="guint"/>
          <parameter name="homogeneous" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="Attach" cname="gtk_table_attach" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="left_attach" type="guint"/>
          <parameter name="right_attach" type="guint"/>
          <parameter name="top_attach" type="guint"/>
          <parameter name="bottom_attach" type="guint"/>
          <parameter name="xoptions" type="GtkAttachOptions"/>
          <parameter name="yoptions" type="GtkAttachOptions"/>
          <parameter name="xpadding" type="guint"/>
          <parameter name="ypadding" type="guint"/>
        </parameters>
      </method>
      <method name="AttachDefaults" cname="gtk_table_attach_defaults" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="left_attach" type="guint"/>
          <parameter name="right_attach" type="guint"/>
          <parameter name="top_attach" type="guint"/>
          <parameter name="bottom_attach" type="guint"/>
        </parameters>
      </method>
      <method name="GetColSpacing" cname="gtk_table_get_col_spacing" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="column" type="guint"/>
        </parameters>
      </method>
      <method name="GetDefaultColSpacing" cname="gtk_table_get_default_col_spacing" deprecated="true">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetDefaultRowSpacing" cname="gtk_table_get_default_row_spacing" deprecated="true">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetHomogeneous" cname="gtk_table_get_homogeneous" deprecated="true">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRowSpacing" cname="gtk_table_get_row_spacing" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="row" type="guint"/>
        </parameters>
      </method>
      <method name="GetSize" cname="gtk_table_get_size" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="rows" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="columns" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Resize" cname="gtk_table_resize" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="rows" type="guint"/>
          <parameter name="columns" type="guint"/>
        </parameters>
      </method>
      <method name="SetColSpacing" cname="gtk_table_set_col_spacing" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="guint"/>
          <parameter name="spacing" type="guint"/>
        </parameters>
      </method>
      <method name="SetColSpacings" cname="gtk_table_set_col_spacings" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="guint"/>
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_table_set_homogeneous" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="homogeneous" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRowSpacing" cname="gtk_table_set_row_spacing" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="row" type="guint"/>
          <parameter name="spacing" type="guint"/>
        </parameters>
      </method>
      <method name="SetRowSpacings" cname="gtk_table_set_row_spacings" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="guint"/>
        </parameters>
      </method>
      <property name="ColumnSpacing" cname="column-spacing" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Homogeneous" cname="homogeneous" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="NColumns" cname="n-columns" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="NRows" cname="n-rows" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RowSpacing" cname="row-spacing" type="guint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkTablePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TearoffMenuItem" cname="GtkTearoffMenuItem" abstract="false" opaque="false" hidden="false" parent="GtkMenuItem">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkTearoffMenuItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkMenuItemClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tearoff_menu_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tearoff_menu_item_new" disable_void_ctor=""/>
      <field cname="menu_item" access="public" writeable="false" readable="true" name="MenuItem" type="GtkMenuItem*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkTearoffMenuItemPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TextBuffer" cname="GtkTextBuffer" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkTextBufferClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="insert_text"/>
        <method signal_vm="insert_pixbuf"/>
        <method signal_vm="insert_child_anchor"/>
        <method signal_vm="delete_range"/>
        <method signal_vm="changed"/>
        <method signal_vm="modified_changed"/>
        <method signal_vm="mark_set"/>
        <method signal_vm="mark_deleted"/>
        <method signal_vm="apply_tag"/>
        <method signal_vm="remove_tag"/>
        <method signal_vm="begin_user_action"/>
        <method signal_vm="end_user_action"/>
        <method signal_vm="paste_done"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_text_buffer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_text_buffer_new">
        <parameters>
          <parameter name="table" type="GtkTextTagTable*"/>
        </parameters>
      </constructor>
      <method name="AddMark" cname="gtk_text_buffer_add_mark">
        <return-type type="void"/>
        <parameters>
          <parameter name="mark" type="GtkTextMark*"/>
          <parameter name="where" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddSelectionClipboard" cname="gtk_text_buffer_add_selection_clipboard">
        <return-type type="void"/>
        <parameters>
          <parameter name="clipboard" type="GtkClipboard*"/>
        </parameters>
      </method>
      <method name="ApplyTagByName" cname="gtk_text_buffer_apply_tag_by_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Backspace" cname="gtk_text_buffer_backspace">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="interactive" type="gboolean"/>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="CopyClipboard" cname="gtk_text_buffer_copy_clipboard">
        <return-type type="void"/>
        <parameters>
          <parameter name="clipboard" type="GtkClipboard*"/>
        </parameters>
      </method>
      <method name="CreateChildAnchor" cname="gtk_text_buffer_create_child_anchor">
        <return-type type="GtkTextChildAnchor*"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="CreateMark" cname="gtk_text_buffer_create_mark">
        <return-type type="GtkTextMark*"/>
        <parameters>
          <parameter allow-none="1" name="mark_name" type="const-gchar*"/>
          <parameter name="where" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="left_gravity" type="gboolean"/>
        </parameters>
      </method>
      <method name="CutClipboard" cname="gtk_text_buffer_cut_clipboard">
        <return-type type="void"/>
        <parameters>
          <parameter name="clipboard" type="GtkClipboard*"/>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="Delete" cname="gtk_text_buffer_delete">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DeleteInteractive" cname="gtk_text_buffer_delete_interactive">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start_iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end_iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="DeleteMark" cname="gtk_text_buffer_delete_mark">
        <return-type type="void"/>
        <parameters>
          <parameter name="mark" type="GtkTextMark*"/>
        </parameters>
      </method>
      <method name="DeleteMarkByName" cname="gtk_text_buffer_delete_mark_by_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DeleteSelection" cname="gtk_text_buffer_delete_selection">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="interactive" type="gboolean"/>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="Deserialize" cname="gtk_text_buffer_deserialize">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="content_buffer" type="GtkTextBuffer*"/>
          <parameter name="format" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="data" type="guint8*" array="true" array_length_param_index="4"/>
          <parameter name="length" type="gsize"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="DeserializeGetCanCreateTags" cname="gtk_text_buffer_deserialize_get_can_create_tags">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="format" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DeserializeSetCanCreateTags" cname="gtk_text_buffer_deserialize_set_can_create_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="can_create_tags" type="gboolean"/>
        </parameters>
      </method>
      <method name="GetBounds" cname="gtk_text_buffer_get_bounds">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetCharCount" cname="gtk_text_buffer_get_char_count">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetCopyTargetList" cname="gtk_text_buffer_get_copy_target_list">
        <return-type type="GtkTargetList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDeserializeFormats" cname="gtk_text_buffer_get_deserialize_formats">
        <return-type type="GdkAtom*" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="n_formats" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetEndIter" cname="gtk_text_buffer_get_end_iter">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetHasSelection" cname="gtk_text_buffer_get_has_selection">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetInsert" cname="gtk_text_buffer_get_insert">
        <return-type type="GtkTextMark*"/>
        <parameters/>
      </method>
      <method name="GetIterAtChildAnchor" cname="gtk_text_buffer_get_iter_at_child_anchor">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="anchor" type="GtkTextChildAnchor*"/>
        </parameters>
      </method>
      <method name="GetIterAtLine" cname="gtk_text_buffer_get_iter_at_line">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="line_number" type="gint"/>
        </parameters>
      </method>
      <method name="GetIterAtLineIndex" cname="gtk_text_buffer_get_iter_at_line_index">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="line_number" type="gint"/>
          <parameter name="byte_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetIterAtLineOffset" cname="gtk_text_buffer_get_iter_at_line_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="line_number" type="gint"/>
          <parameter name="char_offset" type="gint"/>
        </parameters>
      </method>
      <method name="GetIterAtMark" cname="gtk_text_buffer_get_iter_at_mark">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mark" type="GtkTextMark*"/>
        </parameters>
      </method>
      <method name="GetIterAtOffset" cname="gtk_text_buffer_get_iter_at_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="char_offset" type="gint"/>
        </parameters>
      </method>
      <method name="GetLineCount" cname="gtk_text_buffer_get_line_count">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMark" cname="gtk_text_buffer_get_mark">
        <return-type type="GtkTextMark*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetModified" cname="gtk_text_buffer_get_modified">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPasteTargetList" cname="gtk_text_buffer_get_paste_target_list">
        <return-type type="GtkTargetList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSelectionBound" cname="gtk_text_buffer_get_selection_bound">
        <return-type type="GtkTextMark*"/>
        <parameters/>
      </method>
      <method name="GetSelectionBounds" cname="gtk_text_buffer_get_selection_bounds">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetSerializeFormats" cname="gtk_text_buffer_get_serialize_formats">
        <return-type type="GdkAtom*" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="n_formats" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSlice" cname="gtk_text_buffer_get_slice">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="include_hidden_chars" type="gboolean"/>
        </parameters>
      </method>
      <method name="GetStartIter" cname="gtk_text_buffer_get_start_iter">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetTagTable" cname="gtk_text_buffer_get_tag_table">
        <return-type type="GtkTextTagTable*"/>
        <parameters/>
      </method>
      <method name="GetText" cname="gtk_text_buffer_get_text">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="include_hidden_chars" type="gboolean"/>
        </parameters>
      </method>
      <method name="Insert" cname="gtk_text_buffer_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </method>
      <method name="InsertAtCursor" cname="gtk_text_buffer_insert_at_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </method>
      <method name="InsertInteractive" cname="gtk_text_buffer_insert_interactive">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="InsertInteractiveAtCursor" cname="gtk_text_buffer_insert_interactive_at_cursor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="InsertRange" cname="gtk_text_buffer_insert_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InsertRangeInteractive" cname="gtk_text_buffer_insert_range_interactive">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="MoveMark" cname="gtk_text_buffer_move_mark">
        <return-type type="void"/>
        <parameters>
          <parameter name="mark" type="GtkTextMark*"/>
          <parameter name="where" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MoveMarkByName" cname="gtk_text_buffer_move_mark_by_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="where" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PasteClipboard" cname="gtk_text_buffer_paste_clipboard">
        <return-type type="void"/>
        <parameters>
          <parameter name="clipboard" type="GtkClipboard*"/>
          <parameter allow-none="1" name="override_location" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="default_editable" type="gboolean"/>
        </parameters>
      </method>
      <method name="PlaceCursor" cname="gtk_text_buffer_place_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="where" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RegisterDeserializeFormat" cname="gtk_text_buffer_register_deserialize_format">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="mime_type" type="const-gchar*"/>
          <parameter closure="2" destroy="3" scope="notified" name="function" type="GtkTextBufferDeserializeFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="user_data_destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="RegisterDeserializeTagset" cname="gtk_text_buffer_register_deserialize_tagset">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="tagset_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RegisterSerializeFormat" cname="gtk_text_buffer_register_serialize_format">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="mime_type" type="const-gchar*"/>
          <parameter closure="2" destroy="3" scope="notified" name="function" type="GtkTextBufferSerializeFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="user_data_destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="RegisterSerializeTagset" cname="gtk_text_buffer_register_serialize_tagset">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="tagset_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RemoveAllTags" cname="gtk_text_buffer_remove_all_tags">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveSelectionClipboard" cname="gtk_text_buffer_remove_selection_clipboard">
        <return-type type="void"/>
        <parameters>
          <parameter name="clipboard" type="GtkClipboard*"/>
        </parameters>
      </method>
      <method name="RemoveTagByName" cname="gtk_text_buffer_remove_tag_by_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SelectRange" cname="gtk_text_buffer_select_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="ins" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="bound" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Serialize" cname="gtk_text_buffer_serialize">
        <return-type type="guint8**" owned="true" array="true" array_length_param_index="4"/>
        <parameters>
          <parameter name="content_buffer" type="GtkTextBuffer*"/>
          <parameter name="format" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="length" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetModified" cname="gtk_text_buffer_set_modified">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_text_buffer_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </method>
      <method name="UnregisterDeserializeFormat" cname="gtk_text_buffer_unregister_deserialize_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnregisterSerializeFormat" cname="gtk_text_buffer_unregister_serialize_format">
        <return-type type="void"/>
        <parameters>
          <parameter name="format" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <property name="CopyTargetList" cname="copy-target-list" type="GtkTargetList*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="CursorPosition" cname="cursor-position" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="HasSelection" cname="has-selection" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="PasteTargetList" cname="paste-target-list" type="GtkTargetList*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="TagTable" cname="tag-table" type="GtkTextTagTable*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkTextBufferPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ApplyTag" cname="apply-tag" when="last" field_name="apply_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="BeginUserAction" cname="begin-user-action" when="last" field_name="begin_user_action">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="Changed" cname="changed" when="last" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="DeleteRange" cname="delete-range" when="last" field_name="delete_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="EndUserAction" cname="end-user-action" when="last" field_name="end_user_action">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="InsertChildAnchor" cname="insert-child-anchor" when="last" field_name="insert_child_anchor">
        <return-type type="void"/>
        <parameters>
          <parameter name="location" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="anchor" type="GtkTextChildAnchor*"/>
        </parameters>
      </signal>
      <signal name="InsertPixbuf" cname="insert-pixbuf" when="last" field_name="insert_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter name="location" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </signal>
      <signal name="InsertText" cname="insert-text" when="last" field_name="insert_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="location" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </signal>
      <signal name="MarkDeleted" cname="mark-deleted" when="last" field_name="mark_deleted">
        <return-type type="void"/>
        <parameters>
          <parameter name="mark" type="GtkTextMark*"/>
        </parameters>
      </signal>
      <signal name="MarkSet" cname="mark-set" when="last" field_name="mark_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="location" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mark" type="GtkTextMark*"/>
        </parameters>
      </signal>
      <signal name="ModifiedChanged" cname="modified-changed" when="last" field_name="modified_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PasteDone" cname="paste-done" when="last" field_name="paste_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkClipboard*"/>
        </parameters>
      </signal>
      <signal name="RemoveTag" cname="remove-tag" when="last" field_name="remove_tag">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="TextChildAnchor" cname="GtkTextChildAnchor" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkTextChildAnchorClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_text_child_anchor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_text_child_anchor_new" disable_void_ctor=""/>
      <method name="GetDeleted" cname="gtk_text_child_anchor_get_deleted">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetWidgets" cname="gtk_text_child_anchor_get_widgets">
        <return-type type="GList*" element_type="GtkWidget*" elements_owned="true"/>
        <parameters/>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="segment" access="private" writeable="false" readable="false" name="Segment" type="gpointer"/>
    </object>
    <object name="TextMark" cname="GtkTextMark" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkTextMarkClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_text_mark_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_text_mark_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="left_gravity" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="GetBuffer" cname="gtk_text_mark_get_buffer">
        <return-type type="GtkTextBuffer*"/>
        <parameters/>
      </method>
      <method name="GetDeleted" cname="gtk_text_mark_get_deleted">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLeftGravity" cname="gtk_text_mark_get_left_gravity">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gtk_text_mark_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetVisible" cname="gtk_text_mark_get_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetVisible" cname="gtk_text_mark_set_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <property name="LeftGravity" cname="left-gravity" type="gboolean" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="segment" access="private" writeable="false" readable="false" name="Segment" type="gpointer"/>
    </object>
    <object name="TextTag" cname="GtkTextTag" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkTextTagClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="event"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_text_tag_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_text_tag_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetPriority" cname="gtk_text_tag_get_priority">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="SetPriority" cname="gtk_text_tag_set_priority">
        <return-type type="void"/>
        <parameters>
          <parameter name="priority" type="gint"/>
        </parameters>
      </method>
      <property name="AccumulativeMargin" cname="accumulative-margin" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Background" cname="background" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundFullHeight" cname="background-full-height" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundFullHeightSet" cname="background-full-height-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundGdk" cname="background-gdk" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundRgba" cname="background-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="BackgroundSet" cname="background-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Direction" cname="direction" type="GtkTextDirection" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EditableSet" cname="editable-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Family" cname="family" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FamilySet" cname="family-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Font" cname="font" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FontDesc" cname="font-desc" type="PangoFontDescription*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Foreground" cname="foreground" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="ForegroundGdk" cname="foreground-gdk" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ForegroundRgba" cname="foreground-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ForegroundSet" cname="foreground-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Indent" cname="indent" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IndentSet" cname="indent-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Invisible" cname="invisible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InvisibleSet" cname="invisible-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Justification" cname="justification" type="GtkJustification" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="JustificationSet" cname="justification-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Language" cname="language" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LanguageSet" cname="language-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LeftMargin" cname="left-margin" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LeftMarginSet" cname="left-margin-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="ParagraphBackground" cname="paragraph-background" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="ParagraphBackgroundGdk" cname="paragraph-background-gdk" type="GdkColor*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ParagraphBackgroundRgba" cname="paragraph-background-rgba" type="GdkRGBA*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ParagraphBackgroundSet" cname="paragraph-background-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsAboveLines" cname="pixels-above-lines" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsAboveLinesSet" cname="pixels-above-lines-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsBelowLines" cname="pixels-below-lines" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsBelowLinesSet" cname="pixels-below-lines-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsInsideWrap" cname="pixels-inside-wrap" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsInsideWrapSet" cname="pixels-inside-wrap-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RightMargin" cname="right-margin" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RightMarginSet" cname="right-margin-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Rise" cname="rise" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RiseSet" cname="rise-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Scale" cname="scale" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ScaleSet" cname="scale-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Size" cname="size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SizePoints" cname="size-points" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SizeSet" cname="size-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Stretch" cname="stretch" type="PangoStretch" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StretchSet" cname="stretch-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Strikethrough" cname="strikethrough" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StrikethroughSet" cname="strikethrough-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Style" cname="style" type="PangoStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StyleSet" cname="style-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Tabs" cname="tabs" type="PangoTabArray*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TabsSet" cname="tabs-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Underline" cname="underline" type="PangoUnderline" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UnderlineSet" cname="underline-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Variant" cname="variant" type="PangoVariant" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VariantSet" cname="variant-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Weight" cname="weight" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WeightSet" cname="weight-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapMode" cname="wrap-mode" type="GtkWrapMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapModeSet" cname="wrap-mode-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkTextTagPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Event" cname="event" when="last" field_name="event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="event" type="GdkEvent*"/>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="TextTagTable" cname="GtkTextTagTable" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkTextTagTableClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="tag_changed"/>
        <method signal_vm="tag_added"/>
        <method signal_vm="tag_removed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_text_tag_table_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_text_tag_table_new" disable_void_ctor=""/>
      <method name="Add" cname="gtk_text_tag_table_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_text_tag_table_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GtkTextTagTableForeach"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetSize" cname="gtk_text_tag_table_get_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="Lookup" cname="gtk_text_tag_table_lookup">
        <return-type type="GtkTextTag*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Remove" cname="gtk_text_tag_table_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkTextTagTablePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="TagAdded" cname="tag-added" when="last" field_name="tag_added">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
        </parameters>
      </signal>
      <signal name="TagChanged" cname="tag-changed" when="last" field_name="tag_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
          <parameter name="size_changed" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="TagRemoved" cname="tag-removed" when="last" field_name="tag_removed">
        <return-type type="void"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
        </parameters>
      </signal>
    </object>
    <object name="TextView" cname="GtkTextView" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkScrollable"/>
      </implements>
      <class_struct cname="GtkTextViewClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="populate_popup"/>
        <method signal_vm="move_cursor"/>
        <method signal_vm="set_anchor"/>
        <method signal_vm="insert_at_cursor"/>
        <method signal_vm="delete_from_cursor"/>
        <method signal_vm="backspace"/>
        <method signal_vm="cut_clipboard"/>
        <method signal_vm="copy_clipboard"/>
        <method signal_vm="paste_clipboard"/>
        <method signal_vm="toggle_overwrite"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_text_view_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_text_view_new" disable_void_ctor=""/>
      <constructor cname="gtk_text_view_new_with_buffer">
        <parameters>
          <parameter name="buffer" type="GtkTextBuffer*"/>
        </parameters>
      </constructor>
      <method name="AddChildAtAnchor" cname="gtk_text_view_add_child_at_anchor">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="anchor" type="GtkTextChildAnchor*"/>
        </parameters>
      </method>
      <method name="AddChildInWindow" cname="gtk_text_view_add_child_in_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="which_window" type="GtkTextWindowType"/>
          <parameter name="xpos" type="gint"/>
          <parameter name="ypos" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardDisplayLine" cname="gtk_text_view_backward_display_line">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BackwardDisplayLineStart" cname="gtk_text_view_backward_display_line_start">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BufferToWindowCoords" cname="gtk_text_view_buffer_to_window_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="win" type="GtkTextWindowType"/>
          <parameter name="buffer_x" type="gint"/>
          <parameter name="buffer_y" type="gint"/>
          <parameter allow-none="1" name="window_x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="window_y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ForwardDisplayLine" cname="gtk_text_view_forward_display_line">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ForwardDisplayLineEnd" cname="gtk_text_view_forward_display_line_end">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetAcceptsTab" cname="gtk_text_view_get_accepts_tab">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetBorderWindowSize" cname="gtk_text_view_get_border_window_size">
        <return-type type="gint"/>
        <parameters>
          <parameter name="type" type="GtkTextWindowType"/>
        </parameters>
      </method>
      <method name="GetBuffer" cname="gtk_text_view_get_buffer">
        <return-type type="GtkTextBuffer*"/>
        <parameters/>
      </method>
      <method name="GetCursorLocations" cname="gtk_text_view_get_cursor_locations">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="strong" type="cairo_rectangle_int_t" pass_as="out"/>
          <parameter allow-none="1" name="weak" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetCursorVisible" cname="gtk_text_view_get_cursor_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDefaultAttributes" cname="gtk_text_view_get_default_attributes">
        <return-type type="GtkTextAttributes*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetEditable" cname="gtk_text_view_get_editable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHadjustment" cname="gtk_text_view_get_hadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetIndent" cname="gtk_text_view_get_indent">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetInputHints" cname="gtk_text_view_get_input_hints">
        <return-type type="GtkInputHints"/>
        <parameters/>
      </method>
      <method name="GetInputPurpose" cname="gtk_text_view_get_input_purpose">
        <return-type type="GtkInputPurpose"/>
        <parameters/>
      </method>
      <method name="GetIterAtLocation" cname="gtk_text_view_get_iter_at_location">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetIterAtPosition" cname="gtk_text_view_get_iter_at_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="trailing" type="gint*" owned="true" pass_as="out"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetIterLocation" cname="gtk_text_view_get_iter_location">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="location" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetJustification" cname="gtk_text_view_get_justification">
        <return-type type="GtkJustification"/>
        <parameters/>
      </method>
      <method name="GetLeftMargin" cname="gtk_text_view_get_left_margin">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetLineAtY" cname="gtk_text_view_get_line_at_y">
        <return-type type="void"/>
        <parameters>
          <parameter name="target_iter" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="y" type="gint"/>
          <parameter name="line_top" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetLineYrange" cname="gtk_text_view_get_line_yrange">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="y" type="gint*" owned="true" pass_as="out"/>
          <parameter name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetOverwrite" cname="gtk_text_view_get_overwrite">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPixelsAboveLines" cname="gtk_text_view_get_pixels_above_lines">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPixelsBelowLines" cname="gtk_text_view_get_pixels_below_lines">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPixelsInsideWrap" cname="gtk_text_view_get_pixels_inside_wrap">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetRightMargin" cname="gtk_text_view_get_right_margin">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTabs" cname="gtk_text_view_get_tabs">
        <return-type type="PangoTabArray*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetVadjustment" cname="gtk_text_view_get_vadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetVisibleRect" cname="gtk_text_view_get_visible_rect">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible_rect" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetWindow" cname="gtk_text_view_get_window">
        <return-type type="GdkWindow*"/>
        <parameters>
          <parameter name="win" type="GtkTextWindowType"/>
        </parameters>
      </method>
      <method name="GetWindowType" cname="gtk_text_view_get_window_type">
        <return-type type="GtkTextWindowType"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="GetWrapMode" cname="gtk_text_view_get_wrap_mode">
        <return-type type="GtkWrapMode"/>
        <parameters/>
      </method>
      <method name="ImContextFilterKeypress" cname="gtk_text_view_im_context_filter_keypress">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MoveChild" cname="gtk_text_view_move_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="xpos" type="gint"/>
          <parameter name="ypos" type="gint"/>
        </parameters>
      </method>
      <method name="MoveMarkOnscreen" cname="gtk_text_view_move_mark_onscreen">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mark" type="GtkTextMark*"/>
        </parameters>
      </method>
      <method name="MoveVisually" cname="gtk_text_view_move_visually">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="PlaceCursorOnscreen" cname="gtk_text_view_place_cursor_onscreen">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ResetImContext" cname="gtk_text_view_reset_im_context">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ScrollMarkOnscreen" cname="gtk_text_view_scroll_mark_onscreen">
        <return-type type="void"/>
        <parameters>
          <parameter name="mark" type="GtkTextMark*"/>
        </parameters>
      </method>
      <method name="ScrollToIter" cname="gtk_text_view_scroll_to_iter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="within_margin" type="gdouble"/>
          <parameter name="use_align" type="gboolean"/>
          <parameter name="xalign" type="gdouble"/>
          <parameter name="yalign" type="gdouble"/>
        </parameters>
      </method>
      <method name="ScrollToMark" cname="gtk_text_view_scroll_to_mark">
        <return-type type="void"/>
        <parameters>
          <parameter name="mark" type="GtkTextMark*"/>
          <parameter name="within_margin" type="gdouble"/>
          <parameter name="use_align" type="gboolean"/>
          <parameter name="xalign" type="gdouble"/>
          <parameter name="yalign" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetAcceptsTab" cname="gtk_text_view_set_accepts_tab">
        <return-type type="void"/>
        <parameters>
          <parameter name="accepts_tab" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetBorderWindowSize" cname="gtk_text_view_set_border_window_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkTextWindowType"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetBuffer" cname="gtk_text_view_set_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="buffer" type="GtkTextBuffer*"/>
        </parameters>
      </method>
      <method name="SetCursorVisible" cname="gtk_text_view_set_cursor_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_text_view_set_editable">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIndent" cname="gtk_text_view_set_indent">
        <return-type type="void"/>
        <parameters>
          <parameter name="indent" type="gint"/>
        </parameters>
      </method>
      <method name="SetInputHints" cname="gtk_text_view_set_input_hints">
        <return-type type="void"/>
        <parameters>
          <parameter name="hints" type="GtkInputHints"/>
        </parameters>
      </method>
      <method name="SetInputPurpose" cname="gtk_text_view_set_input_purpose">
        <return-type type="void"/>
        <parameters>
          <parameter name="purpose" type="GtkInputPurpose"/>
        </parameters>
      </method>
      <method name="SetJustification" cname="gtk_text_view_set_justification">
        <return-type type="void"/>
        <parameters>
          <parameter name="justification" type="GtkJustification"/>
        </parameters>
      </method>
      <method name="SetLeftMargin" cname="gtk_text_view_set_left_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="left_margin" type="gint"/>
        </parameters>
      </method>
      <method name="SetOverwrite" cname="gtk_text_view_set_overwrite">
        <return-type type="void"/>
        <parameters>
          <parameter name="overwrite" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetPixelsAboveLines" cname="gtk_text_view_set_pixels_above_lines">
        <return-type type="void"/>
        <parameters>
          <parameter name="pixels_above_lines" type="gint"/>
        </parameters>
      </method>
      <method name="SetPixelsBelowLines" cname="gtk_text_view_set_pixels_below_lines">
        <return-type type="void"/>
        <parameters>
          <parameter name="pixels_below_lines" type="gint"/>
        </parameters>
      </method>
      <method name="SetPixelsInsideWrap" cname="gtk_text_view_set_pixels_inside_wrap">
        <return-type type="void"/>
        <parameters>
          <parameter name="pixels_inside_wrap" type="gint"/>
        </parameters>
      </method>
      <method name="SetRightMargin" cname="gtk_text_view_set_right_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="right_margin" type="gint"/>
        </parameters>
      </method>
      <method name="SetTabs" cname="gtk_text_view_set_tabs">
        <return-type type="void"/>
        <parameters>
          <parameter name="tabs" type="PangoTabArray*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetWrapMode" cname="gtk_text_view_set_wrap_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="wrap_mode" type="GtkWrapMode"/>
        </parameters>
      </method>
      <method name="StartsDisplayLine" cname="gtk_text_view_starts_display_line">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="WindowToBufferCoords" cname="gtk_text_view_window_to_buffer_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="win" type="GtkTextWindowType"/>
          <parameter name="window_x" type="gint"/>
          <parameter name="window_y" type="gint"/>
          <parameter allow-none="1" name="buffer_x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="buffer_y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <property name="AcceptsTab" cname="accepts-tab" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Buffer" cname="buffer" type="GtkTextBuffer*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CursorVisible" cname="cursor-visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ImModule" cname="im-module" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Indent" cname="indent" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InputHints" cname="input-hints" type="GtkInputHints" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="InputPurpose" cname="input-purpose" type="GtkInputPurpose" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Justification" cname="justification" type="GtkJustification" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LeftMargin" cname="left-margin" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Overwrite" cname="overwrite" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsAboveLines" cname="pixels-above-lines" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsBelowLines" cname="pixels-below-lines" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PixelsInsideWrap" cname="pixels-inside-wrap" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="PopulateAll" cname="populate-all" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RightMargin" cname="right-margin" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Tabs" cname="tabs" type="PangoTabArray*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WrapMode" cname="wrap-mode" type="GtkWrapMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkContainer*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkTextViewPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Backspace" cname="backspace" when="last" field_name="backspace">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="CopyClipboard" cname="copy-clipboard" when="last" field_name="copy_clipboard">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="CutClipboard" cname="cut-clipboard" when="last" field_name="cut_clipboard">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="DeleteFromCursor" cname="delete-from-cursor" when="last" field_name="delete_from_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkDeleteType"/>
          <parameter name="count" type="gint"/>
        </parameters>
      </signal>
      <signal name="InsertAtCursor" cname="insert-at-cursor" when="last" field_name="insert_at_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="MoveCursor" cname="move-cursor" when="last" field_name="move_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="step" type="GtkMovementStep"/>
          <parameter name="count" type="gint"/>
          <parameter name="extend_selection" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="MoveViewport" cname="move-viewport" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="step" type="GtkScrollStep"/>
          <parameter name="count" type="gint"/>
        </parameters>
      </signal>
      <signal name="PasteClipboard" cname="paste-clipboard" when="last" field_name="paste_clipboard">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="PopulatePopup" cname="populate-popup" when="last" field_name="populate_popup">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="PreeditChanged" cname="preedit-changed" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="preedit" type="const-gchar*"/>
        </parameters>
      </signal>
      <signal name="SelectAll" cname="select-all" when="last">
        <return-type type="void"/>
        <parameters>
          <parameter name="select" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="SetAnchor" cname="set-anchor" when="last" field_name="set_anchor">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ToggleCursorVisible" cname="toggle-cursor-visible" when="last">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ToggleOverwrite" cname="toggle-overwrite" when="last" field_name="toggle_overwrite">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ThemingEngine" cname="GtkThemingEngine" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkThemingEngineClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="render_line"/>
        <method vm="render_background"/>
        <method vm="render_frame"/>
        <method vm="render_frame_gap"/>
        <method vm="render_extension"/>
        <method vm="render_check"/>
        <method vm="render_option"/>
        <method vm="render_arrow"/>
        <method vm="render_expander"/>
        <method vm="render_focus"/>
        <method vm="render_layout"/>
        <method vm="render_slider"/>
        <method vm="render_handle"/>
        <method vm="render_activity"/>
        <method vm="render_icon_pixbuf"/>
        <method vm="render_icon"/>
        <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="gpointer" array="true" array_len="15"/>
      </class_struct>
      <method name="GetType" cname="gtk_theming_engine_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Load" cname="gtk_theming_engine_load" shared="true">
        <return-type type="GtkThemingEngine*"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <virtual_method name="RenderActivity" cname="render_activity">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderArrow" cname="render_arrow">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="angle" type="gdouble"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="size" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderBackground" cname="render_background">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderCheck" cname="render_check">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderExpander" cname="render_expander">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderExtension" cname="render_extension">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="gap_side" type="GtkPositionType"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderFocus" cname="render_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderFrame" cname="render_frame">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderFrameGap" cname="render_frame_gap">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="gap_side" type="GtkPositionType"/>
          <parameter name="xy0_gap" type="gdouble"/>
          <parameter name="xy1_gap" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderHandle" cname="render_handle">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderIcon" cname="render_icon">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderIconPixbuf" cname="render_icon_pixbuf" hidden="true">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="source" type="GtkIconSource*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="GtkIconSize"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderLayout" cname="render_layout">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="layout" type="PangoLayout*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderLine" cname="render_line">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x0" type="gdouble"/>
          <parameter name="y0" type="gdouble"/>
          <parameter name="x1" type="gdouble"/>
          <parameter name="y1" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderOption" cname="render_option">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RenderSlider" cname="render_slider">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </virtual_method>
      <method name="GetBackgroundColor" cname="gtk_theming_engine_get_background_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBorder" cname="gtk_theming_engine_get_border">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="border" type="GtkBorder*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBorderColor" cname="gtk_theming_engine_get_border_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetColor" cname="gtk_theming_engine_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDirection" cname="gtk_theming_engine_get_direction" deprecated="true">
        <return-type type="GtkTextDirection"/>
        <parameters/>
      </method>
      <method name="GetFont" cname="gtk_theming_engine_get_font" deprecated="true">
        <return-type type="PangoFontDescription*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
        </parameters>
      </method>
      <method name="GetJunctionSides" cname="gtk_theming_engine_get_junction_sides">
        <return-type type="GtkJunctionSides"/>
        <parameters/>
      </method>
      <method name="GetMargin" cname="gtk_theming_engine_get_margin">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="margin" type="GtkBorder*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetPadding" cname="gtk_theming_engine_get_padding">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="padding" type="GtkBorder*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetPath" cname="gtk_theming_engine_get_path">
        <return-type type="GtkWidgetPath*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetProperty" cname="gtk_theming_engine_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property" type="const-gchar*"/>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter name="value" type="GValue*" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetScreen" cname="gtk_theming_engine_get_screen">
        <return-type type="GdkScreen*"/>
        <parameters/>
      </method>
      <method name="GetState" cname="gtk_theming_engine_get_state">
        <return-type type="GtkStateFlags"/>
        <parameters/>
      </method>
      <method name="GetStyleProperty" cname="gtk_theming_engine_get_style_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="HasClass" cname="gtk_theming_engine_has_class">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="style_class" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasRegion" cname="gtk_theming_engine_has_region">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="style_region" type="const-gchar*"/>
          <parameter allow-none="1" name="flags" type="GtkRegionFlags" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="LookupColor" cname="gtk_theming_engine_lookup_color">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="color_name" type="const-gchar*"/>
          <parameter name="color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="StateIsRunning" cname="gtk_theming_engine_state_is_running" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
          <parameter name="progress" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="parent_object" access="public" writeable="false" readable="true" name="ParentObject" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkThemingEnginePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="ToggleAction" cname="GtkToggleAction" abstract="false" opaque="false" hidden="false" parent="GtkAction">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkToggleActionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkActionClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="toggled"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_toggle_action_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_toggle_action_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="label" type="const-gchar*"/>
          <parameter name="tooltip" type="const-gchar*"/>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetActive" cname="gtk_toggle_action_get_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDrawAsRadio" cname="gtk_toggle_action_get_draw_as_radio">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetActive" cname="gtk_toggle_action_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDrawAsRadio" cname="gtk_toggle_action_set_draw_as_radio">
        <return-type type="void"/>
        <parameters>
          <parameter name="draw_as_radio" type="gboolean"/>
        </parameters>
      </method>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DrawAsRadio" cname="draw-as-radio" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkAction*"/>
      <field cname="private_data" access="private" writeable="false" readable="false" name="PrivateData" type="GtkToggleActionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Toggled" cname="toggled" when="first" field_name="toggled">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ToggleButton" cname="GtkToggleButton" abstract="false" opaque="false" hidden="false" parent="GtkButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkToggleButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="toggled"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_toggle_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_toggle_button_new" disable_void_ctor=""/>
      <constructor cname="gtk_toggle_button_new_with_label">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_toggle_button_new_with_mnemonic">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetActive" cname="gtk_toggle_button_get_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetInconsistent" cname="gtk_toggle_button_get_inconsistent">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetMode" cname="gtk_toggle_button_get_mode">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetActive" cname="gtk_toggle_button_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_active" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetInconsistent" cname="gtk_toggle_button_set_inconsistent">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_toggle_button_set_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="draw_indicator" type="gboolean"/>
        </parameters>
      </method>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DrawIndicator" cname="draw-indicator" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Inconsistent" cname="inconsistent" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="button" access="private" writeable="false" readable="false" name="Button" type="GtkButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkToggleButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Toggled" cname="toggled" when="first" field_name="toggled">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ToggleToolButton" cname="GtkToggleToolButton" abstract="false" opaque="false" hidden="false" parent="GtkToolButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkToggleToolButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToolButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="toggled"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_toggle_tool_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_toggle_tool_button_new" disable_void_ctor=""/>
      <constructor cname="gtk_toggle_tool_button_new_from_stock">
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetActive" cname="gtk_toggle_tool_button_get_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetActive" cname="gtk_toggle_tool_button_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_active" type="gboolean"/>
        </parameters>
      </method>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkToolButton*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkToggleToolButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Toggled" cname="toggled" when="first" field_name="toggled">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ToolButton" cname="GtkToolButton" abstract="false" opaque="false" hidden="false" parent="GtkToolItem">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkToolButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkToolItemClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="button_type" access="public" writeable="false" readable="true" name="ButtonType" type="GType"/>
        <method signal_vm="clicked"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tool_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tool_button_new">
        <parameters>
          <parameter name="icon_widget" type="GtkWidget*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_tool_button_new_from_stock">
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetIconName" cname="gtk_tool_button_get_icon_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetIconWidget" cname="gtk_tool_button_get_icon_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetLabel" cname="gtk_tool_button_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLabelWidget" cname="gtk_tool_button_get_label_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetStockId" cname="gtk_tool_button_get_stock_id">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetUseUnderline" cname="gtk_tool_button_get_use_underline">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetIconName" cname="gtk_tool_button_set_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetIconWidget" cname="gtk_tool_button_set_icon_widget">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_tool_button_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_tool_button_set_label_widget">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="label_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetStockId" cname="gtk_tool_button_set_stock_id">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_tool_button_set_use_underline">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_underline" type="gboolean"/>
        </parameters>
      </method>
      <property name="IconName" cname="icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconWidget" cname="icon-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LabelWidget" cname="label-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StockId" cname="stock-id" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UseUnderline" cname="use-underline" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkToolItem*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkToolButtonPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Clicked" cname="clicked" when="first" field_name="clicked">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ToolItem" cname="GtkToolItem" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkToolItemClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="create_menu_proxy"/>
        <method signal_vm="toolbar_reconfigured"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tool_item_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tool_item_new" disable_void_ctor=""/>
      <method name="GetEllipsizeMode" cname="gtk_tool_item_get_ellipsize_mode">
        <return-type type="PangoEllipsizeMode"/>
        <parameters/>
      </method>
      <method name="GetExpand" cname="gtk_tool_item_get_expand">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHomogeneous" cname="gtk_tool_item_get_homogeneous">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetIconSize" cname="gtk_tool_item_get_icon_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetIsImportant" cname="gtk_tool_item_get_is_important">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetOrientation" cname="gtk_tool_item_get_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </method>
      <method name="GetProxyMenuItem" cname="gtk_tool_item_get_proxy_menu_item">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="menu_item_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetReliefStyle" cname="gtk_tool_item_get_relief_style">
        <return-type type="GtkReliefStyle"/>
        <parameters/>
      </method>
      <method name="GetTextAlignment" cname="gtk_tool_item_get_text_alignment">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetTextOrientation" cname="gtk_tool_item_get_text_orientation">
        <return-type type="GtkOrientation"/>
        <parameters/>
      </method>
      <method name="GetTextSizeGroup" cname="gtk_tool_item_get_text_size_group">
        <return-type type="GtkSizeGroup*"/>
        <parameters/>
      </method>
      <method name="GetToolbarStyle" cname="gtk_tool_item_get_toolbar_style">
        <return-type type="GtkToolbarStyle"/>
        <parameters/>
      </method>
      <method name="GetUseDragWindow" cname="gtk_tool_item_get_use_drag_window">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisibleHorizontal" cname="gtk_tool_item_get_visible_horizontal">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisibleVertical" cname="gtk_tool_item_get_visible_vertical">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="RebuildMenu" cname="gtk_tool_item_rebuild_menu">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RetrieveProxyMenuItem" cname="gtk_tool_item_retrieve_proxy_menu_item">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="SetExpand" cname="gtk_tool_item_set_expand">
        <return-type type="void"/>
        <parameters>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_tool_item_set_homogeneous">
        <return-type type="void"/>
        <parameters>
          <parameter name="homogeneous" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIsImportant" cname="gtk_tool_item_set_is_important">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_important" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetProxyMenuItem" cname="gtk_tool_item_set_proxy_menu_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_item_id" type="const-gchar*"/>
          <parameter name="menu_item" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetTooltipMarkup" cname="gtk_tool_item_set_tooltip_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="markup" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTooltipText" cname="gtk_tool_item_set_tooltip_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetUseDragWindow" cname="gtk_tool_item_set_use_drag_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="use_drag_window" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisibleHorizontal" cname="gtk_tool_item_set_visible_horizontal">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible_horizontal" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisibleVertical" cname="gtk_tool_item_set_visible_vertical">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible_vertical" type="gboolean"/>
        </parameters>
      </method>
      <property name="IsImportant" cname="is-important" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VisibleHorizontal" cname="visible-horizontal" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VisibleVertical" cname="visible-vertical" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkToolItemPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="CreateMenuProxy" cname="create-menu-proxy" when="last" field_name="create_menu_proxy">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="ToolbarReconfigured" cname="toolbar-reconfigured" when="last" field_name="toolbar_reconfigured">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="ToolItemGroup" cname="GtkToolItemGroup" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkToolShell"/>
      </implements>
      <class_struct cname="GtkToolItemGroupClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tool_item_group_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tool_item_group_new">
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetCollapsed" cname="gtk_tool_item_group_get_collapsed">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDropItem" cname="gtk_tool_item_group_get_drop_item">
        <return-type type="GtkToolItem*"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetEllipsize" cname="gtk_tool_item_group_get_ellipsize">
        <return-type type="PangoEllipsizeMode"/>
        <parameters/>
      </method>
      <method name="GetHeaderRelief" cname="gtk_tool_item_group_get_header_relief">
        <return-type type="GtkReliefStyle"/>
        <parameters/>
      </method>
      <method name="GetItemPosition" cname="gtk_tool_item_group_get_item_position">
        <return-type type="gint"/>
        <parameters>
          <parameter name="item" type="GtkToolItem*"/>
        </parameters>
      </method>
      <method name="GetLabel" cname="gtk_tool_item_group_get_label">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetLabelWidget" cname="gtk_tool_item_group_get_label_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetNItems" cname="gtk_tool_item_group_get_n_items">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetNthItem" cname="gtk_tool_item_group_get_nth_item">
        <return-type type="GtkToolItem*"/>
        <parameters>
          <parameter name="index" type="guint"/>
        </parameters>
      </method>
      <method name="Insert" cname="gtk_tool_item_group_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="item" type="GtkToolItem*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="SetCollapsed" cname="gtk_tool_item_group_set_collapsed">
        <return-type type="void"/>
        <parameters>
          <parameter name="collapsed" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetEllipsize" cname="gtk_tool_item_group_set_ellipsize">
        <return-type type="void"/>
        <parameters>
          <parameter name="ellipsize" type="PangoEllipsizeMode"/>
        </parameters>
      </method>
      <method name="SetHeaderRelief" cname="gtk_tool_item_group_set_header_relief">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkReliefStyle"/>
        </parameters>
      </method>
      <method name="SetItemPosition" cname="gtk_tool_item_group_set_item_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="item" type="GtkToolItem*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_tool_item_group_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_tool_item_group_set_label_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="label_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <property name="Collapsed" cname="collapsed" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Ellipsize" cname="ellipsize" type="PangoEllipsizeMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HeaderRelief" cname="header-relief" type="GtkReliefStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LabelWidget" cname="label-widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkContainer*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkToolItemGroupPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="ToolPalette" cname="GtkToolPalette" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
        <interface cname="GtkScrollable"/>
      </implements>
      <class_struct cname="GtkToolPaletteClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tool_palette_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tool_palette_new" disable_void_ctor=""/>
      <method name="GetDragTargetGroup" cname="gtk_tool_palette_get_drag_target_group" shared="true">
        <return-type type="GtkTargetEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetDragTargetItem" cname="gtk_tool_palette_get_drag_target_item" shared="true">
        <return-type type="GtkTargetEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="AddDragDest" cname="gtk_tool_palette_add_drag_dest">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="flags" type="GtkDestDefaults"/>
          <parameter name="targets" type="GtkToolPaletteDragTargets"/>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="GetDragItem" cname="gtk_tool_palette_get_drag_item">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="selection" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDropGroup" cname="gtk_tool_palette_get_drop_group">
        <return-type type="GtkToolItemGroup*"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetDropItem" cname="gtk_tool_palette_get_drop_item">
        <return-type type="GtkToolItem*"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetExclusive" cname="gtk_tool_palette_get_exclusive">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="group" type="GtkToolItemGroup*"/>
        </parameters>
      </method>
      <method name="GetExpand" cname="gtk_tool_palette_get_expand">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="group" type="GtkToolItemGroup*"/>
        </parameters>
      </method>
      <method name="GetGroupPosition" cname="gtk_tool_palette_get_group_position">
        <return-type type="gint"/>
        <parameters>
          <parameter name="group" type="GtkToolItemGroup*"/>
        </parameters>
      </method>
      <method name="GetHadjustment" cname="gtk_tool_palette_get_hadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetIconSize" cname="gtk_tool_palette_get_icon_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetStyle" cname="gtk_tool_palette_get_style">
        <return-type type="GtkToolbarStyle"/>
        <parameters/>
      </method>
      <method name="GetVadjustment" cname="gtk_tool_palette_get_vadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="SetDragSource" cname="gtk_tool_palette_set_drag_source">
        <return-type type="void"/>
        <parameters>
          <parameter name="targets" type="GtkToolPaletteDragTargets"/>
        </parameters>
      </method>
      <method name="SetExclusive" cname="gtk_tool_palette_set_exclusive">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="GtkToolItemGroup*"/>
          <parameter name="exclusive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetExpand" cname="gtk_tool_palette_set_expand">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="GtkToolItemGroup*"/>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetGroupPosition" cname="gtk_tool_palette_set_group_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="GtkToolItemGroup*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="SetIconSize" cname="gtk_tool_palette_set_icon_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_size" type="gint"/>
        </parameters>
      </method>
      <method name="SetStyle" cname="gtk_tool_palette_set_style">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkToolbarStyle"/>
        </parameters>
      </method>
      <method name="UnsetIconSize" cname="gtk_tool_palette_unset_icon_size">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnsetStyle" cname="gtk_tool_palette_unset_style">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="IconSize" cname="icon-size" type="GtkIconSize" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconSizeSet" cname="icon-size-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ToolbarStyle" cname="toolbar-style" type="GtkToolbarStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GtkContainer*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkToolPalettePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="Toolbar" cname="GtkToolbar" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
        <interface cname="GtkToolShell"/>
      </implements>
      <class_struct cname="GtkToolbarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="orientation_changed"/>
        <method signal_vm="style_changed"/>
        <method signal_vm="popup_context_menu"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_toolbar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_toolbar_new" disable_void_ctor=""/>
      <method name="GetDropIndex" cname="gtk_toolbar_get_drop_index">
        <return-type type="gint"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="GetIconSize" cname="gtk_toolbar_get_icon_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetItemIndex" cname="gtk_toolbar_get_item_index">
        <return-type type="gint"/>
        <parameters>
          <parameter name="item" type="GtkToolItem*"/>
        </parameters>
      </method>
      <method name="GetNItems" cname="gtk_toolbar_get_n_items">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetNthItem" cname="gtk_toolbar_get_nth_item">
        <return-type type="GtkToolItem*"/>
        <parameters>
          <parameter name="n" type="gint"/>
        </parameters>
      </method>
      <method name="GetReliefStyle" cname="gtk_toolbar_get_relief_style">
        <return-type type="GtkReliefStyle"/>
        <parameters/>
      </method>
      <method name="GetShowArrow" cname="gtk_toolbar_get_show_arrow">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetStyle" cname="gtk_toolbar_get_style">
        <return-type type="GtkToolbarStyle"/>
        <parameters/>
      </method>
      <method name="Insert" cname="gtk_toolbar_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="item" type="GtkToolItem*"/>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="SetDropHighlightItem" cname="gtk_toolbar_set_drop_highlight_item">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="tool_item" type="GtkToolItem*"/>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="SetIconSize" cname="gtk_toolbar_set_icon_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_size" type="gint"/>
        </parameters>
      </method>
      <method name="SetShowArrow" cname="gtk_toolbar_set_show_arrow">
        <return-type type="void"/>
        <parameters>
          <parameter name="show_arrow" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetStyle" cname="gtk_toolbar_set_style">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkToolbarStyle"/>
        </parameters>
      </method>
      <method name="UnsetIconSize" cname="gtk_toolbar_unset_icon_size">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnsetStyle" cname="gtk_toolbar_unset_style">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="IconSize" cname="icon-size" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconSizeSet" cname="icon-size-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowArrow" cname="show-arrow" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ToolbarStyle" cname="toolbar-style" type="GtkToolbarStyle" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="container" access="public" writeable="false" readable="true" name="Container" type="GtkContainer*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkToolbarPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="FocusHomeOrEnd" cname="focus-home-or-end" when="last">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="focus_home" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="OrientationChanged" cname="orientation-changed" when="first" field_name="orientation_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </signal>
      <signal name="PopupContextMenu" cname="popup-context-menu" when="last" field_name="popup_context_menu">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="button" type="gint"/>
        </parameters>
      </signal>
      <signal name="StyleChanged" cname="style-changed" when="first" field_name="style_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkToolbarStyle"/>
        </parameters>
      </signal>
    </object>
    <object name="Tooltip" cname="GtkTooltip" abstract="false" opaque="false" hidden="false" parent="GObject">
      <method name="GetType" cname="gtk_tooltip_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="TriggerTooltipQuery" cname="gtk_tooltip_trigger_tooltip_query" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="display" type="GdkDisplay*"/>
        </parameters>
      </method>
      <method name="SetCustom" cname="gtk_tooltip_set_custom">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="custom_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetIcon" cname="gtk_tooltip_set_icon">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetIconFromGicon" cname="gtk_tooltip_set_icon_from_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="gicon" type="GIcon*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetIconFromIconName" cname="gtk_tooltip_set_icon_from_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_name" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetIconFromStock" cname="gtk_tooltip_set_icon_from_stock">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="stock_id" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetMarkup" cname="gtk_tooltip_set_markup">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="markup" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_tooltip_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTipArea" cname="gtk_tooltip_set_tip_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="rect" type="cairo_rectangle_int_t"/>
        </parameters>
      </method>
    </object>
    <object name="TreeModelFilter" cname="GtkTreeModelFilter" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkTreeDragSource"/>
        <interface cname="GtkTreeModel"/>
      </implements>
      <class_struct cname="GtkTreeModelFilterClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="visible"/>
        <method vm="modify"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tree_model_filter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <virtual_method name="Modify" cname="modify">
        <return-type type="void"/>
        <parameters>
          <parameter name="child_model" type="GtkTreeModel*"/>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="column" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Visible" cname="visible">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="child_model" type="GtkTreeModel*"/>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </virtual_method>
      <method name="ClearCache" cname="gtk_tree_model_filter_clear_cache">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ConvertChildIterToIter" cname="gtk_tree_model_filter_convert_child_iter_to_iter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filter_iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="child_iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConvertChildPathToPath" cname="gtk_tree_model_filter_convert_child_path_to_path">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="child_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConvertIterToChildIter" cname="gtk_tree_model_filter_convert_iter_to_child_iter">
        <return-type type="void"/>
        <parameters>
          <parameter name="child_iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="filter_iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConvertPathToChildPath" cname="gtk_tree_model_filter_convert_path_to_child_path">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="filter_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetModel" cname="gtk_tree_model_filter_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="Refilter" cname="gtk_tree_model_filter_refilter">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetModifyFunc" cname="gtk_tree_model_filter_set_modify_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_columns" type="gint"/>
          <parameter name="types" type="GType*" array="true" array_length_param_index="0"/>
          <parameter closure="3" destroy="4" scope="notified" name="func" type="GtkTreeModelFilterModifyFunc"/>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetVisibleColumn" cname="gtk_tree_model_filter_set_visible_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="SetVisibleFunc" cname="gtk_tree_model_filter_set_visible_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GtkTreeModelFilterVisibleFunc"/>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <property name="ChildModel" cname="child-model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="VirtualRoot" cname="virtual-root" type="GtkTreePath*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkTreeModelFilterPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TreeModelSort" cname="GtkTreeModelSort" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkTreeDragSource"/>
        <interface cname="GtkTreeModel"/>
        <interface cname="GtkTreeSortable"/>
      </implements>
      <class_struct cname="GtkTreeModelSortClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tree_model_sort_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ClearCache" cname="gtk_tree_model_sort_clear_cache">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ConvertChildIterToIter" cname="gtk_tree_model_sort_convert_child_iter_to_iter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="sort_iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="child_iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConvertChildPathToPath" cname="gtk_tree_model_sort_convert_child_path_to_path">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="child_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConvertIterToChildIter" cname="gtk_tree_model_sort_convert_iter_to_child_iter">
        <return-type type="void"/>
        <parameters>
          <parameter name="child_iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="sorted_iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ConvertPathToChildPath" cname="gtk_tree_model_sort_convert_path_to_child_path">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="sorted_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetModel" cname="gtk_tree_model_sort_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="IterIsValid" cname="gtk_tree_model_sort_iter_is_valid">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ResetDefaultSortFunc" cname="gtk_tree_model_sort_reset_default_sort_func">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="Model" cname="model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkTreeModelSortPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TreeSelection" cname="GtkTreeSelection" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkTreeSelectionClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tree_selection_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="CountSelectedRows" cname="gtk_tree_selection_count_selected_rows">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMode" cname="gtk_tree_selection_get_mode">
        <return-type type="GtkSelectionMode"/>
        <parameters/>
      </method>
      <method name="GetSelected" cname="gtk_tree_selection_get_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="model" type="GtkTreeModel*" pass_as="out"/>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetSelectedRows" cname="gtk_tree_selection_get_selected_rows">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter allow-none="1" name="model" type="GtkTreeModel*" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetTreeView" cname="gtk_tree_selection_get_tree_view">
        <return-type type="GtkTreeView*"/>
        <parameters/>
      </method>
      <method name="IterIsSelected" cname="gtk_tree_selection_iter_is_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="PathIsSelected" cname="gtk_tree_selection_path_is_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_tree_selection_select_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SelectIter" cname="gtk_tree_selection_select_iter">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SelectPath" cname="gtk_tree_selection_select_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SelectRange" cname="gtk_tree_selection_select_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SelectedForeach" cname="gtk_tree_selection_selected_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GtkTreeSelectionForeachFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_tree_selection_set_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkSelectionMode"/>
        </parameters>
      </method>
      <method name="SetSelectFunction" cname="gtk_tree_selection_set_select_function">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="func" type="GtkTreeSelectionFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_tree_selection_unselect_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnselectIter" cname="gtk_tree_selection_unselect_iter">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnselectPath" cname="gtk_tree_selection_unselect_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="UnselectRange" cname="gtk_tree_selection_unselect_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end_path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <property name="Mode" cname="mode" type="GtkSelectionMode" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="private" writeable="false" readable="false" name="Parent" type="GObject*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkTreeSelectionPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Changed" cname="changed" when="first" field_name="changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="TreeStore" cname="GtkTreeStore" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkTreeDragDest"/>
        <interface cname="GtkTreeDragSource"/>
        <interface cname="GtkTreeModel"/>
        <interface cname="GtkTreeSortable"/>
      </implements>
      <class_struct cname="GtkTreeStoreClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tree_store_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tree_store_newv">
        <parameters>
          <parameter name="n_columns" type="gint"/>
          <parameter name="types" type="GType*" array="true" array_length_param_index="0"/>
        </parameters>
      </constructor>
      <method name="Append" cname="gtk_tree_store_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Clear" cname="gtk_tree_store_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Insert" cname="gtk_tree_store_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="InsertAfter" cname="gtk_tree_store_insert_after">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="sibling" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InsertBefore" cname="gtk_tree_store_insert_before">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="sibling" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InsertWithValuesv" cname="gtk_tree_store_insert_with_valuesv">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="position" type="gint"/>
          <parameter name="columns" type="gint*" array="true" array_length_param_index="5"/>
          <parameter name="values" type="GValue*" array="true" array_length_param_index="5"/>
          <parameter name="n_values" type="gint"/>
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_tree_store_is_ancestor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="descendant" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterDepth" cname="gtk_tree_store_iter_depth">
        <return-type type="gint"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IterIsValid" cname="gtk_tree_store_iter_is_valid">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MoveAfter" cname="gtk_tree_store_move_after">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="position" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="MoveBefore" cname="gtk_tree_store_move_before">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="position" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Prepend" cname="gtk_tree_store_prepend">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="parent" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Remove" cname="gtk_tree_store_remove">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetColumnTypes" cname="gtk_tree_store_set_column_types">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_columns" type="gint"/>
          <parameter name="types" type="GType*" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_tree_store_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="column" type="gint"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetValuesv" cname="gtk_tree_store_set_valuesv">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="columns" type="gint*" array="true" array_length_param_index="3"/>
          <parameter name="values" type="GValue*" array="true" array_length_param_index="3"/>
          <parameter name="n_values" type="gint"/>
        </parameters>
      </method>
      <method name="Swap" cname="gtk_tree_store_swap">
        <return-type type="void"/>
        <parameters>
          <parameter name="a" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="b" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkTreeStorePrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="TreeView" cname="GtkTreeView" abstract="false" opaque="false" hidden="false" parent="GtkContainer">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkScrollable"/>
      </implements>
      <class_struct cname="GtkTreeViewClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkContainerClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="row_activated"/>
        <method signal_vm="test_expand_row"/>
        <method signal_vm="test_collapse_row"/>
        <method signal_vm="row_expanded"/>
        <method signal_vm="row_collapsed"/>
        <method signal_vm="columns_changed"/>
        <method signal_vm="cursor_changed"/>
        <method signal_vm="move_cursor"/>
        <method signal_vm="select_all"/>
        <method signal_vm="unselect_all"/>
        <method signal_vm="select_cursor_row"/>
        <method signal_vm="toggle_cursor_row"/>
        <method signal_vm="expand_collapse_cursor_row"/>
        <method signal_vm="select_cursor_parent"/>
        <method signal_vm="start_interactive_search"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
        <method vm="_gtk_reserved8"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved8" cname="_gtk_reserved8" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tree_view_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tree_view_new" disable_void_ctor=""/>
      <constructor cname="gtk_tree_view_new_with_model">
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
        </parameters>
      </constructor>
      <method name="AppendColumn" cname="gtk_tree_view_append_column">
        <return-type type="gint"/>
        <parameters>
          <parameter name="column" type="GtkTreeViewColumn*"/>
        </parameters>
      </method>
      <method name="CollapseAll" cname="gtk_tree_view_collapse_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="CollapseRow" cname="gtk_tree_view_collapse_row">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ColumnsAutosize" cname="gtk_tree_view_columns_autosize">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ConvertBinWindowToTreeCoords" cname="gtk_tree_view_convert_bin_window_to_tree_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="bx" type="gint"/>
          <parameter name="by" type="gint"/>
          <parameter name="tx" type="gint*" owned="true" pass_as="out"/>
          <parameter name="ty" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ConvertBinWindowToWidgetCoords" cname="gtk_tree_view_convert_bin_window_to_widget_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="bx" type="gint"/>
          <parameter name="by" type="gint"/>
          <parameter name="wx" type="gint*" owned="true" pass_as="out"/>
          <parameter name="wy" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ConvertTreeToBinWindowCoords" cname="gtk_tree_view_convert_tree_to_bin_window_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="tx" type="gint"/>
          <parameter name="ty" type="gint"/>
          <parameter name="bx" type="gint*" owned="true" pass_as="out"/>
          <parameter name="by" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ConvertTreeToWidgetCoords" cname="gtk_tree_view_convert_tree_to_widget_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="tx" type="gint"/>
          <parameter name="ty" type="gint"/>
          <parameter name="wx" type="gint*" owned="true" pass_as="out"/>
          <parameter name="wy" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ConvertWidgetToBinWindowCoords" cname="gtk_tree_view_convert_widget_to_bin_window_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="wx" type="gint"/>
          <parameter name="wy" type="gint"/>
          <parameter name="bx" type="gint*" owned="true" pass_as="out"/>
          <parameter name="by" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ConvertWidgetToTreeCoords" cname="gtk_tree_view_convert_widget_to_tree_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="wx" type="gint"/>
          <parameter name="wy" type="gint"/>
          <parameter name="tx" type="gint*" owned="true" pass_as="out"/>
          <parameter name="ty" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="CreateRowDragIcon" cname="gtk_tree_view_create_row_drag_icon">
        <return-type type="cairo.Surface*" owned="true"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="EnableModelDragDest" cname="gtk_tree_view_enable_model_drag_dest">
        <return-type type="void"/>
        <parameters>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="EnableModelDragSource" cname="gtk_tree_view_enable_model_drag_source">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_button_mask" type="GdkModifierType"/>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="2"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="ExpandAll" cname="gtk_tree_view_expand_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ExpandRow" cname="gtk_tree_view_expand_row">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="open_all" type="gboolean"/>
        </parameters>
      </method>
      <method name="ExpandToPath" cname="gtk_tree_view_expand_to_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetActivateOnSingleClick" cname="gtk_tree_view_get_activate_on_single_click">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetBackgroundArea" cname="gtk_tree_view_get_background_area">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="column" type="GtkTreeViewColumn*"/>
          <parameter name="rect" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetBinWindow" cname="gtk_tree_view_get_bin_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GetCellArea" cname="gtk_tree_view_get_cell_area">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="column" type="GtkTreeViewColumn*"/>
          <parameter name="rect" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetColumn" cname="gtk_tree_view_get_column">
        <return-type type="GtkTreeViewColumn*"/>
        <parameters>
          <parameter name="n" type="gint"/>
        </parameters>
      </method>
      <method name="GetColumns" cname="gtk_tree_view_get_columns">
        <return-type type="GList*" element_type="GtkTreeViewColumn*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="GetCursor" cname="gtk_tree_view_get_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="focus_column" type="GtkTreeViewColumn*" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDestRowAtPos" cname="gtk_tree_view_get_dest_row_at_pos">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="drag_x" type="gint"/>
          <parameter name="drag_y" type="gint"/>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="pos" type="GtkTreeViewDropPosition" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDragDestRow" cname="gtk_tree_view_get_drag_dest_row">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="pos" type="GtkTreeViewDropPosition" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetEnableSearch" cname="gtk_tree_view_get_enable_search">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetEnableTreeLines" cname="gtk_tree_view_get_enable_tree_lines">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetExpanderColumn" cname="gtk_tree_view_get_expander_column">
        <return-type type="GtkTreeViewColumn*"/>
        <parameters/>
      </method>
      <method name="GetFixedHeightMode" cname="gtk_tree_view_get_fixed_height_mode">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetGridLines" cname="gtk_tree_view_get_grid_lines">
        <return-type type="GtkTreeViewGridLines"/>
        <parameters/>
      </method>
      <method name="GetHadjustment" cname="gtk_tree_view_get_hadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetHeadersClickable" cname="gtk_tree_view_get_headers_clickable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHeadersVisible" cname="gtk_tree_view_get_headers_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHoverExpand" cname="gtk_tree_view_get_hover_expand">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHoverSelection" cname="gtk_tree_view_get_hover_selection">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetLevelIndentation" cname="gtk_tree_view_get_level_indentation">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetModel" cname="gtk_tree_view_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="GetNColumns" cname="gtk_tree_view_get_n_columns">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetPathAtPos" cname="gtk_tree_view_get_path_at_pos">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="column" type="GtkTreeViewColumn*" pass_as="out"/>
          <parameter allow-none="1" name="cell_x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="cell_y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetReorderable" cname="gtk_tree_view_get_reorderable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRubberBanding" cname="gtk_tree_view_get_rubber_banding">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRulesHint" cname="gtk_tree_view_get_rules_hint">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSearchColumn" cname="gtk_tree_view_get_search_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSearchEntry" cname="gtk_tree_view_get_search_entry">
        <return-type type="GtkEntry*"/>
        <parameters/>
      </method>
      <method name="GetSelection" cname="gtk_tree_view_get_selection">
        <return-type type="GtkTreeSelection*"/>
        <parameters/>
      </method>
      <method name="GetShowExpanders" cname="gtk_tree_view_get_show_expanders">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTooltipColumn" cname="gtk_tree_view_get_tooltip_column">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTooltipContext" cname="gtk_tree_view_get_tooltip_context">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint*" owned="true" pass_as="ref"/>
          <parameter name="y" type="gint*" owned="true" pass_as="ref"/>
          <parameter name="keyboard_tip" type="gboolean"/>
          <parameter allow-none="1" name="model" type="GtkTreeModel*" pass_as="out"/>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="iter" type="GtkTreeIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetVadjustment" cname="gtk_tree_view_get_vadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetVisibleRange" cname="gtk_tree_view_get_visible_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="start_path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="end_path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetVisibleRect" cname="gtk_tree_view_get_visible_rect">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible_rect" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="InsertColumn" cname="gtk_tree_view_insert_column">
        <return-type type="gint"/>
        <parameters>
          <parameter name="column" type="GtkTreeViewColumn*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="InsertColumnWithDataFunc" cname="gtk_tree_view_insert_column_with_data_func">
        <return-type type="gint"/>
        <parameters>
          <parameter name="position" type="gint"/>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter closure="4" destroy="5" scope="notified" name="func" type="GtkTreeCellDataFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="dnotify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="IsBlankAtPos" cname="gtk_tree_view_is_blank_at_pos">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter allow-none="1" name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="column" type="GtkTreeViewColumn*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="cell_x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="cell_y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IsRubberBandingActive" cname="gtk_tree_view_is_rubber_banding_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="MapExpandedRows" cname="gtk_tree_view_map_expanded_rows">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="GtkTreeViewMappingFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="MoveColumnAfter" cname="gtk_tree_view_move_column_after">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="GtkTreeViewColumn*"/>
          <parameter allow-none="1" name="base_column" type="GtkTreeViewColumn*"/>
        </parameters>
      </method>
      <method name="RemoveColumn" cname="gtk_tree_view_remove_column">
        <return-type type="gint"/>
        <parameters>
          <parameter name="column" type="GtkTreeViewColumn*"/>
        </parameters>
      </method>
      <method name="ScrollToCell" cname="gtk_tree_view_scroll_to_cell">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="column" type="GtkTreeViewColumn*"/>
          <parameter name="use_align" type="gboolean"/>
          <parameter name="row_align" type="gfloat"/>
          <parameter name="col_align" type="gfloat"/>
        </parameters>
      </method>
      <method name="ScrollToPoint" cname="gtk_tree_view_scroll_to_point">
        <return-type type="void"/>
        <parameters>
          <parameter name="tree_x" type="gint"/>
          <parameter name="tree_y" type="gint"/>
        </parameters>
      </method>
      <method name="SetActivateOnSingleClick" cname="gtk_tree_view_set_activate_on_single_click">
        <return-type type="void"/>
        <parameters>
          <parameter name="single" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetColumnDragFunction" cname="gtk_tree_view_set_column_drag_function">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="func" type="GtkTreeViewColumnDropFunc"/>
          <parameter allow-none="1" name="user_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetCursor" cname="gtk_tree_view_set_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="focus_column" type="GtkTreeViewColumn*"/>
          <parameter name="start_editing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCursorOnCell" cname="gtk_tree_view_set_cursor_on_cell">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="focus_column" type="GtkTreeViewColumn*"/>
          <parameter allow-none="1" name="focus_cell" type="GtkCellRenderer*"/>
          <parameter name="start_editing" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDestroyCountFunc" cname="gtk_tree_view_set_destroy_count_func" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="func" type="GtkTreeDestroyCountFunc"/>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetDragDestRow" cname="gtk_tree_view_set_drag_dest_row">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pos" type="GtkTreeViewDropPosition"/>
        </parameters>
      </method>
      <method name="SetEnableSearch" cname="gtk_tree_view_set_enable_search">
        <return-type type="void"/>
        <parameters>
          <parameter name="enable_search" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetEnableTreeLines" cname="gtk_tree_view_set_enable_tree_lines">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetExpanderColumn" cname="gtk_tree_view_set_expander_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="GtkTreeViewColumn*"/>
        </parameters>
      </method>
      <method name="SetFixedHeightMode" cname="gtk_tree_view_set_fixed_height_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="enable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetGridLines" cname="gtk_tree_view_set_grid_lines">
        <return-type type="void"/>
        <parameters>
          <parameter name="grid_lines" type="GtkTreeViewGridLines"/>
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_tree_view_set_hadjustment" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetHeadersClickable" cname="gtk_tree_view_set_headers_clickable">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHeadersVisible" cname="gtk_tree_view_set_headers_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="headers_visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHoverExpand" cname="gtk_tree_view_set_hover_expand">
        <return-type type="void"/>
        <parameters>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHoverSelection" cname="gtk_tree_view_set_hover_selection">
        <return-type type="void"/>
        <parameters>
          <parameter name="hover" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLevelIndentation" cname="gtk_tree_view_set_level_indentation">
        <return-type type="void"/>
        <parameters>
          <parameter name="indentation" type="gint"/>
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_tree_view_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="model" type="GtkTreeModel*"/>
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_tree_view_set_reorderable">
        <return-type type="void"/>
        <parameters>
          <parameter name="reorderable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRowSeparatorFunc" cname="gtk_tree_view_set_row_separator_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="func" type="GtkTreeViewRowSeparatorFunc"/>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetRubberBanding" cname="gtk_tree_view_set_rubber_banding">
        <return-type type="void"/>
        <parameters>
          <parameter name="enable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRulesHint" cname="gtk_tree_view_set_rules_hint">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSearchColumn" cname="gtk_tree_view_set_search_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="SetSearchEntry" cname="gtk_tree_view_set_search_entry">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="entry" type="GtkEntry*"/>
        </parameters>
      </method>
      <method name="SetSearchEqualFunc" cname="gtk_tree_view_set_search_equal_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="search_equal_func" type="GtkTreeViewSearchEqualFunc"/>
          <parameter allow-none="1" name="search_user_data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="search_destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetSearchPositionFunc" cname="gtk_tree_view_set_search_position_func">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" allow-none="1" name="func" type="GtkTreeViewSearchPositionFunc"/>
          <parameter allow-none="1" name="data" type="gpointer"/>
          <parameter scope="async" allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetShowExpanders" cname="gtk_tree_view_set_show_expanders">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTooltipCell" cname="gtk_tree_view_set_tooltip_cell">
        <return-type type="void"/>
        <parameters>
          <parameter name="tooltip" type="GtkTooltip*"/>
          <parameter allow-none="1" name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="column" type="GtkTreeViewColumn*"/>
          <parameter allow-none="1" name="cell" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="SetTooltipColumn" cname="gtk_tree_view_set_tooltip_column">
        <return-type type="void"/>
        <parameters>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="SetTooltipRow" cname="gtk_tree_view_set_tooltip_row">
        <return-type type="void"/>
        <parameters>
          <parameter name="tooltip" type="GtkTooltip*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_tree_view_set_vadjustment" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="UnsetRowsDragDest" cname="gtk_tree_view_unset_rows_drag_dest">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnsetRowsDragSource" cname="gtk_tree_view_unset_rows_drag_source">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="ActivateOnSingleClick" cname="activate-on-single-click" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EnableGridLines" cname="enable-grid-lines" type="GtkTreeViewGridLines" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EnableSearch" cname="enable-search" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="EnableTreeLines" cname="enable-tree-lines" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ExpanderColumn" cname="expander-column" type="GtkTreeViewColumn*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FixedHeightMode" cname="fixed-height-mode" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HeadersClickable" cname="headers-clickable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HeadersVisible" cname="headers-visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HoverExpand" cname="hover-expand" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HoverSelection" cname="hover-selection" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="LevelIndentation" cname="level-indentation" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Model" cname="model" type="GtkTreeModel*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Reorderable" cname="reorderable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RubberBanding" cname="rubber-banding" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="RulesHint" cname="rules-hint" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SearchColumn" cname="search-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ShowExpanders" cname="show-expanders" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TooltipColumn" cname="tooltip-column" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkContainer*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkTreeViewPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ColumnsChanged" cname="columns-changed" when="last" field_name="columns_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="CursorChanged" cname="cursor-changed" when="last" field_name="cursor_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ExpandCollapseCursorRow" cname="expand-collapse-cursor-row" when="last" field_name="expand_collapse_cursor_row">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gboolean"/>
          <parameter name="p0" type="gboolean"/>
          <parameter name="p1" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="MoveCursor" cname="move-cursor" when="last" field_name="move_cursor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GtkMovementStep"/>
          <parameter name="p0" type="gint"/>
        </parameters>
      </signal>
      <signal name="RowActivated" cname="row-activated" when="last" field_name="row_activated">
        <return-type type="void"/>
        <parameters>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="column" type="GtkTreeViewColumn*"/>
        </parameters>
      </signal>
      <signal name="RowCollapsed" cname="row-collapsed" when="last" field_name="row_collapsed">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="RowExpanded" cname="row-expanded" when="last" field_name="row_expanded">
        <return-type type="void"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="SelectAll" cname="select-all" when="last" field_name="select_all">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="SelectCursorParent" cname="select-cursor-parent" when="last" field_name="select_cursor_parent">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="SelectCursorRow" cname="select-cursor-row" when="last" field_name="select_cursor_row">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="StartInteractiveSearch" cname="start-interactive-search" when="last" field_name="start_interactive_search">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="TestCollapseRow" cname="test-collapse-row" when="last" field_name="test_collapse_row">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="TestExpandRow" cname="test-expand-row" when="last" field_name="test_expand_row">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="ToggleCursorRow" cname="toggle-cursor-row" when="last" field_name="toggle_cursor_row">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="UnselectAll" cname="unselect-all" when="last" field_name="unselect_all">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
    </object>
    <object name="TreeViewColumn" cname="GtkTreeViewColumn" abstract="false" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <implements>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkCellLayout"/>
      </implements>
      <class_struct cname="GtkTreeViewColumnClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GInitiallyUnownedClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="clicked"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_tree_view_column_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tree_view_column_new" disable_void_ctor=""/>
      <constructor cname="gtk_tree_view_column_new_with_area">
        <parameters>
          <parameter name="area" type="GtkCellArea*"/>
        </parameters>
      </constructor>
      <method name="AddAttribute" cname="gtk_tree_view_column_add_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell_renderer" type="GtkCellRenderer*"/>
          <parameter name="attribute" type="const-gchar*"/>
          <parameter name="column" type="gint"/>
        </parameters>
      </method>
      <method name="CellGetPosition" cname="gtk_tree_view_column_cell_get_position">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cell_renderer" type="GtkCellRenderer*"/>
          <parameter allow-none="1" name="x_offset" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="CellGetSize" cname="gtk_tree_view_column_cell_get_size">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="cell_area" type="cairo_rectangle_int_t"/>
          <parameter allow-none="1" name="x_offset" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y_offset" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="CellIsVisible" cname="gtk_tree_view_column_cell_is_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="CellSetCellData" cname="gtk_tree_view_column_cell_set_cell_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="tree_model" type="GtkTreeModel*"/>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="is_expander" type="gboolean"/>
          <parameter name="is_expanded" type="gboolean"/>
        </parameters>
      </method>
      <method name="Clear" cname="gtk_tree_view_column_clear">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ClearAttributes" cname="gtk_tree_view_column_clear_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell_renderer" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="FocusCell" cname="gtk_tree_view_column_focus_cell">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
        </parameters>
      </method>
      <method name="GetAlignment" cname="gtk_tree_view_column_get_alignment">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetButton" cname="gtk_tree_view_column_get_button">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetClickable" cname="gtk_tree_view_column_get_clickable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetExpand" cname="gtk_tree_view_column_get_expand">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetFixedWidth" cname="gtk_tree_view_column_get_fixed_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMaxWidth" cname="gtk_tree_view_column_get_max_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMinWidth" cname="gtk_tree_view_column_get_min_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetReorderable" cname="gtk_tree_view_column_get_reorderable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetResizable" cname="gtk_tree_view_column_get_resizable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSizing" cname="gtk_tree_view_column_get_sizing">
        <return-type type="GtkTreeViewColumnSizing"/>
        <parameters/>
      </method>
      <method name="GetSortColumnId" cname="gtk_tree_view_column_get_sort_column_id">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSortIndicator" cname="gtk_tree_view_column_get_sort_indicator">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSortOrder" cname="gtk_tree_view_column_get_sort_order">
        <return-type type="GtkSortType"/>
        <parameters/>
      </method>
      <method name="GetSpacing" cname="gtk_tree_view_column_get_spacing">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetTitle" cname="gtk_tree_view_column_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTreeView" cname="gtk_tree_view_column_get_tree_view">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetVisible" cname="gtk_tree_view_column_get_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetWidget" cname="gtk_tree_view_column_get_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="gtk_tree_view_column_get_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetXOffset" cname="gtk_tree_view_column_get_x_offset">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="PackEnd" cname="gtk_tree_view_column_pack_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_tree_view_column_pack_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell" type="GtkCellRenderer*"/>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="QueueResize" cname="gtk_tree_view_column_queue_resize">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetAlignment" cname="gtk_tree_view_column_set_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="xalign" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetCellDataFunc" cname="gtk_tree_view_column_set_cell_data_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="cell_renderer" type="GtkCellRenderer*"/>
          <parameter closure="2" destroy="3" scope="notified" allow-none="1" name="func" type="GtkTreeCellDataFunc"/>
          <parameter name="func_data" type="gpointer"/>
          <parameter scope="async" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="SetClickable" cname="gtk_tree_view_column_set_clickable">
        <return-type type="void"/>
        <parameters>
          <parameter name="clickable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetExpand" cname="gtk_tree_view_column_set_expand">
        <return-type type="void"/>
        <parameters>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFixedWidth" cname="gtk_tree_view_column_set_fixed_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="fixed_width" type="gint"/>
        </parameters>
      </method>
      <method name="SetMaxWidth" cname="gtk_tree_view_column_set_max_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="max_width" type="gint"/>
        </parameters>
      </method>
      <method name="SetMinWidth" cname="gtk_tree_view_column_set_min_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="min_width" type="gint"/>
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_tree_view_column_set_reorderable">
        <return-type type="void"/>
        <parameters>
          <parameter name="reorderable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetResizable" cname="gtk_tree_view_column_set_resizable">
        <return-type type="void"/>
        <parameters>
          <parameter name="resizable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSizing" cname="gtk_tree_view_column_set_sizing">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkTreeViewColumnSizing"/>
        </parameters>
      </method>
      <method name="SetSortColumnId" cname="gtk_tree_view_column_set_sort_column_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="sort_column_id" type="gint"/>
        </parameters>
      </method>
      <method name="SetSortIndicator" cname="gtk_tree_view_column_set_sort_indicator">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSortOrder" cname="gtk_tree_view_column_set_sort_order">
        <return-type type="void"/>
        <parameters>
          <parameter name="order" type="GtkSortType"/>
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_tree_view_column_set_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_tree_view_column_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_tree_view_column_set_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetWidget" cname="gtk_tree_view_column_set_widget">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <property name="Alignment" cname="alignment" type="gfloat" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CellArea" cname="cell-area" type="GtkCellArea*" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="Clickable" cname="clickable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Expand" cname="expand" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FixedWidth" cname="fixed-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MaxWidth" cname="max-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MinWidth" cname="min-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Reorderable" cname="reorderable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Resizable" cname="resizable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Sizing" cname="sizing" type="GtkTreeViewColumnSizing" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SortColumnId" cname="sort-column-id" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SortIndicator" cname="sort-indicator" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SortOrder" cname="sort-order" type="GtkSortType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Spacing" cname="spacing" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Widget" cname="widget" type="GtkWidget*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Width" cname="width" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="XOffset" cname="x-offset" type="gint" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GInitiallyUnowned*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkTreeViewColumnPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="Clicked" cname="clicked" when="last" field_name="clicked">
        <return-type type="void"/>
        <parameters/>
      </signal>
    </object>
    <object name="UIManager" cname="GtkUIManager" abstract="false" opaque="false" hidden="false" parent="GObject">
      <implements>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkUIManagerClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="add_widget"/>
        <method signal_vm="actions_changed"/>
        <method signal_vm="connect_proxy"/>
        <method signal_vm="disconnect_proxy"/>
        <method signal_vm="pre_activate"/>
        <method signal_vm="post_activate"/>
        <method vm="get_widget"/>
        <method vm="get_action"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_ui_manager_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_ui_manager_new" disable_void_ctor=""/>
      <virtual_method name="GetAction" cname="get_action">
        <return-type type="GtkAction*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetWidget" cname="get_widget">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </virtual_method>
      <method name="AddUi" cname="gtk_ui_manager_add_ui">
        <return-type type="void"/>
        <parameters>
          <parameter name="merge_id" type="guint"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="action" type="const-gchar*"/>
          <parameter name="type" type="GtkUIManagerItemType"/>
          <parameter name="top" type="gboolean"/>
        </parameters>
      </method>
      <method name="AddUiFromFile" cname="gtk_ui_manager_add_ui_from_file">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddUiFromResource" cname="gtk_ui_manager_add_ui_from_resource">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="resource_path" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="AddUiFromString" cname="gtk_ui_manager_add_ui_from_string">
        <return-type type="guint"/>
        <parameters throws="1">
          <parameter name="buffer" type="const-gchar*"/>
          <parameter name="length" type="gssize"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="EnsureUpdate" cname="gtk_ui_manager_ensure_update">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAccelGroup" cname="gtk_ui_manager_get_accel_group">
        <return-type type="GtkAccelGroup*"/>
        <parameters/>
      </method>
      <method name="GetAction" cname="gtk_ui_manager_get_action">
        <return-type type="GtkAction*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetActionGroups" cname="gtk_ui_manager_get_action_groups">
        <return-type type="GList*" element_type="GtkActionGroup*"/>
        <parameters/>
      </method>
      <method name="GetAddTearoffs" cname="gtk_ui_manager_get_add_tearoffs" deprecated="true">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetToplevels" cname="gtk_ui_manager_get_toplevels">
        <return-type type="GSList*" element_type="GtkWidget*" elements_owned="true"/>
        <parameters>
          <parameter name="types" type="GtkUIManagerItemType"/>
        </parameters>
      </method>
      <method name="GetUi" cname="gtk_ui_manager_get_ui">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetWidget" cname="gtk_ui_manager_get_widget">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="InsertActionGroup" cname="gtk_ui_manager_insert_action_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="action_group" type="GtkActionGroup*"/>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="NewMergeId" cname="gtk_ui_manager_new_merge_id">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="RemoveActionGroup" cname="gtk_ui_manager_remove_action_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="action_group" type="GtkActionGroup*"/>
        </parameters>
      </method>
      <method name="RemoveUi" cname="gtk_ui_manager_remove_ui">
        <return-type type="void"/>
        <parameters>
          <parameter name="merge_id" type="guint"/>
        </parameters>
      </method>
      <method name="SetAddTearoffs" cname="gtk_ui_manager_set_add_tearoffs" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="add_tearoffs" type="gboolean"/>
        </parameters>
      </method>
      <property name="AddTearoffs" cname="add-tearoffs" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Ui" cname="ui" type="gchar*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GObject*"/>
      <field cname="private_data" access="private" writeable="false" readable="false" name="PrivateData" type="GtkUIManagerPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActionsChanged" cname="actions-changed" when="first" field_name="actions_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="AddWidget" cname="add-widget" when="first" field_name="add_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="ConnectProxy" cname="connect-proxy" when="first" field_name="connect_proxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
          <parameter name="proxy" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="DisconnectProxy" cname="disconnect-proxy" when="first" field_name="disconnect_proxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
          <parameter name="proxy" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="PostActivate" cname="post-activate" when="first" field_name="post_activate">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </signal>
      <signal name="PreActivate" cname="pre-activate" when="first" field_name="pre_activate">
        <return-type type="void"/>
        <parameters>
          <parameter name="action" type="GtkAction*"/>
        </parameters>
      </signal>
    </object>
    <object name="VBox" cname="GtkVBox" abstract="false" opaque="false" hidden="false" parent="GtkBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkVBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_vbox_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_vbox_new">
        <parameters>
          <parameter name="homogeneous" type="gboolean"/>
          <parameter name="spacing" type="gint"/>
        </parameters>
      </constructor>
      <field cname="box" access="public" writeable="false" readable="true" name="Box" type="GtkBox*"/>
    </object>
    <object name="VButtonBox" cname="GtkVButtonBox" abstract="false" opaque="false" hidden="false" parent="GtkButtonBox">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkVButtonBoxClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkButtonBoxClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_vbutton_box_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_vbutton_box_new" disable_void_ctor=""/>
      <field cname="button_box" access="public" writeable="false" readable="true" name="ButtonBox" type="GtkButtonBox*"/>
    </object>
    <object name="VPaned" cname="GtkVPaned" abstract="false" opaque="false" hidden="false" parent="GtkPaned">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkVPanedClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkPanedClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_vpaned_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_vpaned_new" disable_void_ctor=""/>
      <field cname="paned" access="public" writeable="false" readable="true" name="Paned" type="GtkPaned*"/>
    </object>
    <object name="VScale" cname="GtkVScale" abstract="false" opaque="false" hidden="false" parent="GtkScale">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkVScaleClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkScaleClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_vscale_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_vscale_new">
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_vscale_new_with_range">
        <parameters>
          <parameter name="min" type="gdouble"/>
          <parameter name="max" type="gdouble"/>
          <parameter name="step" type="gdouble"/>
        </parameters>
      </constructor>
      <field cname="scale" access="public" writeable="false" readable="true" name="Scale" type="GtkScale*"/>
    </object>
    <object name="VScrollbar" cname="GtkVScrollbar" abstract="false" opaque="false" hidden="false" parent="GtkScrollbar">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkVScrollbarClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkScrollbarClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_vscrollbar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_vscrollbar_new">
        <parameters>
          <parameter name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <field cname="scrollbar" access="public" writeable="false" readable="true" name="Scrollbar" type="GtkScrollbar*"/>
    </object>
    <object name="VSeparator" cname="GtkVSeparator" abstract="false" opaque="false" hidden="false" parent="GtkSeparator">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkVSeparatorClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkSeparatorClass">
          <warning>missing glib:type-name</warning>
        </field>
      </class_struct>
      <method name="GetType" cname="gtk_vseparator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_vseparator_new" disable_void_ctor=""/>
      <field cname="separator" access="public" writeable="false" readable="true" name="Separator" type="GtkSeparator*"/>
    </object>
    <object name="Viewport" cname="GtkViewport" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkScrollable"/>
      </implements>
      <class_struct cname="GtkViewportClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_viewport_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_viewport_new">
        <parameters>
          <parameter name="hadjustment" type="GtkAdjustment*"/>
          <parameter name="vadjustment" type="GtkAdjustment*"/>
        </parameters>
      </constructor>
      <method name="GetBinWindow" cname="gtk_viewport_get_bin_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GetHadjustment" cname="gtk_viewport_get_hadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetShadowType" cname="gtk_viewport_get_shadow_type">
        <return-type type="GtkShadowType"/>
        <parameters/>
      </method>
      <method name="GetVadjustment" cname="gtk_viewport_get_vadjustment" deprecated="true">
        <return-type type="GtkAdjustment*"/>
        <parameters/>
      </method>
      <method name="GetViewWindow" cname="gtk_viewport_get_view_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="SetHadjustment" cname="gtk_viewport_set_hadjustment" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_viewport_set_shadow_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GtkShadowType"/>
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_viewport_set_vadjustment" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="adjustment" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <property name="ShadowType" cname="shadow-type" type="GtkShadowType" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkViewportPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <object name="VolumeButton" cname="GtkVolumeButton" abstract="false" opaque="false" hidden="false" parent="GtkScaleButton">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkActionable"/>
        <interface cname="GtkActivatable"/>
        <interface cname="GtkBuildable"/>
        <interface cname="GtkOrientable"/>
      </implements>
      <class_struct cname="GtkVolumeButtonClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkScaleButtonClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_volume_button_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_volume_button_new" disable_void_ctor=""/>
      <property name="UseSymbolic" cname="use-symbolic" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="parent" access="public" writeable="false" readable="true" name="Parent" type="GtkScaleButton*"/>
    </object>
    <object name="Widget" cname="GtkWidget" abstract="true" opaque="false" hidden="false" parent="GInitiallyUnowned">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkWidgetClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GInitiallyUnownedClass">
          <warning>missing glib:type-name</warning>
        </field>
        <field cname="activate_signal" access="public" writeable="false" readable="true" name="ActivateSignal" type="guint"/>
        <method vm="dispatch_child_properties_changed"/>
        <method signal_vm="destroy"/>
        <method signal_vm="show"/>
        <method vm="show_all"/>
        <method signal_vm="hide"/>
        <method signal_vm="map"/>
        <method signal_vm="unmap"/>
        <method signal_vm="realize"/>
        <method signal_vm="unrealize"/>
        <method signal_vm="size_allocate"/>
        <method signal_vm="state_changed"/>
        <method signal_vm="state_flags_changed"/>
        <method signal_vm="parent_set"/>
        <method signal_vm="hierarchy_changed"/>
        <method signal_vm="style_set"/>
        <method signal_vm="direction_changed"/>
        <method signal_vm="grab_notify"/>
        <method signal_vm="child_notify"/>
        <method signal_vm="draw"/>
        <method vm="get_request_mode"/>
        <method vm="get_preferred_height"/>
        <method vm="get_preferred_width_for_height"/>
        <method vm="get_preferred_width"/>
        <method vm="get_preferred_height_for_width"/>
        <method signal_vm="mnemonic_activate"/>
        <method signal_vm="grab_focus"/>
        <method signal_vm="focus"/>
        <method signal_vm="move_focus"/>
        <method signal_vm="keynav_failed"/>
        <method signal_vm="event"/>
        <method signal_vm="button_press_event"/>
        <method signal_vm="button_release_event"/>
        <method signal_vm="scroll_event"/>
        <method signal_vm="motion_notify_event"/>
        <method signal_vm="delete_event"/>
        <method signal_vm="destroy_event"/>
        <method signal_vm="key_press_event"/>
        <method signal_vm="key_release_event"/>
        <method signal_vm="enter_notify_event"/>
        <method signal_vm="leave_notify_event"/>
        <method signal_vm="configure_event"/>
        <method signal_vm="focus_in_event"/>
        <method signal_vm="focus_out_event"/>
        <method signal_vm="map_event"/>
        <method signal_vm="unmap_event"/>
        <method signal_vm="property_notify_event"/>
        <method signal_vm="selection_clear_event"/>
        <method signal_vm="selection_request_event"/>
        <method signal_vm="selection_notify_event"/>
        <method signal_vm="proximity_in_event"/>
        <method signal_vm="proximity_out_event"/>
        <method signal_vm="visibility_notify_event"/>
        <method signal_vm="window_state_event"/>
        <method signal_vm="damage_event"/>
        <method signal_vm="grab_broken_event"/>
        <method signal_vm="selection_get"/>
        <method signal_vm="selection_received"/>
        <method signal_vm="drag_begin"/>
        <method signal_vm="drag_end"/>
        <method signal_vm="drag_data_get"/>
        <method signal_vm="drag_data_delete"/>
        <method signal_vm="drag_leave"/>
        <method signal_vm="drag_motion"/>
        <method signal_vm="drag_drop"/>
        <method signal_vm="drag_data_received"/>
        <method signal_vm="drag_failed"/>
        <method signal_vm="popup_menu"/>
        <method signal_vm="show_help"/>
        <method vm="get_accessible"/>
        <method signal_vm="screen_changed"/>
        <method signal_vm="can_activate_accel"/>
        <method signal_vm="composited_changed"/>
        <method signal_vm="query_tooltip"/>
        <method vm="compute_expand"/>
        <method vm="adjust_size_request"/>
        <method vm="adjust_size_allocation"/>
        <method signal_vm="style_updated"/>
        <method signal_vm="touch_event"/>
        <field cname="priv" access="private" writeable="false" readable="false" name="Priv" type="GtkWidgetClassPrivate*">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
        <method vm="_gtk_reserved5"/>
        <method vm="_gtk_reserved6"/>
        <method vm="_gtk_reserved7"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved5" cname="_gtk_reserved5" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved6" cname="_gtk_reserved6" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved7" cname="_gtk_reserved7" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="FindStyleProperty" cname="gtk_widget_class_find_style_property" shared="true">
        <return-type type="GParamSpec*"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="InstallStyleProperty" cname="gtk_widget_class_install_style_property" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
        </parameters>
      </method>
      <method name="ListStyleProperties" cname="gtk_widget_class_list_style_properties" shared="true">
        <return-type type="GParamSpec**" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="n_properties" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SetAccessibleRole" cname="gtk_widget_class_set_accessible_role" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="role" type="AtkRole"/>
        </parameters>
      </method>
      <method name="SetAccessibleType" cname="gtk_widget_class_set_accessible_type" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="GetType" cname="gtk_widget_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetDefaultDirection" cname="gtk_widget_get_default_direction" shared="true">
        <return-type type="GtkTextDirection"/>
      </method>
      <method name="GetDefaultStyle" cname="gtk_widget_get_default_style" shared="true" deprecated="true">
        <return-type type="GtkStyle*"/>
      </method>
      <method name="PopCompositeChild" cname="gtk_widget_pop_composite_child" shared="true">
        <return-type type="void"/>
      </method>
      <method name="PushCompositeChild" cname="gtk_widget_push_composite_child" shared="true">
        <return-type type="void"/>
      </method>
      <method name="SetDefaultDirection" cname="gtk_widget_set_default_direction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="dir" type="GtkTextDirection"/>
        </parameters>
      </method>
      <virtual_method name="AdjustSizeAllocation" cname="adjust_size_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="minimum_size" type="gint"/>
          <parameter name="natural_size" type="gint"/>
          <parameter name="allocated_pos" type="gint"/>
          <parameter name="allocated_size" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AdjustSizeRequest" cname="adjust_size_request">
        <return-type type="void"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
          <parameter name="minimum_size" type="gint"/>
          <parameter name="natural_size" type="gint"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ComputeExpand" cname="compute_expand">
        <return-type type="void"/>
        <parameters>
          <parameter name="hexpand_p" type="gboolean"/>
          <parameter name="vexpand_p" type="gboolean"/>
        </parameters>
      </virtual_method>
      <virtual_method name="DispatchChildPropertiesChanged" cname="dispatch_child_properties_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_pspecs" type="guint"/>
          <parameter name="pspecs" type="GParamSpec*"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetAccessible" cname="get_accessible">
        <return-type type="AtkObject*"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="GetPreferredHeight" cname="get_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredHeightForWidth" cname="get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidth" cname="get_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreferredWidthForHeight" cname="get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetRequestMode" cname="get_request_mode">
        <return-type type="GtkSizeRequestMode"/>
        <parameters/>
      </virtual_method>
      <virtual_method name="ShowAll" cname="show_all">
        <return-type type="void"/>
        <parameters/>
      </virtual_method>
      <method name="Activate" cname="gtk_widget_activate">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="AddAccelerator" cname="gtk_widget_add_accelerator">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_signal" type="const-gchar*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
          <parameter name="accel_flags" type="GtkAccelFlags"/>
        </parameters>
      </method>
      <method name="AddDeviceEvents" cname="gtk_widget_add_device_events">
        <return-type type="void"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
          <parameter name="events" type="GdkEventMask"/>
        </parameters>
      </method>
      <method name="AddEvents" cname="gtk_widget_add_events">
        <return-type type="void"/>
        <parameters>
          <parameter name="events" type="gint"/>
        </parameters>
      </method>
      <method name="AddMnemonicLabel" cname="gtk_widget_add_mnemonic_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="AddTickCallback" cname="gtk_widget_add_tick_callback">
        <return-type type="guint"/>
        <parameters>
          <parameter closure="1" destroy="2" scope="notified" name="callback" type="GtkTickCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="ChildFocus" cname="gtk_widget_child_focus">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GtkDirectionType"/>
        </parameters>
      </method>
      <method name="ClassPath" cname="gtk_widget_class_path" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path_length" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="path" type="gchar*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="path_reversed" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ComputeExpand" cname="gtk_widget_compute_expand">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </method>
      <method name="CreatePangoContext" cname="gtk_widget_create_pango_context">
        <return-type type="PangoContext*" owned="true"/>
        <parameters/>
      </method>
      <method name="CreatePangoLayout" cname="gtk_widget_create_pango_layout">
        <return-type type="PangoLayout*" owned="true"/>
        <parameters>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Destroyed" cname="gtk_widget_destroyed">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget_pointer" type="GtkWidget*" pass_as="ref"/>
        </parameters>
      </method>
      <method name="DeviceIsShadowed" cname="gtk_widget_device_is_shadowed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
        </parameters>
      </method>
      <method name="DragCheckThreshold" cname="gtk_drag_check_threshold">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start_x" type="gint"/>
          <parameter name="start_y" type="gint"/>
          <parameter name="current_x" type="gint"/>
          <parameter name="current_y" type="gint"/>
        </parameters>
      </method>
      <method name="DragDestAddImageTargets" cname="gtk_drag_dest_add_image_targets">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragDestAddTextTargets" cname="gtk_drag_dest_add_text_targets">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragDestAddUriTargets" cname="gtk_drag_dest_add_uri_targets">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragDestFindTarget" cname="gtk_drag_dest_find_target">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter allow-none="1" name="target_list" type="GtkTargetList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DragDestGetTargetList" cname="gtk_drag_dest_get_target_list">
        <return-type type="GtkTargetList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="DragDestGetTrackMotion" cname="gtk_drag_dest_get_track_motion">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="DragDestSet" cname="gtk_drag_dest_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GtkDestDefaults"/>
          <parameter allow-none="1" name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="2"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="DragDestSetProxy" cname="gtk_drag_dest_set_proxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy_window" type="GdkWindow*"/>
          <parameter name="protocol" type="GdkDragProtocol"/>
          <parameter name="use_coordinates" type="gboolean"/>
        </parameters>
      </method>
      <method name="DragDestSetTargetList" cname="gtk_drag_dest_set_target_list">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="target_list" type="GtkTargetList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DragDestSetTrackMotion" cname="gtk_drag_dest_set_track_motion">
        <return-type type="void"/>
        <parameters>
          <parameter name="track_motion" type="gboolean"/>
        </parameters>
      </method>
      <method name="DragDestUnset" cname="gtk_drag_dest_unset">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragGetData" cname="gtk_drag_get_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="time_" type="guint32"/>
        </parameters>
      </method>
      <method name="DragHighlight" cname="gtk_drag_highlight">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragSourceAddImageTargets" cname="gtk_drag_source_add_image_targets">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragSourceAddTextTargets" cname="gtk_drag_source_add_text_targets">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragSourceAddUriTargets" cname="gtk_drag_source_add_uri_targets">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragSourceGetTargetList" cname="gtk_drag_source_get_target_list">
        <return-type type="GtkTargetList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="DragSourceSet" cname="gtk_drag_source_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="start_button_mask" type="GdkModifierType"/>
          <parameter allow-none="1" name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="2"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="actions" type="GdkDragAction"/>
        </parameters>
      </method>
      <method name="DragSourceSetIconGicon" cname="gtk_drag_source_set_icon_gicon">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon" type="GIcon*"/>
        </parameters>
      </method>
      <method name="DragSourceSetIconName" cname="gtk_drag_source_set_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DragSourceSetIconPixbuf" cname="gtk_drag_source_set_icon_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="DragSourceSetIconStock" cname="gtk_drag_source_set_icon_stock">
        <return-type type="void"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="DragSourceSetTargetList" cname="gtk_drag_source_set_target_list">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="target_list" type="GtkTargetList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DragSourceUnset" cname="gtk_drag_source_unset">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="DragUnhighlight" cname="gtk_drag_unhighlight">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="EnsureStyle" cname="gtk_widget_ensure_style" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ErrorBell" cname="gtk_widget_error_bell">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="FreezeChildNotify" cname="gtk_widget_freeze_child_notify">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAccessible" cname="gtk_widget_get_accessible">
        <return-type type="AtkObject*"/>
        <parameters/>
      </method>
      <method name="GetAllocatedHeight" cname="gtk_widget_get_allocated_height">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetAllocatedWidth" cname="gtk_widget_get_allocated_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetAllocation" cname="gtk_widget_get_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter name="allocation" type="GdkRectangle" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetAncestor" cname="gtk_widget_get_ancestor">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="widget_type" type="GType"/>
        </parameters>
      </method>
      <method name="GetAppPaintable" cname="gtk_widget_get_app_paintable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetCanDefault" cname="gtk_widget_get_can_default">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetCanFocus" cname="gtk_widget_get_can_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetChildRequisition" cname="gtk_widget_get_child_requisition" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="requisition" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetChildVisible" cname="gtk_widget_get_child_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetClipboard" cname="gtk_widget_get_clipboard">
        <return-type type="GtkClipboard*"/>
        <parameters>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetCompositeName" cname="gtk_widget_get_composite_name">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetDeviceEnabled" cname="gtk_widget_get_device_enabled">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
        </parameters>
      </method>
      <method name="GetDeviceEvents" cname="gtk_widget_get_device_events">
        <return-type type="GdkEventMask"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
        </parameters>
      </method>
      <method name="GetDirection" cname="gtk_widget_get_direction">
        <return-type type="GtkTextDirection"/>
        <parameters/>
      </method>
      <method name="GetDisplay" cname="gtk_widget_get_display">
        <return-type type="GdkDisplay*"/>
        <parameters/>
      </method>
      <method name="GetDoubleBuffered" cname="gtk_widget_get_double_buffered">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetEvents" cname="gtk_widget_get_events">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetFrameClock" cname="gtk_widget_get_frame_clock">
        <return-type type="GdkFrameClock*"/>
        <parameters/>
      </method>
      <method name="GetHalign" cname="gtk_widget_get_halign">
        <return-type type="GtkAlign"/>
        <parameters/>
      </method>
      <method name="GetHasTooltip" cname="gtk_widget_get_has_tooltip">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHasWindow" cname="gtk_widget_get_has_window">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHexpand" cname="gtk_widget_get_hexpand">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHexpandSet" cname="gtk_widget_get_hexpand_set">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetMapped" cname="gtk_widget_get_mapped">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetMarginBottom" cname="gtk_widget_get_margin_bottom">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMarginLeft" cname="gtk_widget_get_margin_left">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMarginRight" cname="gtk_widget_get_margin_right">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMarginTop" cname="gtk_widget_get_margin_top">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetModifierMask" cname="gtk_widget_get_modifier_mask">
        <return-type type="GdkModifierType"/>
        <parameters>
          <parameter name="intent" type="GdkModifierIntent"/>
        </parameters>
      </method>
      <method name="GetModifierStyle" cname="gtk_widget_get_modifier_style" deprecated="true">
        <return-type type="GtkRcStyle*"/>
        <parameters/>
      </method>
      <method name="GetName" cname="gtk_widget_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetNoShowAll" cname="gtk_widget_get_no_show_all">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetOpacity" cname="gtk_widget_get_opacity">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetPangoContext" cname="gtk_widget_get_pango_context">
        <return-type type="PangoContext*"/>
        <parameters/>
      </method>
      <method name="GetParent" cname="gtk_widget_get_parent">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetParentWindow" cname="gtk_widget_get_parent_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GetPath" cname="gtk_widget_get_path">
        <return-type type="GtkWidgetPath*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetPointer" cname="gtk_widget_get_pointer" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredHeight" cname="gtk_widget_get_preferred_height">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredHeightForWidth" cname="gtk_widget_get_preferred_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter allow-none="1" name="minimum_height" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredSize" cname="gtk_widget_get_preferred_size">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="minimum_size" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="natural_size" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetPreferredWidth" cname="gtk_widget_get_preferred_width">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetPreferredWidthForHeight" cname="gtk_widget_get_preferred_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="height" type="gint"/>
          <parameter allow-none="1" name="minimum_width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="natural_width" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetRealized" cname="gtk_widget_get_realized">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetReceivesDefault" cname="gtk_widget_get_receives_default">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetRequestMode" cname="gtk_widget_get_request_mode">
        <return-type type="GtkSizeRequestMode"/>
        <parameters/>
      </method>
      <method name="GetRequisition" cname="gtk_widget_get_requisition" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="requisition" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetRootWindow" cname="gtk_widget_get_root_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GetScreen" cname="gtk_widget_get_screen">
        <return-type type="GdkScreen*"/>
        <parameters/>
      </method>
      <method name="GetSensitive" cname="gtk_widget_get_sensitive">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSettings" cname="gtk_widget_get_settings">
        <return-type type="GtkSettings*"/>
        <parameters/>
      </method>
      <method name="GetSizeRequest" cname="gtk_widget_get_size_request">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetState" cname="gtk_widget_get_state" deprecated="true">
        <return-type type="GtkStateType"/>
        <parameters/>
      </method>
      <method name="GetStateFlags" cname="gtk_widget_get_state_flags">
        <return-type type="GtkStateFlags"/>
        <parameters/>
      </method>
      <method name="GetStyle" cname="gtk_widget_get_style" deprecated="true">
        <return-type type="GtkStyle*"/>
        <parameters/>
      </method>
      <method name="GetStyleContext" cname="gtk_widget_get_style_context">
        <return-type type="GtkStyleContext*"/>
        <parameters/>
      </method>
      <method name="GetSupportMultidevice" cname="gtk_widget_get_support_multidevice">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTooltipMarkup" cname="gtk_widget_get_tooltip_markup">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetTooltipText" cname="gtk_widget_get_tooltip_text">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetTooltipWindow" cname="gtk_widget_get_tooltip_window">
        <return-type type="GtkWindow*"/>
        <parameters/>
      </method>
      <method name="GetToplevel" cname="gtk_widget_get_toplevel">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetValign" cname="gtk_widget_get_valign">
        <return-type type="GtkAlign"/>
        <parameters/>
      </method>
      <method name="GetVexpand" cname="gtk_widget_get_vexpand">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVexpandSet" cname="gtk_widget_get_vexpand_set">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisible" cname="gtk_widget_get_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetVisual" cname="gtk_widget_get_visual">
        <return-type type="GdkVisual*"/>
        <parameters/>
      </method>
      <method name="GetWindow" cname="gtk_widget_get_window">
        <return-type type="GdkWindow*"/>
        <parameters/>
      </method>
      <method name="GrabAdd" cname="gtk_grab_add">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GrabDefault" cname="gtk_widget_grab_default">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GrabRemove" cname="gtk_grab_remove">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="HasDefault" cname="gtk_widget_has_default">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasFocus" cname="gtk_widget_has_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasGrab" cname="gtk_widget_has_grab">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasRcStyle" cname="gtk_widget_has_rc_style" deprecated="true">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasScreen" cname="gtk_widget_has_screen">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasVisibleFocus" cname="gtk_widget_has_visible_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HideOnDelete" cname="gtk_widget_hide_on_delete">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="InDestruction" cname="gtk_widget_in_destruction">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="InputShapeCombineRegion" cname="gtk_widget_input_shape_combine_region">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="region" type="cairo.Region"/>
        </parameters>
      </method>
      <method name="InsertActionGroup" cname="gtk_widget_insert_action_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="group" type="GActionGroup*"/>
        </parameters>
      </method>
      <method name="Intersect" cname="gtk_widget_intersect">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="area" type="cairo_rectangle_int_t"/>
          <parameter name="intersection" type="cairo_rectangle_int_t"/>
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_widget_is_ancestor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ancestor" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="IsComposited" cname="gtk_widget_is_composited">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsDrawable" cname="gtk_widget_is_drawable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsFocus" cname="gtk_widget_is_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsSensitive" cname="gtk_widget_is_sensitive">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsToplevel" cname="gtk_widget_is_toplevel">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsVisible" cname="gtk_widget_is_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ListAccelClosures" cname="gtk_widget_list_accel_closures">
        <return-type type="GList*" element_type="GList*" elements_owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="ListMnemonicLabels" cname="gtk_widget_list_mnemonic_labels">
        <return-type type="GList*" element_type="GtkWidget*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="ModifyBase" cname="gtk_widget_modify_base" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
          <parameter allow-none="1" name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ModifyBg" cname="gtk_widget_modify_bg" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
          <parameter allow-none="1" name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ModifyCursor" cname="gtk_widget_modify_cursor" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="primary" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="secondary" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ModifyFg" cname="gtk_widget_modify_fg" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
          <parameter allow-none="1" name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ModifyFont" cname="gtk_widget_modify_font" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="font_desc" type="PangoFontDescription*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ModifyStyle" cname="gtk_widget_modify_style" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkRcStyle*"/>
        </parameters>
      </method>
      <method name="ModifyText" cname="gtk_widget_modify_text" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
          <parameter allow-none="1" name="color" type="GdkColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="OverrideBackgroundColor" cname="gtk_widget_override_background_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter allow-none="1" name="color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="OverrideColor" cname="gtk_widget_override_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateFlags"/>
          <parameter allow-none="1" name="color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="OverrideCursor" cname="gtk_widget_override_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="cursor" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="secondary_cursor" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="OverrideFont" cname="gtk_widget_override_font">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="font_desc" type="PangoFontDescription*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="OverrideSymbolicColor" cname="gtk_widget_override_symbolic_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter allow-none="1" name="color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Path" cname="gtk_widget_path" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="path_length" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="path" type="gchar*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="path_reversed" type="gchar*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="QueueComputeExpand" cname="gtk_widget_queue_compute_expand">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="QueueDraw" cname="gtk_widget_queue_draw">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="QueueDrawArea" cname="gtk_widget_queue_draw_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="QueueDrawRegion" cname="gtk_widget_queue_draw_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="region" type="cairo.Region"/>
        </parameters>
      </method>
      <method name="QueueResize" cname="gtk_widget_queue_resize">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="QueueResizeNoRedraw" cname="gtk_widget_queue_resize_no_redraw">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RegionIntersect" cname="gtk_widget_region_intersect">
        <return-type type="cairo.Region*" owned="true"/>
        <parameters>
          <parameter name="region" type="cairo.Region"/>
        </parameters>
      </method>
      <method name="RegisterWindow" cname="gtk_widget_register_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="RemoveAccelerator" cname="gtk_widget_remove_accelerator">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="RemoveMnemonicLabel" cname="gtk_widget_remove_mnemonic_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="RemoveTickCallback" cname="gtk_widget_remove_tick_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="guint"/>
        </parameters>
      </method>
      <method name="RenderIcon" cname="gtk_widget_render_icon" deprecated="true">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RenderIconPixbuf" cname="gtk_widget_render_icon_pixbuf">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="Reparent" cname="gtk_widget_reparent">
        <return-type type="void"/>
        <parameters>
          <parameter name="new_parent" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="ResetRcStyles" cname="gtk_widget_reset_rc_styles" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ResetStyle" cname="gtk_widget_reset_style">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SendExpose" cname="gtk_widget_send_expose">
        <return-type type="gint"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </method>
      <method name="SendFocusChange" cname="gtk_widget_send_focus_change">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_widget_set_accel_path">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="accel_path" type="const-gchar*"/>
          <parameter allow-none="1" name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="SetAllocation" cname="gtk_widget_set_allocation">
        <return-type type="void"/>
        <parameters>
          <parameter name="allocation" type="GdkRectangle"/>
        </parameters>
      </method>
      <method name="SetAppPaintable" cname="gtk_widget_set_app_paintable">
        <return-type type="void"/>
        <parameters>
          <parameter name="app_paintable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCanDefault" cname="gtk_widget_set_can_default">
        <return-type type="void"/>
        <parameters>
          <parameter name="can_default" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCanFocus" cname="gtk_widget_set_can_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="can_focus" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetChildVisible" cname="gtk_widget_set_child_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="is_visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetCompositeName" cname="gtk_widget_set_composite_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetDeviceEnabled" cname="gtk_widget_set_device_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDeviceEvents" cname="gtk_widget_set_device_events">
        <return-type type="void"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
          <parameter name="events" type="GdkEventMask"/>
        </parameters>
      </method>
      <method name="SetDirection" cname="gtk_widget_set_direction">
        <return-type type="void"/>
        <parameters>
          <parameter name="dir" type="GtkTextDirection"/>
        </parameters>
      </method>
      <method name="SetDoubleBuffered" cname="gtk_widget_set_double_buffered">
        <return-type type="void"/>
        <parameters>
          <parameter name="double_buffered" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetEvents" cname="gtk_widget_set_events">
        <return-type type="void"/>
        <parameters>
          <parameter name="events" type="gint"/>
        </parameters>
      </method>
      <method name="SetHalign" cname="gtk_widget_set_halign">
        <return-type type="void"/>
        <parameters>
          <parameter name="align" type="GtkAlign"/>
        </parameters>
      </method>
      <method name="SetHasTooltip" cname="gtk_widget_set_has_tooltip">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_tooltip" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHasWindow" cname="gtk_widget_set_has_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_window" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHexpand" cname="gtk_widget_set_hexpand">
        <return-type type="void"/>
        <parameters>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHexpandSet" cname="gtk_widget_set_hexpand_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="set" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMapped" cname="gtk_widget_set_mapped">
        <return-type type="void"/>
        <parameters>
          <parameter name="mapped" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMarginBottom" cname="gtk_widget_set_margin_bottom">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gint"/>
        </parameters>
      </method>
      <method name="SetMarginLeft" cname="gtk_widget_set_margin_left">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gint"/>
        </parameters>
      </method>
      <method name="SetMarginRight" cname="gtk_widget_set_margin_right">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gint"/>
        </parameters>
      </method>
      <method name="SetMarginTop" cname="gtk_widget_set_margin_top">
        <return-type type="void"/>
        <parameters>
          <parameter name="margin" type="gint"/>
        </parameters>
      </method>
      <method name="SetName" cname="gtk_widget_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetNoShowAll" cname="gtk_widget_set_no_show_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="no_show_all" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetOpacity" cname="gtk_widget_set_opacity">
        <return-type type="void"/>
        <parameters>
          <parameter name="opacity" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetParent" cname="gtk_widget_set_parent">
        <return-type type="void"/>
        <parameters>
          <parameter name="parent" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetParentWindow" cname="gtk_widget_set_parent_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="parent_window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="SetRealized" cname="gtk_widget_set_realized">
        <return-type type="void"/>
        <parameters>
          <parameter name="realized" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetReceivesDefault" cname="gtk_widget_set_receives_default">
        <return-type type="void"/>
        <parameters>
          <parameter name="receives_default" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRedrawOnAllocate" cname="gtk_widget_set_redraw_on_allocate">
        <return-type type="void"/>
        <parameters>
          <parameter name="redraw_on_allocate" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_widget_set_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSizeRequest" cname="gtk_widget_set_size_request">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="SetState" cname="gtk_widget_set_state" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
        </parameters>
      </method>
      <method name="SetStateFlags" cname="gtk_widget_set_state_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GtkStateFlags"/>
          <parameter name="clear" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetStyle" cname="gtk_widget_set_style" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="style" type="GtkStyle*"/>
        </parameters>
      </method>
      <method name="SetSupportMultidevice" cname="gtk_widget_set_support_multidevice">
        <return-type type="void"/>
        <parameters>
          <parameter name="support_multidevice" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTooltipMarkup" cname="gtk_widget_set_tooltip_markup">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="markup" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTooltipText" cname="gtk_widget_set_tooltip_text">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTooltipWindow" cname="gtk_widget_set_tooltip_window">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="custom_window" type="GtkWindow*"/>
        </parameters>
      </method>
      <method name="SetValign" cname="gtk_widget_set_valign">
        <return-type type="void"/>
        <parameters>
          <parameter name="align" type="GtkAlign"/>
        </parameters>
      </method>
      <method name="SetVexpand" cname="gtk_widget_set_vexpand">
        <return-type type="void"/>
        <parameters>
          <parameter name="expand" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVexpandSet" cname="gtk_widget_set_vexpand_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="set" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_widget_set_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetVisual" cname="gtk_widget_set_visual">
        <return-type type="void"/>
        <parameters>
          <parameter name="visual" type="GdkVisual*"/>
        </parameters>
      </method>
      <method name="SetWindow" cname="gtk_widget_set_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*" owned="true"/>
        </parameters>
      </method>
      <method name="ShapeCombineRegion" cname="gtk_widget_shape_combine_region">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="region" type="cairo.Region"/>
        </parameters>
      </method>
      <method name="ShowAll" cname="gtk_widget_show_all">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ShowNow" cname="gtk_widget_show_now">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SizeRequest" cname="gtk_widget_size_request" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="requisition" type="GtkRequisition*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="StyleAttach" cname="gtk_widget_style_attach" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="StyleGetProperty" cname="gtk_widget_style_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_name" type="const-gchar*"/>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ThawChildNotify" cname="gtk_widget_thaw_child_notify">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="TranslateCoordinates" cname="gtk_widget_translate_coordinates">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dest_widget" type="GtkWidget*"/>
          <parameter name="src_x" type="gint"/>
          <parameter name="src_y" type="gint"/>
          <parameter name="dest_x" type="gint*" owned="true" pass_as="out"/>
          <parameter name="dest_y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="TriggerTooltipQuery" cname="gtk_widget_trigger_tooltip_query">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unparent" cname="gtk_widget_unparent">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="UnregisterWindow" cname="gtk_widget_unregister_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="UnsetStateFlags" cname="gtk_widget_unset_state_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GtkStateFlags"/>
        </parameters>
      </method>
      <property name="AppPaintable" cname="app-paintable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CanDefault" cname="can-default" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CanFocus" cname="can-focus" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="CompositeChild" cname="composite-child" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="DoubleBuffered" cname="double-buffered" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Events" cname="events" type="GdkEventMask" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Expand" cname="expand" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Halign" cname="halign" type="GtkAlign" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasTooltip" cname="has-tooltip" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HeightRequest" cname="height-request" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Hexpand" cname="hexpand" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HexpandSet" cname="hexpand-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Margin" cname="margin" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MarginBottom" cname="margin-bottom" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MarginLeft" cname="margin-left" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MarginRight" cname="margin-right" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MarginTop" cname="margin-top" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="NoShowAll" cname="no-show-all" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Opacity" cname="opacity" type="gdouble" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Parent" cname="parent" type="GtkContainer*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ReceivesDefault" cname="receives-default" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Sensitive" cname="sensitive" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Style" cname="style" type="GtkStyle*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TooltipMarkup" cname="tooltip-markup" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TooltipText" cname="tooltip-text" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Valign" cname="valign" type="GtkAlign" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Vexpand" cname="vexpand" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="VexpandSet" cname="vexpand-set" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WidthRequest" cname="width-request" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Window" cname="window" type="GdkWindow*" readable="true" writeable="false" construct="false" construct-only="false"/>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GInitiallyUnowned*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkWidgetPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="AccelClosuresChanged" cname="accel-closures-changed" when="">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ButtonPressEvent" cname="button-press-event" when="last" field_name="button_press_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventButton*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="ButtonReleaseEvent" cname="button-release-event" when="last" field_name="button_release_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventButton*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="CanActivateAccel" cname="can-activate-accel" when="last" field_name="can_activate_accel">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="signal_id" type="guint"/>
        </parameters>
      </signal>
      <signal name="ChildNotify" cname="child-notify" when="first" field_name="child_notify">
        <return-type type="void"/>
        <parameters>
          <parameter name="child_property" type="GParamSpec*"/>
        </parameters>
      </signal>
      <signal name="CompositedChanged" cname="composited-changed" when="last" field_name="composited_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ConfigureEvent" cname="configure-event" when="last" field_name="configure_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventConfigure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="DamageEvent" cname="damage-event" when="last" field_name="damage_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventExpose*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="DeleteEvent" cname="delete-event" when="last" field_name="delete_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </signal>
      <signal name="Destroy" cname="destroy" when="cleanup" field_name="destroy">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="DestroyEvent" cname="destroy-event" when="last" field_name="destroy_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </signal>
      <signal name="DirectionChanged" cname="direction-changed" when="first" field_name="direction_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="previous_direction" type="GtkTextDirection"/>
        </parameters>
      </signal>
      <signal name="DragBegin" cname="drag-begin" when="last" field_name="drag_begin">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
        </parameters>
      </signal>
      <signal name="DragDataDelete" cname="drag-data-delete" when="last" field_name="drag_data_delete">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
        </parameters>
      </signal>
      <signal name="DragDataGet" cname="drag-data-get" when="last" field_name="drag_data_get">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="guint"/>
          <parameter name="time" type="guint"/>
        </parameters>
      </signal>
      <signal name="DragDataReceived" cname="drag-data-received" when="last" field_name="drag_data_received">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="guint"/>
          <parameter name="time" type="guint"/>
        </parameters>
      </signal>
      <signal name="DragDrop" cname="drag-drop" when="last" field_name="drag_drop">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="time" type="guint"/>
        </parameters>
      </signal>
      <signal name="DragEnd" cname="drag-end" when="last" field_name="drag_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
        </parameters>
      </signal>
      <signal name="DragFailed" cname="drag-failed" when="last" field_name="drag_failed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="_result" type="GtkDragResult"/>
        </parameters>
      </signal>
      <signal name="DragLeave" cname="drag-leave" when="last" field_name="drag_leave">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="time" type="guint"/>
        </parameters>
      </signal>
      <signal name="DragMotion" cname="drag-motion" when="last" field_name="drag_motion">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="time" type="guint"/>
        </parameters>
      </signal>
      <signal name="Draw" cname="draw" when="last" field_name="draw">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
        </parameters>
      </signal>
      <signal name="EnterNotifyEvent" cname="enter-notify-event" when="last" field_name="enter_notify_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventCrossing*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="Event" cname="event" when="last" field_name="event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </signal>
      <signal name="EventAfter" cname="event-after" when="">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </signal>
      <signal name="Focus" cname="focus" when="last" field_name="focus">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GtkDirectionType"/>
        </parameters>
      </signal>
      <signal name="FocusInEvent" cname="focus-in-event" when="last" field_name="focus_in_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventFocus*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="FocusOutEvent" cname="focus-out-event" when="last" field_name="focus_out_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventFocus*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="GrabBrokenEvent" cname="grab-broken-event" when="last" field_name="grab_broken_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventGrabBroken*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="GrabFocus" cname="grab-focus" when="last" field_name="grab_focus">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="GrabNotify" cname="grab-notify" when="first" field_name="grab_notify">
        <return-type type="void"/>
        <parameters>
          <parameter name="was_grabbed" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="Hide" cname="hide" when="first" field_name="hide">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="HierarchyChanged" cname="hierarchy-changed" when="last" field_name="hierarchy_changed">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="previous_toplevel" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="KeyPressEvent" cname="key-press-event" when="last" field_name="key_press_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="KeyReleaseEvent" cname="key-release-event" when="last" field_name="key_release_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="KeynavFailed" cname="keynav-failed" when="last" field_name="keynav_failed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="direction" type="GtkDirectionType"/>
        </parameters>
      </signal>
      <signal name="LeaveNotifyEvent" cname="leave-notify-event" when="last" field_name="leave_notify_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventCrossing*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="Map" cname="map" when="first" field_name="map">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="MapEvent" cname="map-event" when="last" field_name="map_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventAny*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="MnemonicActivate" cname="mnemonic-activate" when="last" field_name="mnemonic_activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="arg1" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="MotionNotifyEvent" cname="motion-notify-event" when="last" field_name="motion_notify_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventMotion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="MoveFocus" cname="move-focus" when="last" field_name="move_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction" type="GtkDirectionType"/>
        </parameters>
      </signal>
      <signal name="ParentSet" cname="parent-set" when="first" field_name="parent_set">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="old_parent" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="PopupMenu" cname="popup-menu" when="last" field_name="popup_menu">
        <return-type type="gboolean"/>
        <parameters/>
      </signal>
      <signal name="PropertyNotifyEvent" cname="property-notify-event" when="last" field_name="property_notify_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventProperty*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="ProximityInEvent" cname="proximity-in-event" when="last" field_name="proximity_in_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventProximity*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="ProximityOutEvent" cname="proximity-out-event" when="last" field_name="proximity_out_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventProximity*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="QueryTooltip" cname="query-tooltip" when="last" field_name="query_tooltip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="keyboard_mode" type="gboolean"/>
          <parameter name="tooltip" type="GtkTooltip*"/>
        </parameters>
      </signal>
      <signal name="Realize" cname="realize" when="first" field_name="realize">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ScreenChanged" cname="screen-changed" when="last" field_name="screen_changed">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="previous_screen" type="GdkScreen*"/>
        </parameters>
      </signal>
      <signal name="ScrollEvent" cname="scroll-event" when="last" field_name="scroll_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventScroll*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="SelectionClearEvent" cname="selection-clear-event" when="last" field_name="selection_clear_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventSelection*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="SelectionGet" cname="selection-get" when="last" field_name="selection_get">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="guint"/>
          <parameter name="time" type="guint"/>
        </parameters>
      </signal>
      <signal name="SelectionNotifyEvent" cname="selection-notify-event" when="last" field_name="selection_notify_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventSelection*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="SelectionReceived" cname="selection-received" when="last" field_name="selection_received">
        <return-type type="void"/>
        <parameters>
          <parameter name="data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="time" type="guint"/>
        </parameters>
      </signal>
      <signal name="SelectionRequestEvent" cname="selection-request-event" when="last" field_name="selection_request_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventSelection*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="Show" cname="show" when="first" field_name="show">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ShowHelp" cname="show-help" when="last" field_name="show_help">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="help_type" type="GtkWidgetHelpType"/>
        </parameters>
      </signal>
      <signal name="SizeAllocate" cname="size-allocate" when="first" field_name="size_allocate">
        <return-type type="void"/>
        <parameters>
          <parameter name="allocation" type="cairo.RectangleInt"/>
        </parameters>
      </signal>
      <signal name="StateChanged" cname="state-changed" when="first" field_name="state_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
        </parameters>
      </signal>
      <signal name="StateFlagsChanged" cname="state-flags-changed" when="first" field_name="state_flags_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="GtkStateFlags"/>
        </parameters>
      </signal>
      <signal name="StyleSet" cname="style-set" when="first" field_name="style_set">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="previous_style" type="GtkStyle*"/>
        </parameters>
      </signal>
      <signal name="StyleUpdated" cname="style-updated" when="first" field_name="style_updated">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="TouchEvent" cname="touch-event" when="last" field_name="touch_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GdkEvent*"/>
        </parameters>
      </signal>
      <signal name="Unmap" cname="unmap" when="first" field_name="unmap">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="UnmapEvent" cname="unmap-event" when="last" field_name="unmap_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventAny*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="Unrealize" cname="unrealize" when="last" field_name="unrealize">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="VisibilityNotifyEvent" cname="visibility-notify-event" when="last" field_name="visibility_notify_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventVisibility*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
      <signal name="WindowStateEvent" cname="window-state-event" when="last" field_name="window_state_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventWindowState*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </signal>
    </object>
    <object name="Window" cname="GtkWindow" abstract="false" opaque="false" hidden="false" parent="GtkBin">
      <implements>
        <interface cname="AtkImplementorIface"/>
        <interface cname="GtkBuildable"/>
      </implements>
      <class_struct cname="GtkWindowClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GtkBinClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method signal_vm="set_focus"/>
        <method signal_vm="activate_focus"/>
        <method signal_vm="activate_default"/>
        <method signal_vm="keys_changed"/>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_window_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_window_new">
        <parameters>
          <parameter name="type" type="GtkWindowType"/>
        </parameters>
      </constructor>
      <method name="GetDefaultIconList" cname="gtk_window_get_default_icon_list" shared="true">
        <return-type type="GList*" element_type="GdkPixbuf*" elements_owned="true"/>
      </method>
      <method name="GetDefaultIconName" cname="gtk_window_get_default_icon_name" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="ListToplevels" cname="gtk_window_list_toplevels" shared="true">
        <return-type type="GList*" element_type="GtkWidget*" elements_owned="true"/>
      </method>
      <method name="SetAutoStartupNotification" cname="gtk_window_set_auto_startup_notification" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDefaultIcon" cname="gtk_window_set_default_icon" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetDefaultIconFromFile" cname="gtk_window_set_default_icon_from_file" shared="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetDefaultIconList" cname="gtk_window_set_default_icon_list" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GdkPixbuf*" elements_owned="true"/>
        </parameters>
      </method>
      <method name="SetDefaultIconName" cname="gtk_window_set_default_icon_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ActivateKey" cname="gtk_window_activate_key">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="AddAccelGroup" cname="gtk_window_add_accel_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="AddMnemonic" cname="gtk_window_add_mnemonic">
        <return-type type="void"/>
        <parameters>
          <parameter name="keyval" type="guint"/>
          <parameter name="target" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="BeginMoveDrag" cname="gtk_window_begin_move_drag">
        <return-type type="void"/>
        <parameters>
          <parameter name="button" type="gint"/>
          <parameter name="root_x" type="gint"/>
          <parameter name="root_y" type="gint"/>
          <parameter name="timestamp" type="guint32"/>
        </parameters>
      </method>
      <method name="BeginResizeDrag" cname="gtk_window_begin_resize_drag">
        <return-type type="void"/>
        <parameters>
          <parameter name="edge" type="GdkWindowEdge"/>
          <parameter name="button" type="gint"/>
          <parameter name="root_x" type="gint"/>
          <parameter name="root_y" type="gint"/>
          <parameter name="timestamp" type="guint32"/>
        </parameters>
      </method>
      <method name="Deiconify" cname="gtk_window_deiconify">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Fullscreen" cname="gtk_window_fullscreen">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAcceptFocus" cname="gtk_window_get_accept_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetApplication" cname="gtk_window_get_application">
        <return-type type="GtkApplication*"/>
        <parameters/>
      </method>
      <method name="GetAttachedTo" cname="gtk_window_get_attached_to">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetDecorated" cname="gtk_window_get_decorated">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDefaultSize" cname="gtk_window_get_default_size">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDefaultWidget" cname="gtk_window_get_default_widget">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetDeletable" cname="gtk_window_get_deletable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDestroyWithParent" cname="gtk_window_get_destroy_with_parent">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetFocus" cname="gtk_window_get_focus">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="GetFocusOnMap" cname="gtk_window_get_focus_on_map">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetFocusVisible" cname="gtk_window_get_focus_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetGravity" cname="gtk_window_get_gravity">
        <return-type type="GdkGravity"/>
        <parameters/>
      </method>
      <method name="GetGroup" cname="gtk_window_get_group">
        <return-type type="GtkWindowGroup*"/>
        <parameters/>
      </method>
      <method name="GetHasResizeGrip" cname="gtk_window_get_has_resize_grip">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetHideTitlebarWhenMaximized" cname="gtk_window_get_hide_titlebar_when_maximized">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetIcon" cname="gtk_window_get_icon">
        <return-type type="GdkPixbuf*"/>
        <parameters/>
      </method>
      <method name="GetIconList" cname="gtk_window_get_icon_list">
        <return-type type="GList*" element_type="GdkPixbuf*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="GetIconName" cname="gtk_window_get_icon_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetMnemonicModifier" cname="gtk_window_get_mnemonic_modifier">
        <return-type type="GdkModifierType"/>
        <parameters/>
      </method>
      <method name="GetMnemonicsVisible" cname="gtk_window_get_mnemonics_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetModal" cname="gtk_window_get_modal">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetOpacity" cname="gtk_window_get_opacity" deprecated="true">
        <return-type type="gdouble"/>
        <parameters/>
      </method>
      <method name="GetPosition" cname="gtk_window_get_position">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="root_x" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="root_y" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetResizable" cname="gtk_window_get_resizable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetResizeGripArea" cname="gtk_window_get_resize_grip_area">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="rect" type="cairo_rectangle_int_t" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetRole" cname="gtk_window_get_role">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetScreen" cname="gtk_window_get_screen">
        <return-type type="GdkScreen*"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gtk_window_get_size">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetSkipPagerHint" cname="gtk_window_get_skip_pager_hint">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetSkipTaskbarHint" cname="gtk_window_get_skip_taskbar_hint">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTitle" cname="gtk_window_get_title">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetTransientFor" cname="gtk_window_get_transient_for">
        <return-type type="GtkWindow*"/>
        <parameters/>
      </method>
      <method name="GetTypeHint" cname="gtk_window_get_type_hint">
        <return-type type="GdkWindowTypeHint"/>
        <parameters/>
      </method>
      <method name="GetUrgencyHint" cname="gtk_window_get_urgency_hint">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetWindowType" cname="gtk_window_get_window_type">
        <return-type type="GtkWindowType"/>
        <parameters/>
      </method>
      <method name="HasGroup" cname="gtk_window_has_group">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="HasToplevelFocus" cname="gtk_window_has_toplevel_focus">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Iconify" cname="gtk_window_iconify">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="IsActive" cname="gtk_window_is_active">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Maximize" cname="gtk_window_maximize">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="MnemonicActivate" cname="gtk_window_mnemonic_activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifier" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="Move" cname="gtk_window_move">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="ParseGeometry" cname="gtk_window_parse_geometry">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="geometry" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Present" cname="gtk_window_present">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PresentWithTime" cname="gtk_window_present_with_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="timestamp" type="guint32"/>
        </parameters>
      </method>
      <method name="PropagateKeyEvent" cname="gtk_window_propagate_key_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveAccelGroup" cname="gtk_window_remove_accel_group">
        <return-type type="void"/>
        <parameters>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="RemoveMnemonic" cname="gtk_window_remove_mnemonic">
        <return-type type="void"/>
        <parameters>
          <parameter name="keyval" type="guint"/>
          <parameter name="target" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="ReshowWithInitialSize" cname="gtk_window_reshow_with_initial_size">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Resize" cname="gtk_window_resize">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="ResizeGripIsVisible" cname="gtk_window_resize_grip_is_visible">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ResizeToGeometry" cname="gtk_window_resize_to_geometry">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="SetAcceptFocus" cname="gtk_window_set_accept_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetApplication" cname="gtk_window_set_application">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="application" type="GtkApplication*"/>
        </parameters>
      </method>
      <method name="SetAttachedTo" cname="gtk_window_set_attached_to">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="attach_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetDecorated" cname="gtk_window_set_decorated">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDefault" cname="gtk_window_set_default">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="default_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetDefaultGeometry" cname="gtk_window_set_default_geometry">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="SetDefaultSize" cname="gtk_window_set_default_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="SetDeletable" cname="gtk_window_set_deletable">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDestroyWithParent" cname="gtk_window_set_destroy_with_parent">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFocusOnMap" cname="gtk_window_set_focus_on_map">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFocusVisible" cname="gtk_window_set_focus_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetGeometryHints" cname="gtk_window_set_geometry_hints">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="geometry_widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="geometry" type="GdkGeometry*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="geom_mask" type="GdkWindowHints"/>
        </parameters>
      </method>
      <method name="SetGravity" cname="gtk_window_set_gravity">
        <return-type type="void"/>
        <parameters>
          <parameter name="gravity" type="GdkGravity"/>
        </parameters>
      </method>
      <method name="SetHasResizeGrip" cname="gtk_window_set_has_resize_grip">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHasUserRefCount" cname="gtk_window_set_has_user_ref_count">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetHideTitlebarWhenMaximized" cname="gtk_window_set_hide_titlebar_when_maximized">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetIcon" cname="gtk_window_set_icon">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetIconFromFile" cname="gtk_window_set_icon_from_file">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="filename" type="const-gfilename*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetIconList" cname="gtk_window_set_icon_list">
        <return-type type="void"/>
        <parameters>
          <parameter name="list" type="GList*" element_type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_window_set_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetKeepAbove" cname="gtk_window_set_keep_above">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetKeepBelow" cname="gtk_window_set_keep_below">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetMnemonicModifier" cname="gtk_window_set_mnemonic_modifier">
        <return-type type="void"/>
        <parameters>
          <parameter name="modifier" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="SetMnemonicsVisible" cname="gtk_window_set_mnemonics_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetModal" cname="gtk_window_set_modal">
        <return-type type="void"/>
        <parameters>
          <parameter name="modal" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetOpacity" cname="gtk_window_set_opacity" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="opacity" type="gdouble"/>
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_window_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="position" type="GtkWindowPosition"/>
        </parameters>
      </method>
      <method name="SetResizable" cname="gtk_window_set_resizable">
        <return-type type="void"/>
        <parameters>
          <parameter name="resizable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRole" cname="gtk_window_set_role">
        <return-type type="void"/>
        <parameters>
          <parameter name="role" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_window_set_screen">
        <return-type type="void"/>
        <parameters>
          <parameter name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="SetSkipPagerHint" cname="gtk_window_set_skip_pager_hint">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSkipTaskbarHint" cname="gtk_window_set_skip_taskbar_hint">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetStartupId" cname="gtk_window_set_startup_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="startup_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_window_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetTransientFor" cname="gtk_window_set_transient_for">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method name="SetTypeHint" cname="gtk_window_set_type_hint">
        <return-type type="void"/>
        <parameters>
          <parameter name="hint" type="GdkWindowTypeHint"/>
        </parameters>
      </method>
      <method name="SetUrgencyHint" cname="gtk_window_set_urgency_hint">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetWmclass" cname="gtk_window_set_wmclass">
        <return-type type="void"/>
        <parameters>
          <parameter name="wmclass_name" type="const-gchar*"/>
          <parameter name="wmclass_class" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Stick" cname="gtk_window_stick">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unfullscreen" cname="gtk_window_unfullscreen">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unmaximize" cname="gtk_window_unmaximize">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unstick" cname="gtk_window_unstick">
        <return-type type="void"/>
        <parameters/>
      </method>
      <property name="AcceptFocus" cname="accept-focus" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Application" cname="application" type="GtkApplication*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="AttachedTo" cname="attached-to" type="GtkWidget*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Decorated" cname="decorated" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DefaultHeight" cname="default-height" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DefaultWidth" cname="default-width" type="gint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Deletable" cname="deletable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="DestroyWithParent" cname="destroy-with-parent" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FocusOnMap" cname="focus-on-map" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="FocusVisible" cname="focus-visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Gravity" cname="gravity" type="GdkGravity" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HasResizeGrip" cname="has-resize-grip" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="HideTitlebarWhenMaximized" cname="hide-titlebar-when-maximized" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Icon" cname="icon" type="GdkPixbuf*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="IconName" cname="icon-name" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="MnemonicsVisible" cname="mnemonics-visible" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Modal" cname="modal" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Resizable" cname="resizable" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="ResizeGripVisible" cname="resize-grip-visible" type="gboolean" readable="true" writeable="false" construct="false" construct-only="false"/>
      <property name="Role" cname="role" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="Screen" cname="screen" type="GdkScreen*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SkipPagerHint" cname="skip-pager-hint" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="SkipTaskbarHint" cname="skip-taskbar-hint" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="StartupId" cname="startup-id" type="gchar*" readable="false" writeable="true" construct="false" construct-only="false"/>
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="TransientFor" cname="transient-for" type="GtkWindow*" readable="true" writeable="true" construct="true" construct-only="false"/>
      <property name="Type" cname="type" type="GtkWindowType" readable="true" writeable="true" construct="false" construct-only="true"/>
      <property name="TypeHint" cname="type-hint" type="GdkWindowTypeHint" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="UrgencyHint" cname="urgency-hint" type="gboolean" readable="true" writeable="true" construct="false" construct-only="false"/>
      <property name="WindowPosition" cname="window-position" type="GtkWindowPosition" readable="true" writeable="true" construct="false" construct-only="false"/>
      <field cname="bin" access="public" writeable="false" readable="true" name="Bin" type="GtkBin*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkWindowPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
      <signal name="ActivateDefault" cname="activate-default" when="last" field_name="activate_default">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="ActivateFocus" cname="activate-focus" when="last" field_name="activate_focus">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="KeysChanged" cname="keys-changed" when="first" field_name="keys_changed">
        <return-type type="void"/>
        <parameters/>
      </signal>
      <signal name="SetFocus" cname="set-focus" when="last" field_name="set_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="GtkWidget*"/>
        </parameters>
      </signal>
    </object>
    <object name="WindowGroup" cname="GtkWindowGroup" abstract="false" opaque="false" hidden="false" parent="GObject">
      <class_struct cname="GtkWindowGroupClass">
        <field cname="parent_class" access="public" writeable="false" readable="true" name="ParentClass" type="GObjectClass">
          <warning>missing glib:type-name</warning>
        </field>
        <method vm="_gtk_reserved1"/>
        <method vm="_gtk_reserved2"/>
        <method vm="_gtk_reserved3"/>
        <method vm="_gtk_reserved4"/>
      </class_struct>
      <virtual_method name="_gtkGtkReserved1" cname="_gtk_reserved1" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved2" cname="_gtk_reserved2" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved3" cname="_gtk_reserved3" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <virtual_method name="_gtkGtkReserved4" cname="_gtk_reserved4" shared="true" hidden="true">
        <return-type type="void"/>
      </virtual_method>
      <method name="GetType" cname="gtk_window_group_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_window_group_new" disable_void_ctor=""/>
      <method name="AddWindow" cname="gtk_window_group_add_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GtkWindow*"/>
        </parameters>
      </method>
      <method name="GetCurrentDeviceGrab" cname="gtk_window_group_get_current_device_grab">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="device" type="GdkDevice*"/>
        </parameters>
      </method>
      <method name="GetCurrentGrab" cname="gtk_window_group_get_current_grab">
        <return-type type="GtkWidget*"/>
        <parameters/>
      </method>
      <method name="ListWindows" cname="gtk_window_group_list_windows">
        <return-type type="GList*" element_type="GtkWindow*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="RemoveWindow" cname="gtk_window_group_remove_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GtkWindow*"/>
        </parameters>
      </method>
      <field cname="parent_instance" access="public" writeable="false" readable="true" name="ParentInstance" type="GObject*"/>
      <field cname="priv" access="public" writeable="false" readable="true" name="Priv" type="GtkWindowGroupPrivate*">
        <warning>missing glib:type-name</warning>
      </field>
    </object>
    <struct name="AboutDialogPrivate" cname="GtkAboutDialogPrivate" opaque="true" hidden="true"/>
    <struct name="AccelGroupEntry" cname="GtkAccelGroupEntry" opaque="false" hidden="false">
      <field cname="key" access="public" writeable="true" readable="true" name="Key" type="GtkAccelKey">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="closure" access="public" writeable="true" readable="true" name="Closure" type="GClosure*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="accel_path_quark" access="public" writeable="true" readable="true" name="AccelPathQuark" type="guint32"/>
    </struct>
    <struct name="AccelGroupPrivate" cname="GtkAccelGroupPrivate" opaque="true" hidden="true"/>
    <struct name="AccelKey" cname="GtkAccelKey" opaque="false" hidden="false">
      <field cname="accel_key" access="public" writeable="true" readable="true" name="AccelKey" type="guint"/>
      <field cname="accel_mods" access="public" writeable="true" readable="true" name="AccelMods" type="GdkModifierType"/>
      <field cname="accel_flags" access="public" writeable="true" readable="true" bits="16" name="AccelFlags" type="guint"/>
    </struct>
    <struct name="AccelLabelPrivate" cname="GtkAccelLabelPrivate" opaque="true" hidden="true"/>
    <struct name="AccessiblePrivate" cname="GtkAccessiblePrivate" opaque="true" hidden="true"/>
    <struct name="ActionEntry" cname="GtkActionEntry" opaque="false" hidden="false">
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="stock_id" access="public" writeable="true" readable="true" name="StockId" type="gchar*"/>
      <field cname="label" access="public" writeable="true" readable="true" name="Label" type="gchar*"/>
      <field cname="accelerator" access="public" writeable="true" readable="true" name="Accelerator" type="gchar*"/>
      <field cname="tooltip" access="public" writeable="true" readable="true" name="Tooltip" type="gchar*"/>
      <field cname="callback" access="public" writeable="true" readable="true" name="Callback" type="GCallback"/>
    </struct>
    <struct name="ActionGroupPrivate" cname="GtkActionGroupPrivate" opaque="true" hidden="true"/>
    <struct name="ActionPrivate" cname="GtkActionPrivate" opaque="true" hidden="true"/>
    <struct name="AdjustmentPrivate" cname="GtkAdjustmentPrivate" opaque="true" hidden="true"/>
    <struct name="AlignmentPrivate" cname="GtkAlignmentPrivate" opaque="true" hidden="true"/>
    <struct name="AppChooserButtonPrivate" cname="GtkAppChooserButtonPrivate" opaque="true" hidden="true"/>
    <struct name="AppChooserDialogPrivate" cname="GtkAppChooserDialogPrivate" opaque="true" hidden="true"/>
    <struct name="AppChooserWidgetPrivate" cname="GtkAppChooserWidgetPrivate" opaque="true" hidden="true"/>
    <struct name="ApplicationPrivate" cname="GtkApplicationPrivate" opaque="true" hidden="true"/>
    <struct name="ApplicationWindowPrivate" cname="GtkApplicationWindowPrivate" opaque="true" hidden="true"/>
    <struct name="ArrowPrivate" cname="GtkArrowPrivate" opaque="true" hidden="true"/>
    <struct name="AspectFramePrivate" cname="GtkAspectFramePrivate" opaque="true" hidden="true"/>
    <struct name="AssistantPrivate" cname="GtkAssistantPrivate" opaque="true" hidden="true"/>
    <struct name="BinPrivate" cname="GtkBinPrivate" opaque="true" hidden="true"/>
    <struct name="BindingArg" cname="GtkBindingArg" opaque="false" hidden="false">
      <field cname="arg_type" access="public" writeable="true" readable="true" name="ArgType" type="GType"/>
      <union name="d" cname="d">
        <field cname="long_data" access="public" writeable="true" readable="true" name="LongData" type="glong"/>
        <field cname="double_data" access="public" writeable="true" readable="true" name="DoubleData" type="gdouble"/>
        <field cname="string_data" access="public" writeable="true" readable="true" name="StringData" type="gchar*"/>
      </union>
    </struct>
    <struct name="BindingEntry" cname="GtkBindingEntry" opaque="false" hidden="false">
      <field cname="keyval" access="public" writeable="true" readable="true" name="Keyval" type="guint"/>
      <field cname="modifiers" access="public" writeable="true" readable="true" name="Modifiers" type="GdkModifierType"/>
      <field cname="binding_set" access="public" writeable="true" readable="true" name="BindingSet" type="GtkBindingSet*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="destroyed" access="public" writeable="true" readable="true" bits="1" name="Destroyed" type="guint"/>
      <field cname="in_emission" access="public" writeable="true" readable="true" bits="1" name="InEmission" type="guint"/>
      <field cname="marks_unbound" access="public" writeable="true" readable="true" bits="1" name="MarksUnbound" type="guint"/>
      <field cname="set_next" access="public" writeable="true" readable="true" name="SetNext" type="GtkBindingEntry*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="hash_next" access="public" writeable="true" readable="true" name="HashNext" type="GtkBindingEntry*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="signals" access="public" writeable="true" readable="true" name="Signals" type="GtkBindingSignal*">
        <warning>missing glib:type-name</warning>
      </field>
      <method name="AddSignalFromString" cname="gtk_binding_entry_add_signal_from_string" shared="true">
        <return-type type="GTokenType"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="signal_desc" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="AddSignall" cname="gtk_binding_entry_add_signall" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
          <parameter name="signal_name" type="const-gchar*"/>
          <parameter name="binding_args" type="GSList*" element_type="GSList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Remove" cname="gtk_binding_entry_remove" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="Skip" cname="gtk_binding_entry_skip" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
    </struct>
    <struct name="BindingSet" cname="GtkBindingSet" opaque="false" hidden="false">
      <field cname="set_name" access="public" writeable="true" readable="true" name="SetName" type="gchar*"/>
      <field cname="priority" access="public" writeable="true" readable="true" name="Priority" type="gint"/>
      <field cname="widget_path_pspecs" access="public" writeable="true" readable="true" name="WidgetPathPspecs" type="GSList*" element_type="gpointer"/>
      <field cname="widget_class_pspecs" access="public" writeable="true" readable="true" name="WidgetClassPspecs" type="GSList*" element_type="gpointer"/>
      <field cname="class_branch_pspecs" access="public" writeable="true" readable="true" name="ClassBranchPspecs" type="GSList*" element_type="gpointer"/>
      <field cname="entries" access="public" writeable="true" readable="true" name="Entries" type="GtkBindingEntry*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="current" access="public" writeable="true" readable="true" name="Current" type="GtkBindingEntry*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="parsed" access="public" writeable="true" readable="true" bits="1" name="Parsed" type="guint"/>
      <method name="Activate" cname="gtk_binding_set_activate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
          <parameter name="_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="AddPath" cname="gtk_binding_set_add_path" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="path_type" type="GtkPathType"/>
          <parameter name="path_pattern" type="const-gchar*"/>
          <parameter name="priority" type="GtkPathPriorityType"/>
        </parameters>
      </method>
      <method name="Find" cname="gtk_binding_set_find" shared="true">
        <return-type type="GtkBindingSet*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="set_name" type="const-gchar*"/>
        </parameters>
      </method>
    </struct>
    <struct name="BindingSignal" cname="GtkBindingSignal" opaque="false" hidden="false">
      <field cname="next" access="public" writeable="true" readable="true" name="Next" type="GtkBindingSignal*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="signal_name" access="public" writeable="true" readable="true" name="SignalName" type="gchar*"/>
      <field cname="n_args" access="public" writeable="true" readable="true" name="NArgs" type="guint"/>
      <field cname="args" access="public" writeable="true" readable="true" name="Args" type="GtkBindingArg*">
        <warning>missing glib:type-name</warning>
      </field>
    </struct>
    <boxed name="Border" cname="GtkBorder" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_border_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="left" access="public" writeable="true" readable="true" name="Left" type="gint16"/>
      <field cname="right" access="public" writeable="true" readable="true" name="Right" type="gint16"/>
      <field cname="top" access="public" writeable="true" readable="true" name="Top" type="gint16"/>
      <field cname="bottom" access="public" writeable="true" readable="true" name="Bottom" type="gint16"/>
      <constructor cname="gtk_border_new" disable_void_ctor=""/>
      <method name="Copy" cname="gtk_border_copy">
        <return-type type="GtkBorder*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_border_free">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="BoxPrivate" cname="GtkBoxPrivate" opaque="true" hidden="true"/>
    <struct name="BuilderPrivate" cname="GtkBuilderPrivate" opaque="true" hidden="true"/>
    <struct name="ButtonBoxPrivate" cname="GtkButtonBoxPrivate" opaque="true" hidden="true"/>
    <struct name="ButtonPrivate" cname="GtkButtonPrivate" opaque="true" hidden="true"/>
    <struct name="CalendarPrivate" cname="GtkCalendarPrivate" opaque="true" hidden="true"/>
    <struct name="CellAreaBoxPrivate" cname="GtkCellAreaBoxPrivate" opaque="true" hidden="true"/>
    <struct name="CellAreaContextPrivate" cname="GtkCellAreaContextPrivate" opaque="true" hidden="true"/>
    <struct name="CellAreaPrivate" cname="GtkCellAreaPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererAccelPrivate" cname="GtkCellRendererAccelPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererClassPrivate" cname="GtkCellRendererClassPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererComboPrivate" cname="GtkCellRendererComboPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererPixbufPrivate" cname="GtkCellRendererPixbufPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererPrivate" cname="GtkCellRendererPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererProgressPrivate" cname="GtkCellRendererProgressPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererSpinPrivate" cname="GtkCellRendererSpinPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererSpinnerPrivate" cname="GtkCellRendererSpinnerPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererTextPrivate" cname="GtkCellRendererTextPrivate" opaque="true" hidden="true"/>
    <struct name="CellRendererTogglePrivate" cname="GtkCellRendererTogglePrivate" opaque="true" hidden="true"/>
    <struct name="CellViewPrivate" cname="GtkCellViewPrivate" opaque="true" hidden="true"/>
    <struct name="CheckMenuItemPrivate" cname="GtkCheckMenuItemPrivate" opaque="true" hidden="true"/>
    <struct name="ColorButtonPrivate" cname="GtkColorButtonPrivate" opaque="true" hidden="true"/>
    <struct name="ColorChooserDialogPrivate" cname="GtkColorChooserDialogPrivate" opaque="true" hidden="true"/>
    <struct name="ColorChooserWidgetPrivate" cname="GtkColorChooserWidgetPrivate" opaque="true" hidden="true"/>
    <struct name="ColorSelectionDialogPrivate" cname="GtkColorSelectionDialogPrivate" opaque="true" hidden="true"/>
    <struct name="ColorSelectionPrivate" cname="GtkColorSelectionPrivate" opaque="true" hidden="true"/>
    <struct name="ComboBoxPrivate" cname="GtkComboBoxPrivate" opaque="true" hidden="true"/>
    <struct name="ComboBoxTextPrivate" cname="GtkComboBoxTextPrivate" opaque="true" hidden="true"/>
    <struct name="ContainerPrivate" cname="GtkContainerPrivate" opaque="true" hidden="true"/>
    <struct name="CssProviderPrivate" cname="GtkCssProviderPrivate" opaque="true" hidden="true"/>
    <boxed name="CssSection" cname="GtkCssSection" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_css_section_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetEndLine" cname="gtk_css_section_get_end_line">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetEndPosition" cname="gtk_css_section_get_end_position">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetFile" cname="gtk_css_section_get_file">
        <return-type type="GFile*"/>
        <parameters/>
      </method>
      <method name="GetParent" cname="gtk_css_section_get_parent">
        <return-type type="GtkCssSection*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSectionType" cname="gtk_css_section_get_section_type">
        <return-type type="GtkCssSectionType"/>
        <parameters/>
      </method>
      <method name="GetStartLine" cname="gtk_css_section_get_start_line">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetStartPosition" cname="gtk_css_section_get_start_position">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Ref" cname="gtk_css_section_ref">
        <return-type type="GtkCssSection*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Unref" cname="gtk_css_section_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="DialogPrivate" cname="GtkDialogPrivate" opaque="true" hidden="true"/>
    <struct name="EntryBufferPrivate" cname="GtkEntryBufferPrivate" opaque="true" hidden="true"/>
    <struct name="EntryCompletionPrivate" cname="GtkEntryCompletionPrivate" opaque="true" hidden="true"/>
    <struct name="EntryPrivate" cname="GtkEntryPrivate" opaque="true" hidden="true"/>
    <struct name="EventBoxPrivate" cname="GtkEventBoxPrivate" opaque="true" hidden="true"/>
    <struct name="ExpanderPrivate" cname="GtkExpanderPrivate" opaque="true" hidden="true"/>
    <struct name="FileChooserButtonPrivate" cname="GtkFileChooserButtonPrivate" opaque="true" hidden="true"/>
    <struct name="FileChooserDialogPrivate" cname="GtkFileChooserDialogPrivate" opaque="true" hidden="true"/>
    <struct name="FileChooserWidgetPrivate" cname="GtkFileChooserWidgetPrivate" opaque="true" hidden="true"/>
    <struct name="FileFilterInfo" cname="GtkFileFilterInfo" opaque="false" hidden="false">
      <field cname="contains" access="public" writeable="true" readable="true" name="Contains" type="GtkFileFilterFlags"/>
      <field cname="filename" access="public" writeable="true" readable="true" name="Filename" type="gchar*"/>
      <field cname="uri" access="public" writeable="true" readable="true" name="Uri" type="gchar*"/>
      <field cname="display_name" access="public" writeable="true" readable="true" name="DisplayName" type="gchar*"/>
      <field cname="mime_type" access="public" writeable="true" readable="true" name="MimeType" type="gchar*"/>
    </struct>
    <struct name="FixedChild" cname="GtkFixedChild" opaque="false" hidden="false">
      <field cname="widget" access="public" writeable="true" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gint"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gint"/>
    </struct>
    <struct name="FixedPrivate" cname="GtkFixedPrivate" opaque="true" hidden="true"/>
    <struct name="FontButtonPrivate" cname="GtkFontButtonPrivate" opaque="true" hidden="true"/>
    <struct name="FontChooserDialogPrivate" cname="GtkFontChooserDialogPrivate" opaque="true" hidden="true"/>
    <struct name="FontChooserWidgetPrivate" cname="GtkFontChooserWidgetPrivate" opaque="true" hidden="true"/>
    <struct name="FontSelectionDialogPrivate" cname="GtkFontSelectionDialogPrivate" opaque="true" hidden="true"/>
    <struct name="FontSelectionPrivate" cname="GtkFontSelectionPrivate" opaque="true" hidden="true"/>
    <struct name="FramePrivate" cname="GtkFramePrivate" opaque="true" hidden="true"/>
    <boxed name="Gradient" cname="GtkGradient" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_gradient_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_gradient_new_linear">
        <parameters>
          <parameter name="x0" type="gdouble"/>
          <parameter name="y0" type="gdouble"/>
          <parameter name="x1" type="gdouble"/>
          <parameter name="y1" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_gradient_new_radial">
        <parameters>
          <parameter name="x0" type="gdouble"/>
          <parameter name="y0" type="gdouble"/>
          <parameter name="radius0" type="gdouble"/>
          <parameter name="x1" type="gdouble"/>
          <parameter name="y1" type="gdouble"/>
          <parameter name="radius1" type="gdouble"/>
        </parameters>
      </constructor>
      <method name="AddColorStop" cname="gtk_gradient_add_color_stop" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gdouble"/>
          <parameter name="color" type="GtkSymbolicColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Ref" cname="gtk_gradient_ref" deprecated="true">
        <return-type type="GtkGradient*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Resolve" cname="gtk_gradient_resolve" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="props" type="GtkStyleProperties*"/>
          <parameter name="resolved_gradient" type="cairo.Pattern*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="ResolveForContext" cname="gtk_gradient_resolve_for_context">
        <return-type type="cairo.Pattern*" owned="true"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
        </parameters>
      </method>
      <method name="ToString" cname="gtk_gradient_to_string" deprecated="true">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gtk_gradient_unref" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="GridPrivate" cname="GtkGridPrivate" opaque="true" hidden="true"/>
    <struct name="HSVPrivate" cname="GtkHSVPrivate" opaque="true" hidden="true"/>
    <struct name="HandleBoxPrivate" cname="GtkHandleBoxPrivate" opaque="true" hidden="true"/>
    <struct name="IMContextInfo" cname="GtkIMContextInfo" opaque="false" hidden="false">
      <field cname="context_id" access="public" writeable="true" readable="true" name="ContextId" type="gchar*"/>
      <field cname="context_name" access="public" writeable="true" readable="true" name="ContextName" type="gchar*"/>
      <field cname="domain" access="public" writeable="true" readable="true" name="Domain" type="gchar*"/>
      <field cname="domain_dirname" access="public" writeable="true" readable="true" name="DomainDirname" type="gchar*"/>
      <field cname="default_locales" access="public" writeable="true" readable="true" name="DefaultLocales" type="gchar*"/>
    </struct>
    <struct name="IMContextSimplePrivate" cname="GtkIMContextSimplePrivate" opaque="true" hidden="true"/>
    <struct name="IMMulticontextPrivate" cname="GtkIMMulticontextPrivate" opaque="true" hidden="true"/>
    <struct name="IconFactoryPrivate" cname="GtkIconFactoryPrivate" opaque="true" hidden="true"/>
    <boxed name="IconSet" cname="GtkIconSet" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_icon_set_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_icon_set_new" disable_void_ctor=""/>
      <constructor cname="gtk_icon_set_new_from_pixbuf">
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <method name="AddSource" cname="gtk_icon_set_add_source">
        <return-type type="void"/>
        <parameters>
          <parameter name="source" type="GtkIconSource*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Copy" cname="gtk_icon_set_copy">
        <return-type type="GtkIconSet*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetSizes" cname="gtk_icon_set_get_sizes">
        <return-type type="void"/>
        <parameters>
          <parameter name="sizes" type="GtkIconSize***" owned="true" pass_as="out" array="true" array_length_param_index="1"/>
          <parameter name="n_sizes" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Ref" cname="gtk_icon_set_ref">
        <return-type type="GtkIconSet*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="RenderIcon" cname="gtk_icon_set_render_icon" deprecated="true">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="style" type="GtkStyle*"/>
          <parameter name="direction" type="GtkTextDirection"/>
          <parameter name="state" type="GtkStateType"/>
          <parameter name="size" type="gint"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RenderIconPixbuf" cname="gtk_icon_set_render_icon_pixbuf">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="Unref" cname="gtk_icon_set_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <boxed name="IconSource" cname="GtkIconSource" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_icon_source_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_icon_source_new" disable_void_ctor=""/>
      <method name="Copy" cname="gtk_icon_source_copy">
        <return-type type="GtkIconSource*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_icon_source_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDirection" cname="gtk_icon_source_get_direction">
        <return-type type="GtkTextDirection"/>
        <parameters/>
      </method>
      <method name="GetDirectionWildcarded" cname="gtk_icon_source_get_direction_wildcarded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetFilename" cname="gtk_icon_source_get_filename">
        <return-type type="const-gfilename*"/>
        <parameters/>
      </method>
      <method name="GetIconName" cname="gtk_icon_source_get_icon_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPixbuf" cname="gtk_icon_source_get_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters/>
      </method>
      <method name="GetSize" cname="gtk_icon_source_get_size">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSizeWildcarded" cname="gtk_icon_source_get_size_wildcarded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetState" cname="gtk_icon_source_get_state">
        <return-type type="GtkStateType"/>
        <parameters/>
      </method>
      <method name="GetStateWildcarded" cname="gtk_icon_source_get_state_wildcarded">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDirection" cname="gtk_icon_source_set_direction">
        <return-type type="void"/>
        <parameters>
          <parameter name="direction" type="GtkTextDirection"/>
        </parameters>
      </method>
      <method name="SetDirectionWildcarded" cname="gtk_icon_source_set_direction_wildcarded">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetFilename" cname="gtk_icon_source_set_filename">
        <return-type type="void"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_icon_source_set_icon_name">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="icon_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPixbuf" cname="gtk_icon_source_set_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_icon_source_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="SetSizeWildcarded" cname="gtk_icon_source_set_size_wildcarded">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetState" cname="gtk_icon_source_set_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="state" type="GtkStateType"/>
        </parameters>
      </method>
      <method name="SetStateWildcarded" cname="gtk_icon_source_set_state_wildcarded">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
    </boxed>
    <struct name="IconThemePrivate" cname="GtkIconThemePrivate" opaque="true" hidden="true"/>
    <struct name="IconViewPrivate" cname="GtkIconViewPrivate" opaque="true" hidden="true"/>
    <struct name="ImageMenuItemPrivate" cname="GtkImageMenuItemPrivate" opaque="true" hidden="true"/>
    <struct name="ImagePrivate" cname="GtkImagePrivate" opaque="true" hidden="true"/>
    <struct name="InfoBarPrivate" cname="GtkInfoBarPrivate" opaque="true" hidden="true"/>
    <struct name="InvisiblePrivate" cname="GtkInvisiblePrivate" opaque="true" hidden="true"/>
    <struct name="LabelPrivate" cname="GtkLabelPrivate" opaque="true" hidden="true"/>
    <struct name="LabelSelectionInfo" cname="GtkLabelSelectionInfo" opaque="true" hidden="false"/>
    <struct name="LayoutPrivate" cname="GtkLayoutPrivate" opaque="true" hidden="true"/>
    <struct name="LevelBarPrivate" cname="GtkLevelBarPrivate" opaque="true" hidden="true"/>
    <struct name="LinkButtonPrivate" cname="GtkLinkButtonPrivate" opaque="true" hidden="true"/>
    <struct name="ListStorePrivate" cname="GtkListStorePrivate" opaque="true" hidden="true"/>
    <struct name="LockButtonPrivate" cname="GtkLockButtonPrivate" opaque="true" hidden="true"/>
    <struct name="MenuBarPrivate" cname="GtkMenuBarPrivate" opaque="true" hidden="true"/>
    <struct name="MenuButtonPrivate" cname="GtkMenuButtonPrivate" opaque="true" hidden="true"/>
    <struct name="MenuItemPrivate" cname="GtkMenuItemPrivate" opaque="true" hidden="true"/>
    <struct name="MenuPrivate" cname="GtkMenuPrivate" opaque="true" hidden="true"/>
    <struct name="MenuShellPrivate" cname="GtkMenuShellPrivate" opaque="true" hidden="true"/>
    <struct name="MenuToolButtonPrivate" cname="GtkMenuToolButtonPrivate" opaque="true" hidden="true"/>
    <struct name="MessageDialogPrivate" cname="GtkMessageDialogPrivate" opaque="true" hidden="true"/>
    <struct name="MiscPrivate" cname="GtkMiscPrivate" opaque="true" hidden="true"/>
    <struct name="MountOperationPrivate" cname="GtkMountOperationPrivate" opaque="true" hidden="true"/>
    <struct name="NotebookPrivate" cname="GtkNotebookPrivate" opaque="true" hidden="true"/>
    <struct name="NumerableIconPrivate" cname="GtkNumerableIconPrivate" opaque="true" hidden="true"/>
    <struct name="OverlayPrivate" cname="GtkOverlayPrivate" opaque="true" hidden="true"/>
    <struct name="PageRange" cname="GtkPageRange" opaque="false" hidden="false">
      <field cname="start" access="public" writeable="true" readable="true" name="Start" type="gint"/>
      <field cname="end" access="public" writeable="true" readable="true" name="End" type="gint"/>
    </struct>
    <struct name="PanedPrivate" cname="GtkPanedPrivate" opaque="true" hidden="true"/>
    <boxed name="PaperSize" cname="GtkPaperSize" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_paper_size_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_paper_size_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_paper_size_new_custom">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="display_name" type="const-gchar*"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_paper_size_new_from_key_file">
        <parameters>
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="group_name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_paper_size_new_from_ppd">
        <parameters>
          <parameter name="ppd_name" type="const-gchar*"/>
          <parameter name="ppd_display_name" type="const-gchar*"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="gtk_paper_size_copy">
        <return-type type="GtkPaperSize*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_paper_size_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDefaultBottomMargin" cname="gtk_paper_size_get_default_bottom_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetDefaultLeftMargin" cname="gtk_paper_size_get_default_left_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetDefaultRightMargin" cname="gtk_paper_size_get_default_right_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetDefaultTopMargin" cname="gtk_paper_size_get_default_top_margin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetDisplayName" cname="gtk_paper_size_get_display_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetHeight" cname="gtk_paper_size_get_height">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="GetName" cname="gtk_paper_size_get_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPpdName" cname="gtk_paper_size_get_ppd_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="gtk_paper_size_get_width">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="IsCustom" cname="gtk_paper_size_is_custom">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEqual" cname="gtk_paper_size_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size2" type="GtkPaperSize*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_paper_size_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="unit" type="GtkUnit"/>
        </parameters>
      </method>
      <method name="ToKeyFile" cname="gtk_paper_size_to_key_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="key_file" type="GKeyFile*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="group_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetDefault" cname="gtk_paper_size_get_default" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPaperSizes" cname="gtk_paper_size_get_paper_sizes" shared="true">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="include_custom" type="gboolean"/>
        </parameters>
      </method>
    </boxed>
    <struct name="PlugPrivate" cname="GtkPlugPrivate" opaque="true" hidden="true"/>
    <struct name="PrintOperationPrivate" cname="GtkPrintOperationPrivate" opaque="true" hidden="true"/>
    <struct name="ProgressBarPrivate" cname="GtkProgressBarPrivate" opaque="true" hidden="true"/>
    <struct name="RadioActionEntry" cname="GtkRadioActionEntry" opaque="false" hidden="false">
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="stock_id" access="public" writeable="true" readable="true" name="StockId" type="gchar*"/>
      <field cname="label" access="public" writeable="true" readable="true" name="Label" type="gchar*"/>
      <field cname="accelerator" access="public" writeable="true" readable="true" name="Accelerator" type="gchar*"/>
      <field cname="tooltip" access="public" writeable="true" readable="true" name="Tooltip" type="gchar*"/>
      <field cname="value" access="public" writeable="true" readable="true" name="Value" type="gint"/>
    </struct>
    <struct name="RadioActionPrivate" cname="GtkRadioActionPrivate" opaque="true" hidden="true"/>
    <struct name="RadioButtonPrivate" cname="GtkRadioButtonPrivate" opaque="true" hidden="true"/>
    <struct name="RadioMenuItemPrivate" cname="GtkRadioMenuItemPrivate" opaque="true" hidden="true"/>
    <struct name="RangePrivate" cname="GtkRangePrivate" opaque="true" hidden="true"/>
    <struct name="RcContext" cname="GtkRcContext" opaque="true" hidden="false"/>
    <struct name="RecentActionPrivate" cname="GtkRecentActionPrivate" opaque="true" hidden="true"/>
    <struct name="RecentChooserDialogPrivate" cname="GtkRecentChooserDialogPrivate" opaque="true" hidden="true"/>
    <struct name="RecentChooserMenuPrivate" cname="GtkRecentChooserMenuPrivate" opaque="true" hidden="true"/>
    <struct name="RecentChooserWidgetPrivate" cname="GtkRecentChooserWidgetPrivate" opaque="true" hidden="true"/>
    <struct name="RecentData" cname="GtkRecentData" opaque="false" hidden="false">
      <field cname="display_name" access="public" writeable="true" readable="true" name="DisplayName" type="gchar*"/>
      <field cname="description" access="public" writeable="true" readable="true" name="Description" type="gchar*"/>
      <field cname="mime_type" access="public" writeable="true" readable="true" name="MimeType" type="gchar*"/>
      <field cname="app_name" access="public" writeable="true" readable="true" name="AppName" type="gchar*"/>
      <field cname="app_exec" access="public" writeable="true" readable="true" name="AppExec" type="gchar*"/>
      <field cname="groups" access="public" writeable="true" readable="true" name="Groups" type="gchar*"/>
      <field cname="is_private" access="public" writeable="true" readable="true" name="IsPrivate" type="gboolean"/>
    </struct>
    <struct name="RecentFilterInfo" cname="GtkRecentFilterInfo" opaque="false" hidden="false">
      <field cname="contains" access="public" writeable="true" readable="true" name="Contains" type="GtkRecentFilterFlags"/>
      <field cname="uri" access="public" writeable="true" readable="true" name="Uri" type="gchar*"/>
      <field cname="display_name" access="public" writeable="true" readable="true" name="DisplayName" type="gchar*"/>
      <field cname="mime_type" access="public" writeable="true" readable="true" name="MimeType" type="gchar*"/>
      <field cname="applications" access="public" writeable="true" readable="true" name="Applications" type="gchar*"/>
      <field cname="groups" access="public" writeable="true" readable="true" name="Groups" type="gchar*"/>
      <field cname="age" access="public" writeable="true" readable="true" name="Age" type="gint"/>
    </struct>
    <boxed name="RecentInfo" cname="GtkRecentInfo" opaque="true" hidden="false">
      <method name="GetType" cname="gtk_recent_info_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="CreateAppInfo" cname="gtk_recent_info_create_app_info">
        <return-type type="GAppInfo*" owned="true"/>
        <parameters throws="1">
          <parameter allow-none="1" name="app_name" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="Exists" cname="gtk_recent_info_exists">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetAdded" cname="gtk_recent_info_get_added">
        <return-type type="glong"/>
        <parameters/>
      </method>
      <method name="GetAge" cname="gtk_recent_info_get_age">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetApplicationInfo" cname="gtk_recent_info_get_application_info">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="app_name" type="const-gchar*"/>
          <parameter name="app_exec" type="const-gchar*" pass_as="out"/>
          <parameter name="count" type="guint*" owned="true" pass_as="out"/>
          <parameter name="time_" type="glong*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetApplications" cname="gtk_recent_info_get_applications">
        <return-type type="gchar***" owned="true" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter allow-none="1" name="length" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDescription" cname="gtk_recent_info_get_description">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetDisplayName" cname="gtk_recent_info_get_display_name">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetGicon" cname="gtk_recent_info_get_gicon">
        <return-type type="GIcon*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetGroups" cname="gtk_recent_info_get_groups">
        <return-type type="gchar***" owned="true" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter allow-none="1" name="length" type="gsize*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetIcon" cname="gtk_recent_info_get_icon">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="GetMimeType" cname="gtk_recent_info_get_mime_type">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetModified" cname="gtk_recent_info_get_modified">
        <return-type type="glong"/>
        <parameters/>
      </method>
      <method name="GetPrivateHint" cname="gtk_recent_info_get_private_hint">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetShortName" cname="gtk_recent_info_get_short_name">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetUri" cname="gtk_recent_info_get_uri">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetUriDisplay" cname="gtk_recent_info_get_uri_display">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetVisited" cname="gtk_recent_info_get_visited">
        <return-type type="glong"/>
        <parameters/>
      </method>
      <method name="HasApplication" cname="gtk_recent_info_has_application">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="app_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="HasGroup" cname="gtk_recent_info_has_group">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="group_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IsLocal" cname="gtk_recent_info_is_local">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="LastApplication" cname="gtk_recent_info_last_application">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Match" cname="gtk_recent_info_match">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="info_b" type="GtkRecentInfo*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Ref" cname="gtk_recent_info_ref">
        <return-type type="GtkRecentInfo*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Unref" cname="gtk_recent_info_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="RecentManagerPrivate" cname="GtkRecentManagerPrivate" opaque="true" hidden="true"/>
    <struct name="RequestedSize" cname="GtkRequestedSize" opaque="false" hidden="false">
      <field cname="data" access="public" writeable="true" readable="true" name="Data" type="gpointer"/>
      <field cname="minimum_size" access="public" writeable="true" readable="true" name="MinimumSize" type="gint"/>
      <field cname="natural_size" access="public" writeable="true" readable="true" name="NaturalSize" type="gint"/>
    </struct>
    <boxed name="Requisition" cname="GtkRequisition" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_requisition_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="width" access="public" writeable="true" readable="true" name="Width" type="gint"/>
      <field cname="height" access="public" writeable="true" readable="true" name="Height" type="gint"/>
      <constructor cname="gtk_requisition_new" disable_void_ctor=""/>
      <method name="Copy" cname="gtk_requisition_copy">
        <return-type type="GtkRequisition*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_requisition_free">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="ScaleButtonPrivate" cname="GtkScaleButtonPrivate" opaque="true" hidden="true"/>
    <struct name="ScalePrivate" cname="GtkScalePrivate" opaque="true" hidden="true"/>
    <struct name="ScrolledWindowPrivate" cname="GtkScrolledWindowPrivate" opaque="true" hidden="true"/>
    <boxed name="SelectionData" cname="GtkSelectionData" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_selection_data_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Copy" cname="gtk_selection_data_copy">
        <return-type type="GtkSelectionData*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_selection_data_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDataType" cname="gtk_selection_data_get_data_type">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetDataWithLength" cname="gtk_selection_data_get_data_with_length">
        <return-type type="guchar*" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="length" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDisplay" cname="gtk_selection_data_get_display">
        <return-type type="GdkDisplay*"/>
        <parameters/>
      </method>
      <method name="GetFormat" cname="gtk_selection_data_get_format">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetLength" cname="gtk_selection_data_get_length">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPixbuf" cname="gtk_selection_data_get_pixbuf">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters/>
      </method>
      <method name="GetSelection" cname="gtk_selection_data_get_selection">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetTarget" cname="gtk_selection_data_get_target">
        <return-type type="GdkAtom">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetTargets" cname="gtk_selection_data_get_targets">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="targets" type="GdkAtom**" pass_as="out" array="true" array_length_param_index="1"/>
          <parameter name="n_atoms" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetText" cname="gtk_selection_data_get_text">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetUris" cname="gtk_selection_data_get_uris">
        <return-type type="gchar***" owned="true" array="true" null_term_array="true"/>
        <parameters/>
      </method>
      <method name="Set" cname="gtk_selection_data_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="format" type="gint"/>
          <parameter name="data" type="guchar*" array="true" array_length_param_index="3"/>
          <parameter name="length" type="gint"/>
        </parameters>
      </method>
      <method name="SetPixbuf" cname="gtk_selection_data_set_pixbuf">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="SetText" cname="gtk_selection_data_set_text">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
          <parameter name="len" type="gint"/>
        </parameters>
      </method>
      <method name="SetUris" cname="gtk_selection_data_set_uris">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="uris" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="TargetsIncludeImage" cname="gtk_selection_data_targets_include_image">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="writable" type="gboolean"/>
        </parameters>
      </method>
      <method name="TargetsIncludeRichText" cname="gtk_selection_data_targets_include_rich_text">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="GtkTextBuffer*"/>
        </parameters>
      </method>
      <method name="TargetsIncludeText" cname="gtk_selection_data_targets_include_text">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="TargetsIncludeUri" cname="gtk_selection_data_targets_include_uri">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="SeparatorPrivate" cname="GtkSeparatorPrivate" opaque="true" hidden="true"/>
    <struct name="SeparatorToolItemPrivate" cname="GtkSeparatorToolItemPrivate" opaque="true" hidden="true"/>
    <struct name="SettingsPrivate" cname="GtkSettingsPrivate" opaque="true" hidden="true"/>
    <struct name="SettingsValue" cname="GtkSettingsValue" opaque="false" hidden="false">
      <field cname="origin" access="public" writeable="true" readable="true" name="Origin" type="gchar*"/>
      <field cname="value" access="public" writeable="true" readable="true" name="Value" type="GValue">
        <warning>missing glib:type-name</warning>
      </field>
    </struct>
    <struct name="SizeGroupPrivate" cname="GtkSizeGroupPrivate" opaque="true" hidden="true"/>
    <struct name="SocketPrivate" cname="GtkSocketPrivate" opaque="true" hidden="true"/>
    <struct name="SpinButtonPrivate" cname="GtkSpinButtonPrivate" opaque="true" hidden="true"/>
    <struct name="SpinnerPrivate" cname="GtkSpinnerPrivate" opaque="true" hidden="true"/>
    <struct name="StatusIconPrivate" cname="GtkStatusIconPrivate" opaque="true" hidden="true"/>
    <struct name="StatusbarPrivate" cname="GtkStatusbarPrivate" opaque="true" hidden="true"/>
    <struct name="StockItem" cname="GtkStockItem" opaque="false" hidden="false">
      <field cname="stock_id" access="public" writeable="true" readable="true" name="StockId" type="gchar*"/>
      <field cname="label" access="public" writeable="true" readable="true" name="Label" type="gchar*"/>
      <field cname="modifier" access="public" writeable="true" readable="true" name="Modifier" type="GdkModifierType"/>
      <field cname="keyval" access="public" writeable="true" readable="true" name="Keyval" type="guint"/>
      <field cname="translation_domain" access="public" writeable="true" readable="true" name="TranslationDomain" type="gchar*"/>
      <method name="Free" cname="gtk_stock_item_free">
        <return-type type="void"/>
        <parameters/>
      </method>
    </struct>
    <struct name="StyleContextPrivate" cname="GtkStyleContextPrivate" opaque="true" hidden="true"/>
    <struct name="StylePropertiesPrivate" cname="GtkStylePropertiesPrivate" opaque="true" hidden="true"/>
    <struct name="SwitchPrivate" cname="GtkSwitchPrivate" opaque="true" hidden="true"/>
    <boxed name="SymbolicColor" cname="GtkSymbolicColor" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_symbolic_color_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_symbolic_color_new_alpha">
        <parameters>
          <parameter name="color" type="GtkSymbolicColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="factor" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_symbolic_color_new_literal">
        <parameters>
          <parameter name="color" type="GdkRGBA*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gtk_symbolic_color_new_mix">
        <parameters>
          <parameter name="color1" type="GtkSymbolicColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="color2" type="GtkSymbolicColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="factor" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_symbolic_color_new_name">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_symbolic_color_new_shade">
        <parameters>
          <parameter name="color" type="GtkSymbolicColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="factor" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor cname="gtk_symbolic_color_new_win32">
        <parameters>
          <parameter name="theme_class" type="const-gchar*"/>
          <parameter name="id" type="gint"/>
        </parameters>
      </constructor>
      <method name="Ref" cname="gtk_symbolic_color_ref" deprecated="true">
        <return-type type="GtkSymbolicColor*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Resolve" cname="gtk_symbolic_color_resolve" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="props" type="GtkStyleProperties*"/>
          <parameter name="resolved_color" type="GdkRGBA*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ToString" cname="gtk_symbolic_color_to_string" deprecated="true">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gtk_symbolic_color_unref" deprecated="true">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="TableChild" cname="GtkTableChild" opaque="false" hidden="false">
      <field cname="widget" access="public" writeable="true" readable="true" name="Widget" type="GtkWidget*"/>
      <field cname="left_attach" access="public" writeable="true" readable="true" name="LeftAttach" type="guint16"/>
      <field cname="right_attach" access="public" writeable="true" readable="true" name="RightAttach" type="guint16"/>
      <field cname="top_attach" access="public" writeable="true" readable="true" name="TopAttach" type="guint16"/>
      <field cname="bottom_attach" access="public" writeable="true" readable="true" name="BottomAttach" type="guint16"/>
      <field cname="xpadding" access="public" writeable="true" readable="true" name="Xpadding" type="guint16"/>
      <field cname="ypadding" access="public" writeable="true" readable="true" name="Ypadding" type="guint16"/>
      <field cname="xexpand" access="public" writeable="true" readable="true" bits="1" name="Xexpand" type="guint"/>
      <field cname="yexpand" access="public" writeable="true" readable="true" bits="1" name="Yexpand" type="guint"/>
      <field cname="xshrink" access="public" writeable="true" readable="true" bits="1" name="Xshrink" type="guint"/>
      <field cname="yshrink" access="public" writeable="true" readable="true" bits="1" name="Yshrink" type="guint"/>
      <field cname="xfill" access="public" writeable="true" readable="true" bits="1" name="Xfill" type="guint"/>
      <field cname="yfill" access="public" writeable="true" readable="true" bits="1" name="Yfill" type="guint"/>
    </struct>
    <struct name="TablePrivate" cname="GtkTablePrivate" opaque="true" hidden="true"/>
    <struct name="TableRowCol" cname="GtkTableRowCol" opaque="false" hidden="false">
      <field cname="requisition" access="public" writeable="true" readable="true" name="Requisition" type="guint16"/>
      <field cname="allocation" access="public" writeable="true" readable="true" name="Allocation" type="guint16"/>
      <field cname="spacing" access="public" writeable="true" readable="true" name="Spacing" type="guint16"/>
      <field cname="need_expand" access="public" writeable="true" readable="true" bits="1" name="NeedExpand" type="guint"/>
      <field cname="need_shrink" access="public" writeable="true" readable="true" bits="1" name="NeedShrink" type="guint"/>
      <field cname="expand" access="public" writeable="true" readable="true" bits="1" name="Expand" type="guint"/>
      <field cname="shrink" access="public" writeable="true" readable="true" bits="1" name="Shrink" type="guint"/>
      <field cname="empty" access="public" writeable="true" readable="true" bits="1" name="Empty" type="guint"/>
    </struct>
    <boxed name="TargetEntry" cname="GtkTargetEntry" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_target_entry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="target" access="public" writeable="true" readable="true" name="Target" type="gchar*"/>
      <field cname="flags" access="public" writeable="true" readable="true" name="Flags" type="guint"/>
      <field cname="info" access="public" writeable="true" readable="true" name="Info" type="guint"/>
      <constructor cname="gtk_target_entry_new">
        <parameters>
          <parameter name="target" type="const-gchar*"/>
          <parameter name="flags" type="guint"/>
          <parameter name="info" type="guint"/>
        </parameters>
      </constructor>
      <method name="Copy" cname="gtk_target_entry_copy">
        <return-type type="GtkTargetEntry*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_target_entry_free">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <boxed name="TargetList" cname="GtkTargetList" opaque="true" hidden="false">
      <method name="GetType" cname="gtk_target_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_target_list_new">
        <parameters>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="1"/>
          <parameter name="ntargets" type="guint"/>
        </parameters>
      </constructor>
      <method name="Add" cname="gtk_target_list_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="flags" type="guint"/>
          <parameter name="info" type="guint"/>
        </parameters>
      </method>
      <method name="AddImageTargets" cname="gtk_target_list_add_image_targets">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="guint"/>
          <parameter name="writable" type="gboolean"/>
        </parameters>
      </method>
      <method name="AddRichTextTargets" cname="gtk_target_list_add_rich_text_targets">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="guint"/>
          <parameter name="deserializable" type="gboolean"/>
          <parameter name="buffer" type="GtkTextBuffer*"/>
        </parameters>
      </method>
      <method name="AddTable" cname="gtk_target_list_add_table">
        <return-type type="void"/>
        <parameters>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="1"/>
          <parameter name="ntargets" type="guint"/>
        </parameters>
      </method>
      <method name="AddTextTargets" cname="gtk_target_list_add_text_targets">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="guint"/>
        </parameters>
      </method>
      <method name="AddUriTargets" cname="gtk_target_list_add_uri_targets">
        <return-type type="void"/>
        <parameters>
          <parameter name="info" type="guint"/>
        </parameters>
      </method>
      <method name="Find" cname="gtk_target_list_find">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="guint"/>
        </parameters>
      </method>
      <method name="Ref" cname="gtk_target_list_ref">
        <return-type type="GtkTargetList*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Remove" cname="gtk_target_list_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Unref" cname="gtk_target_list_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="TearoffMenuItemPrivate" cname="GtkTearoffMenuItemPrivate" opaque="true" hidden="true"/>
    <struct name="TextAppearance" cname="GtkTextAppearance" opaque="false" hidden="false">
      <field cname="bg_color" access="public" writeable="true" readable="true" name="BgColor" type="GdkColor">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="fg_color" access="public" writeable="true" readable="true" name="FgColor" type="GdkColor">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="rise" access="public" writeable="true" readable="true" name="Rise" type="gint"/>
      <field cname="underline" access="public" writeable="true" readable="true" bits="4" name="Underline" type="guint"/>
      <field cname="strikethrough" access="public" writeable="true" readable="true" bits="1" name="Strikethrough" type="guint"/>
      <field cname="draw_bg" access="public" writeable="true" readable="true" bits="1" name="DrawBg" type="guint"/>
      <field cname="inside_selection" access="public" writeable="true" readable="true" bits="1" name="InsideSelection" type="guint"/>
      <field cname="is_text" access="public" writeable="true" readable="true" bits="1" name="IsText" type="guint"/>
      <field cname="rgba" access="public" writeable="true" readable="true" name="Rgba" type="GdkRGBA" array="true" array_len="2"/>
    </struct>
    <boxed name="TextAttributes" cname="GtkTextAttributes" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_text_attributes_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="refcount" access="private" writeable="false" readable="false" name="Refcount" type="guint"/>
      <field cname="appearance" access="public" writeable="true" readable="true" name="Appearance" type="GtkTextAppearance">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="justification" access="public" writeable="true" readable="true" name="Justification" type="GtkJustification"/>
      <field cname="direction" access="public" writeable="true" readable="true" name="Direction" type="GtkTextDirection"/>
      <field cname="font" access="public" writeable="true" readable="true" name="Font" type="PangoFontDescription*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="font_scale" access="public" writeable="true" readable="true" name="FontScale" type="gdouble"/>
      <field cname="left_margin" access="public" writeable="true" readable="true" name="LeftMargin" type="gint"/>
      <field cname="right_margin" access="public" writeable="true" readable="true" name="RightMargin" type="gint"/>
      <field cname="indent" access="public" writeable="true" readable="true" name="Indent" type="gint"/>
      <field cname="pixels_above_lines" access="public" writeable="true" readable="true" name="PixelsAboveLines" type="gint"/>
      <field cname="pixels_below_lines" access="public" writeable="true" readable="true" name="PixelsBelowLines" type="gint"/>
      <field cname="pixels_inside_wrap" access="public" writeable="true" readable="true" name="PixelsInsideWrap" type="gint"/>
      <field cname="tabs" access="public" writeable="true" readable="true" name="Tabs" type="PangoTabArray*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="wrap_mode" access="public" writeable="true" readable="true" name="WrapMode" type="GtkWrapMode"/>
      <field cname="language" access="public" writeable="true" readable="true" name="Language" type="PangoLanguage*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="pg_bg_color" access="private" writeable="false" readable="false" name="PgBgColor" type="GdkColor*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="invisible" access="public" writeable="true" readable="true" bits="1" name="Invisible" type="guint"/>
      <field cname="bg_full_height" access="public" writeable="true" readable="true" bits="1" name="BgFullHeight" type="guint"/>
      <field cname="editable" access="public" writeable="true" readable="true" bits="1" name="Editable" type="guint"/>
      <field cname="pg_bg_rgba" access="private" writeable="false" readable="false" name="PgBgRgba" type="GdkRGBA*">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="padding" access="private" writeable="false" readable="false" name="Padding" type="guint" array="true" array_len="3"/>
      <constructor cname="gtk_text_attributes_new" disable_void_ctor=""/>
      <method name="Copy" cname="gtk_text_attributes_copy">
        <return-type type="GtkTextAttributes*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="CopyValues" cname="gtk_text_attributes_copy_values">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="GtkTextAttributes*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Ref" cname="gtk_text_attributes_ref">
        <return-type type="GtkTextAttributes*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Unref" cname="gtk_text_attributes_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="TextBTree" cname="GtkTextBTree" opaque="true" hidden="false"/>
    <struct name="TextBufferPrivate" cname="GtkTextBufferPrivate" opaque="true" hidden="true"/>
    <boxed name="TextIter" cname="GtkTextIter" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_text_iter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="dummy1" access="private" writeable="false" readable="false" name="Dummy1" type="gpointer"/>
      <field cname="dummy2" access="private" writeable="false" readable="false" name="Dummy2" type="gpointer"/>
      <field cname="dummy3" access="private" writeable="false" readable="false" name="Dummy3" type="gint"/>
      <field cname="dummy4" access="private" writeable="false" readable="false" name="Dummy4" type="gint"/>
      <field cname="dummy5" access="private" writeable="false" readable="false" name="Dummy5" type="gint"/>
      <field cname="dummy6" access="private" writeable="false" readable="false" name="Dummy6" type="gint"/>
      <field cname="dummy7" access="private" writeable="false" readable="false" name="Dummy7" type="gint"/>
      <field cname="dummy8" access="private" writeable="false" readable="false" name="Dummy8" type="gint"/>
      <field cname="dummy9" access="private" writeable="false" readable="false" name="Dummy9" type="gpointer"/>
      <field cname="dummy10" access="private" writeable="false" readable="false" name="Dummy10" type="gpointer"/>
      <field cname="dummy11" access="private" writeable="false" readable="false" name="Dummy11" type="gint"/>
      <field cname="dummy12" access="private" writeable="false" readable="false" name="Dummy12" type="gint"/>
      <field cname="dummy13" access="private" writeable="false" readable="false" name="Dummy13" type="gint"/>
      <field cname="dummy14" access="private" writeable="false" readable="false" name="Dummy14" type="gpointer"/>
      <method name="Assign" cname="gtk_text_iter_assign">
        <return-type type="void"/>
        <parameters>
          <parameter name="other" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BackwardChar" cname="gtk_text_iter_backward_char">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardChars" cname="gtk_text_iter_backward_chars">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardCursorPosition" cname="gtk_text_iter_backward_cursor_position">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardCursorPositions" cname="gtk_text_iter_backward_cursor_positions">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardFindChar" cname="gtk_text_iter_backward_find_char">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="pred" type="GtkTextCharPredicate"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter allow-none="1" name="limit" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BackwardLine" cname="gtk_text_iter_backward_line">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardLines" cname="gtk_text_iter_backward_lines">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardSearch" cname="gtk_text_iter_backward_search">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
          <parameter name="flags" type="GtkTextSearchFlags"/>
          <parameter allow-none="1" name="match_start" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="match_end" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="limit" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BackwardSentenceStart" cname="gtk_text_iter_backward_sentence_start">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardSentenceStarts" cname="gtk_text_iter_backward_sentence_starts">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardToTagToggle" cname="gtk_text_iter_backward_to_tag_toggle">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
      <method name="BackwardVisibleCursorPosition" cname="gtk_text_iter_backward_visible_cursor_position">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardVisibleCursorPositions" cname="gtk_text_iter_backward_visible_cursor_positions">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardVisibleLine" cname="gtk_text_iter_backward_visible_line">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardVisibleLines" cname="gtk_text_iter_backward_visible_lines">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardVisibleWordStart" cname="gtk_text_iter_backward_visible_word_start">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardVisibleWordStarts" cname="gtk_text_iter_backward_visible_word_starts">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BackwardWordStart" cname="gtk_text_iter_backward_word_start">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="BackwardWordStarts" cname="gtk_text_iter_backward_word_starts">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="BeginsTag" cname="gtk_text_iter_begins_tag">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
      <method name="CanInsert" cname="gtk_text_iter_can_insert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="default_editability" type="gboolean"/>
        </parameters>
      </method>
      <method name="Compare" cname="gtk_text_iter_compare">
        <return-type type="gint"/>
        <parameters>
          <parameter name="rhs" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Copy" cname="gtk_text_iter_copy">
        <return-type type="GtkTextIter*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Editable" cname="gtk_text_iter_editable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="default_setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="EndsLine" cname="gtk_text_iter_ends_line">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="EndsSentence" cname="gtk_text_iter_ends_sentence">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="EndsTag" cname="gtk_text_iter_ends_tag">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
      <method name="EndsWord" cname="gtk_text_iter_ends_word">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Equal" cname="gtk_text_iter_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="rhs" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ForwardChar" cname="gtk_text_iter_forward_char">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardChars" cname="gtk_text_iter_forward_chars">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="ForwardCursorPosition" cname="gtk_text_iter_forward_cursor_position">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardCursorPositions" cname="gtk_text_iter_forward_cursor_positions">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="ForwardFindChar" cname="gtk_text_iter_forward_find_char">
        <return-type type="gboolean"/>
        <parameters>
          <parameter closure="1" scope="call" name="pred" type="GtkTextCharPredicate"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter allow-none="1" name="limit" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ForwardLine" cname="gtk_text_iter_forward_line">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardLines" cname="gtk_text_iter_forward_lines">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="ForwardSearch" cname="gtk_text_iter_forward_search">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="str" type="const-gchar*"/>
          <parameter name="flags" type="GtkTextSearchFlags"/>
          <parameter allow-none="1" name="match_start" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="match_end" type="GtkTextIter*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="limit" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ForwardSentenceEnd" cname="gtk_text_iter_forward_sentence_end">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardSentenceEnds" cname="gtk_text_iter_forward_sentence_ends">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="ForwardToEnd" cname="gtk_text_iter_forward_to_end">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ForwardToLineEnd" cname="gtk_text_iter_forward_to_line_end">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardToTagToggle" cname="gtk_text_iter_forward_to_tag_toggle">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
      <method name="ForwardVisibleCursorPosition" cname="gtk_text_iter_forward_visible_cursor_position">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardVisibleCursorPositions" cname="gtk_text_iter_forward_visible_cursor_positions">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="ForwardVisibleLine" cname="gtk_text_iter_forward_visible_line">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardVisibleLines" cname="gtk_text_iter_forward_visible_lines">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="ForwardVisibleWordEnd" cname="gtk_text_iter_forward_visible_word_end">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardVisibleWordEnds" cname="gtk_text_iter_forward_visible_word_ends">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="ForwardWordEnd" cname="gtk_text_iter_forward_word_end">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ForwardWordEnds" cname="gtk_text_iter_forward_word_ends">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="Free" cname="gtk_text_iter_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAttributes" cname="gtk_text_iter_get_attributes">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="values" type="GtkTextAttributes*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetBuffer" cname="gtk_text_iter_get_buffer">
        <return-type type="GtkTextBuffer*"/>
        <parameters/>
      </method>
      <method name="GetBytesInLine" cname="gtk_text_iter_get_bytes_in_line">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetChar" cname="gtk_text_iter_get_char">
        <return-type type="gunichar"/>
        <parameters/>
      </method>
      <method name="GetCharsInLine" cname="gtk_text_iter_get_chars_in_line">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetChildAnchor" cname="gtk_text_iter_get_child_anchor">
        <return-type type="GtkTextChildAnchor*"/>
        <parameters/>
      </method>
      <method name="GetLanguage" cname="gtk_text_iter_get_language">
        <return-type type="PangoLanguage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetLine" cname="gtk_text_iter_get_line">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetLineIndex" cname="gtk_text_iter_get_line_index">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetLineOffset" cname="gtk_text_iter_get_line_offset">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMarks" cname="gtk_text_iter_get_marks">
        <return-type type="GSList*" element_type="GtkTextMark*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="GetOffset" cname="gtk_text_iter_get_offset">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPixbuf" cname="gtk_text_iter_get_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters/>
      </method>
      <method name="GetSlice" cname="gtk_text_iter_get_slice">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetTags" cname="gtk_text_iter_get_tags">
        <return-type type="GSList*" element_type="GtkTextTag*" elements_owned="true"/>
        <parameters/>
      </method>
      <method name="GetText" cname="gtk_text_iter_get_text">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetToggledTags" cname="gtk_text_iter_get_toggled_tags">
        <return-type type="GSList*" element_type="GtkTextTag*" elements_owned="true"/>
        <parameters>
          <parameter name="toggled_on" type="gboolean"/>
        </parameters>
      </method>
      <method name="GetVisibleLineIndex" cname="gtk_text_iter_get_visible_line_index">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetVisibleLineOffset" cname="gtk_text_iter_get_visible_line_offset">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetVisibleSlice" cname="gtk_text_iter_get_visible_slice">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetVisibleText" cname="gtk_text_iter_get_visible_text">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="HasTag" cname="gtk_text_iter_has_tag">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
      <method name="InRange" cname="gtk_text_iter_in_range">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="start" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="end" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InsideSentence" cname="gtk_text_iter_inside_sentence">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="InsideWord" cname="gtk_text_iter_inside_word">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsCursorPosition" cname="gtk_text_iter_is_cursor_position">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsEnd" cname="gtk_text_iter_is_end">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="IsStart" cname="gtk_text_iter_is_start">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Order" cname="gtk_text_iter_order">
        <return-type type="void"/>
        <parameters>
          <parameter name="second" type="GtkTextIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLine" cname="gtk_text_iter_set_line">
        <return-type type="void"/>
        <parameters>
          <parameter name="line_number" type="gint"/>
        </parameters>
      </method>
      <method name="SetLineIndex" cname="gtk_text_iter_set_line_index">
        <return-type type="void"/>
        <parameters>
          <parameter name="byte_on_line" type="gint"/>
        </parameters>
      </method>
      <method name="SetLineOffset" cname="gtk_text_iter_set_line_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="char_on_line" type="gint"/>
        </parameters>
      </method>
      <method name="SetOffset" cname="gtk_text_iter_set_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="char_offset" type="gint"/>
        </parameters>
      </method>
      <method name="SetVisibleLineIndex" cname="gtk_text_iter_set_visible_line_index">
        <return-type type="void"/>
        <parameters>
          <parameter name="byte_on_line" type="gint"/>
        </parameters>
      </method>
      <method name="SetVisibleLineOffset" cname="gtk_text_iter_set_visible_line_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="char_on_line" type="gint"/>
        </parameters>
      </method>
      <method name="StartsLine" cname="gtk_text_iter_starts_line">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="StartsSentence" cname="gtk_text_iter_starts_sentence">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="StartsWord" cname="gtk_text_iter_starts_word">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="TogglesTag" cname="gtk_text_iter_toggles_tag">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="tag" type="GtkTextTag*"/>
        </parameters>
      </method>
    </boxed>
    <struct name="TextTagPrivate" cname="GtkTextTagPrivate" opaque="true" hidden="true"/>
    <struct name="TextTagTablePrivate" cname="GtkTextTagTablePrivate" opaque="true" hidden="true"/>
    <struct name="TextViewPrivate" cname="GtkTextViewPrivate" opaque="true" hidden="true"/>
    <struct name="ThemeEngine" cname="GtkThemeEngine" opaque="true" hidden="false"/>
    <struct name="ThemingEnginePrivate" cname="GtkThemingEnginePrivate" opaque="true" hidden="true"/>
    <struct name="ToggleActionEntry" cname="GtkToggleActionEntry" opaque="false" hidden="false">
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="stock_id" access="public" writeable="true" readable="true" name="StockId" type="gchar*"/>
      <field cname="label" access="public" writeable="true" readable="true" name="Label" type="gchar*"/>
      <field cname="accelerator" access="public" writeable="true" readable="true" name="Accelerator" type="gchar*"/>
      <field cname="tooltip" access="public" writeable="true" readable="true" name="Tooltip" type="gchar*"/>
      <field cname="callback" access="public" writeable="true" readable="true" name="Callback" type="GCallback"/>
      <field cname="is_active" access="public" writeable="true" readable="true" name="IsActive" type="gboolean"/>
    </struct>
    <struct name="ToggleActionPrivate" cname="GtkToggleActionPrivate" opaque="true" hidden="true"/>
    <struct name="ToggleButtonPrivate" cname="GtkToggleButtonPrivate" opaque="true" hidden="true"/>
    <struct name="ToggleToolButtonPrivate" cname="GtkToggleToolButtonPrivate" opaque="true" hidden="true"/>
    <struct name="ToolButtonPrivate" cname="GtkToolButtonPrivate" opaque="true" hidden="true"/>
    <struct name="ToolItemGroupPrivate" cname="GtkToolItemGroupPrivate" opaque="true" hidden="true"/>
    <struct name="ToolItemPrivate" cname="GtkToolItemPrivate" opaque="true" hidden="true"/>
    <struct name="ToolPalettePrivate" cname="GtkToolPalettePrivate" opaque="true" hidden="true"/>
    <struct name="ToolbarPrivate" cname="GtkToolbarPrivate" opaque="true" hidden="true"/>
    <boxed name="TreeIter" cname="GtkTreeIter" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_tree_iter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="stamp" access="public" writeable="true" readable="true" name="Stamp" type="gint"/>
      <field cname="user_data" access="public" writeable="true" readable="true" name="UserData" type="gpointer"/>
      <field cname="user_data2" access="public" writeable="true" readable="true" name="UserData2" type="gpointer"/>
      <field cname="user_data3" access="public" writeable="true" readable="true" name="UserData3" type="gpointer"/>
      <method name="Copy" cname="gtk_tree_iter_copy">
        <return-type type="GtkTreeIter*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_tree_iter_free">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="TreeModelFilterPrivate" cname="GtkTreeModelFilterPrivate" opaque="true" hidden="true"/>
    <struct name="TreeModelSortPrivate" cname="GtkTreeModelSortPrivate" opaque="true" hidden="true"/>
    <boxed name="TreePath" cname="GtkTreePath" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_tree_path_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tree_path_new" disable_void_ctor=""/>
      <constructor cname="gtk_tree_path_new_first" disable_void_ctor=""/>
      <constructor cname="gtk_tree_path_new_from_string">
        <parameters>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="AppendIndex" cname="gtk_tree_path_append_index">
        <return-type type="void"/>
        <parameters>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="Compare" cname="gtk_tree_path_compare">
        <return-type type="gint"/>
        <parameters>
          <parameter name="b" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Copy" cname="gtk_tree_path_copy">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Down" cname="gtk_tree_path_down">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_tree_path_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetDepth" cname="gtk_tree_path_get_depth">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetIndicesWithDepth" cname="gtk_tree_path_get_indices_with_depth">
        <return-type type="gint*" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter allow-none="1" name="depth" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_tree_path_is_ancestor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="descendant" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsDescendant" cname="gtk_tree_path_is_descendant">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ancestor" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Next" cname="gtk_tree_path_next">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PrependIndex" cname="gtk_tree_path_prepend_index">
        <return-type type="void"/>
        <parameters>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="Prev" cname="gtk_tree_path_prev">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="ToString" cname="gtk_tree_path_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Up" cname="gtk_tree_path_up">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
    </boxed>
    <boxed name="TreeRowReference" cname="GtkTreeRowReference" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_tree_row_reference_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_tree_row_reference_new">
        <parameters>
          <parameter name="model" type="GtkTreeModel*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <constructor cname="gtk_tree_row_reference_new_proxy">
        <parameters>
          <parameter name="proxy" type="GObject*"/>
          <parameter name="model" type="GtkTreeModel*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </constructor>
      <method name="Copy" cname="gtk_tree_row_reference_copy">
        <return-type type="GtkTreeRowReference*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_tree_row_reference_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetModel" cname="gtk_tree_row_reference_get_model">
        <return-type type="GtkTreeModel*"/>
        <parameters/>
      </method>
      <method name="GetPath" cname="gtk_tree_row_reference_get_path">
        <return-type type="GtkTreePath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Valid" cname="gtk_tree_row_reference_valid">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Deleted" cname="gtk_tree_row_reference_deleted" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy" type="GObject*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Inserted" cname="gtk_tree_row_reference_inserted" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy" type="GObject*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
    </boxed>
    <struct name="TreeSelectionPrivate" cname="GtkTreeSelectionPrivate" opaque="true" hidden="true"/>
    <struct name="TreeStorePrivate" cname="GtkTreeStorePrivate" opaque="true" hidden="true"/>
    <struct name="TreeViewColumnPrivate" cname="GtkTreeViewColumnPrivate" opaque="true" hidden="true"/>
    <struct name="TreeViewPrivate" cname="GtkTreeViewPrivate" opaque="true" hidden="true"/>
    <struct name="UIManagerPrivate" cname="GtkUIManagerPrivate" opaque="true" hidden="true"/>
    <struct name="ViewportPrivate" cname="GtkViewportPrivate" opaque="true" hidden="true"/>
    <struct name="WidgetAuxInfo" cname="GtkWidgetAuxInfo" opaque="false" hidden="false">
      <field cname="width" access="public" writeable="true" readable="true" name="Width" type="gint"/>
      <field cname="height" access="public" writeable="true" readable="true" name="Height" type="gint"/>
      <field cname="halign" access="public" writeable="true" readable="true" bits="4" name="Halign" type="guint"/>
      <field cname="valign" access="public" writeable="true" readable="true" bits="4" name="Valign" type="guint"/>
      <field cname="margin" access="public" writeable="true" readable="true" name="Margin" type="GtkBorder">
        <warning>missing glib:type-name</warning>
      </field>
    </struct>
    <struct name="WidgetClassPrivate" cname="GtkWidgetClassPrivate" opaque="true" hidden="true"/>
    <boxed name="WidgetPath" cname="GtkWidgetPath" opaque="false" hidden="false">
      <method name="GetType" cname="gtk_widget_path_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gtk_widget_path_new" disable_void_ctor=""/>
      <method name="AppendForWidget" cname="gtk_widget_path_append_for_widget">
        <return-type type="gint"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="AppendType" cname="gtk_widget_path_append_type">
        <return-type type="gint"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="AppendWithSiblings" cname="gtk_widget_path_append_with_siblings">
        <return-type type="gint"/>
        <parameters>
          <parameter name="siblings" type="GtkWidgetPath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="sibling_index" type="guint"/>
        </parameters>
      </method>
      <method name="Copy" cname="gtk_widget_path_copy">
        <return-type type="GtkWidgetPath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="gtk_widget_path_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetObjectType" cname="gtk_widget_path_get_object_type">
        <return-type type="GType"/>
        <parameters/>
      </method>
      <method name="HasParent" cname="gtk_widget_path_has_parent">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="IsType" cname="gtk_widget_path_is_type">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="IterAddClass" cname="gtk_widget_path_iter_add_class">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterAddRegion" cname="gtk_widget_path_iter_add_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GtkRegionFlags"/>
        </parameters>
      </method>
      <method name="IterClearClasses" cname="gtk_widget_path_iter_clear_classes">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterClearRegions" cname="gtk_widget_path_iter_clear_regions">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterGetName" cname="gtk_widget_path_iter_get_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterGetObjectType" cname="gtk_widget_path_iter_get_object_type">
        <return-type type="GType"/>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterGetSiblingIndex" cname="gtk_widget_path_iter_get_sibling_index">
        <return-type type="guint"/>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterGetSiblings" cname="gtk_widget_path_iter_get_siblings">
        <return-type type="GtkWidgetPath*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterHasClass" cname="gtk_widget_path_iter_has_class">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterHasName" cname="gtk_widget_path_iter_has_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterHasQclass" cname="gtk_widget_path_iter_has_qclass">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="qname" type="guint32"/>
        </parameters>
      </method>
      <method name="IterHasQname" cname="gtk_widget_path_iter_has_qname">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="qname" type="guint32"/>
        </parameters>
      </method>
      <method name="IterHasQregion" cname="gtk_widget_path_iter_has_qregion">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="qname" type="guint32"/>
          <parameter name="flags" type="GtkRegionFlags" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IterHasRegion" cname="gtk_widget_path_iter_has_region">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="flags" type="GtkRegionFlags" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IterListClasses" cname="gtk_widget_path_iter_list_classes">
        <return-type type="GSList*" element_type="gchar*" elements_owned="true"/>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterListRegions" cname="gtk_widget_path_iter_list_regions">
        <return-type type="GSList*" element_type="gchar*" elements_owned="true"/>
        <parameters>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="IterRemoveClass" cname="gtk_widget_path_iter_remove_class">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterRemoveRegion" cname="gtk_widget_path_iter_remove_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterSetName" cname="gtk_widget_path_iter_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IterSetObjectType" cname="gtk_widget_path_iter_set_object_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="pos" type="gint"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="Length" cname="gtk_widget_path_length">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="PrependType" cname="gtk_widget_path_prepend_type">
        <return-type type="void"/>
        <parameters>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="Ref" cname="gtk_widget_path_ref">
        <return-type type="GtkWidgetPath*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="ToString" cname="gtk_widget_path_to_string">
        <return-type type="gchar*" owned="true"/>
        <parameters/>
      </method>
      <method name="Unref" cname="gtk_widget_path_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <struct name="WidgetPrivate" cname="GtkWidgetPrivate" opaque="true" hidden="true"/>
    <struct name="WindowGeometryInfo" cname="GtkWindowGeometryInfo" opaque="true" hidden="false"/>
    <struct name="WindowGroupPrivate" cname="GtkWindowGroupPrivate" opaque="true" hidden="true"/>
    <struct name="WindowPrivate" cname="GtkWindowPrivate" opaque="true" hidden="true"/>
    <struct name="_RcProperty" cname="_GtkRcProperty" opaque="false" hidden="false">
      <field cname="type_name" access="public" writeable="true" readable="true" name="TypeName" type="guint32"/>
      <field cname="property_name" access="public" writeable="true" readable="true" name="PropertyName" type="guint32"/>
      <field cname="origin" access="public" writeable="true" readable="true" name="Origin" type="gchar*"/>
      <field cname="value" access="public" writeable="true" readable="true" name="Value" type="GValue">
        <warning>missing glib:type-name</warning>
      </field>
    </struct>
    <object name="Global" cname="GtkGlobal" opaque="true">
      <method name="AccelGroupsActivate" cname="gtk_accel_groups_activate" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="accel_key" type="guint"/>
          <parameter name="accel_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AccelGroupsFromObject" cname="gtk_accel_groups_from_object" shared="true">
        <return-type type="GSList*" element_type="GtkAccelGroup*"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
        </parameters>
      </method>
      <method name="AcceleratorGetDefaultModMask" cname="gtk_accelerator_get_default_mod_mask" shared="true">
        <return-type type="GdkModifierType"/>
      </method>
      <method name="AcceleratorGetLabel" cname="gtk_accelerator_get_label" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="accelerator_key" type="guint"/>
          <parameter name="accelerator_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AcceleratorGetLabelWithKeycode" cname="gtk_accelerator_get_label_with_keycode" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="display" type="GdkDisplay*"/>
          <parameter name="accelerator_key" type="guint"/>
          <parameter name="keycode" type="guint"/>
          <parameter name="accelerator_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AcceleratorName" cname="gtk_accelerator_name" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="accelerator_key" type="guint"/>
          <parameter name="accelerator_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AcceleratorNameWithKeycode" cname="gtk_accelerator_name_with_keycode" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="display" type="GdkDisplay*"/>
          <parameter name="accelerator_key" type="guint"/>
          <parameter name="keycode" type="guint"/>
          <parameter name="accelerator_mods" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AcceleratorParse" cname="gtk_accelerator_parse" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="accelerator" type="const-gchar*"/>
          <parameter allow-none="1" name="accelerator_key" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="accelerator_mods" type="GdkModifierType" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="AcceleratorParseWithKeycode" cname="gtk_accelerator_parse_with_keycode" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="accelerator" type="const-gchar*"/>
          <parameter allow-none="1" name="accelerator_key" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="accelerator_codes" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="accelerator_mods" type="GdkModifierType" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="AcceleratorSetDefaultModMask" cname="gtk_accelerator_set_default_mod_mask" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="default_mod_mask" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AcceleratorValid" cname="gtk_accelerator_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="AlternativeDialogButtonOrder" cname="gtk_alternative_dialog_button_order" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="screen" type="GdkScreen*"/>
        </parameters>
      </method>
      <method name="BindingEntryAddSignalFromString" cname="gtk_binding_entry_add_signal_from_string" shared="true">
        <return-type type="GTokenType"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="signal_desc" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="BindingEntryAddSignall" cname="gtk_binding_entry_add_signall" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
          <parameter name="signal_name" type="const-gchar*"/>
          <parameter name="binding_args" type="GSList*" element_type="GSList*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BindingEntryRemove" cname="gtk_binding_entry_remove" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="BindingEntrySkip" cname="gtk_binding_entry_skip" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="binding_set" type="GtkBindingSet*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="BindingSetByClass" cname="gtk_binding_set_by_class" shared="true">
        <return-type type="GtkBindingSet*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="object_class" type="gpointer"/>
        </parameters>
      </method>
      <method name="BindingSetFind" cname="gtk_binding_set_find" shared="true">
        <return-type type="GtkBindingSet*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="set_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="BindingSetNew" cname="gtk_binding_set_new" shared="true">
        <return-type type="GtkBindingSet*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="set_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="BindingsActivate" cname="gtk_bindings_activate" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="BindingsActivateEvent" cname="gtk_bindings_activate_event" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="GObject*"/>
          <parameter name="event" type="GdkEventKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="BuilderErrorQuark" cname="gtk_builder_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="CairoShouldDrawWindow" cname="gtk_cairo_should_draw_window" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="CairoTransformToWindow" cname="gtk_cairo_transform_to_window" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="window" type="GdkWindow*"/>
        </parameters>
      </method>
      <method name="CheckVersion" cname="gtk_check_version" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="required_major" type="guint"/>
          <parameter name="required_minor" type="guint"/>
          <parameter name="required_micro" type="guint"/>
        </parameters>
      </method>
      <method name="CssProviderErrorQuark" cname="gtk_css_provider_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="DeviceGrabAdd" cname="gtk_device_grab_add" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="device" type="GdkDevice*"/>
          <parameter name="block_others" type="gboolean"/>
        </parameters>
      </method>
      <method name="DeviceGrabRemove" cname="gtk_device_grab_remove" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="device" type="GdkDevice*"/>
        </parameters>
      </method>
      <method name="DisableSetlocale" cname="gtk_disable_setlocale" shared="true">
        <return-type type="void"/>
      </method>
      <method name="DistributeNaturalAllocation" cname="gtk_distribute_natural_allocation" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="extra_space" type="gint"/>
          <parameter name="n_requested_sizes" type="guint"/>
          <parameter name="sizes" type="GtkRequestedSize*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DragFinish" cname="gtk_drag_finish" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="success" type="gboolean"/>
          <parameter name="del" type="gboolean"/>
          <parameter name="time_" type="guint32"/>
        </parameters>
      </method>
      <method name="DragGetSourceWidget" cname="gtk_drag_get_source_widget" shared="true">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
        </parameters>
      </method>
      <method name="DragSetIconDefault" cname="gtk_drag_set_icon_default" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
        </parameters>
      </method>
      <method name="DragSetIconGicon" cname="gtk_drag_set_icon_gicon" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="icon" type="GIcon*"/>
          <parameter name="hot_x" type="gint"/>
          <parameter name="hot_y" type="gint"/>
        </parameters>
      </method>
      <method name="DragSetIconName" cname="gtk_drag_set_icon_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="icon_name" type="const-gchar*"/>
          <parameter name="hot_x" type="gint"/>
          <parameter name="hot_y" type="gint"/>
        </parameters>
      </method>
      <method name="DragSetIconPixbuf" cname="gtk_drag_set_icon_pixbuf" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
          <parameter name="hot_x" type="gint"/>
          <parameter name="hot_y" type="gint"/>
        </parameters>
      </method>
      <method name="DragSetIconStock" cname="gtk_drag_set_icon_stock" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="hot_x" type="gint"/>
          <parameter name="hot_y" type="gint"/>
        </parameters>
      </method>
      <method name="DragSetIconSurface" cname="gtk_drag_set_icon_surface" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="surface" type="cairo.Surface"/>
        </parameters>
      </method>
      <method name="DragSetIconWidget" cname="gtk_drag_set_icon_widget" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GdkDragContext*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="hot_x" type="gint"/>
          <parameter name="hot_y" type="gint"/>
        </parameters>
      </method>
      <method name="DrawInsertionCursor" cname="gtk_draw_insertion_cursor" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="location" type="cairo_rectangle_int_t"/>
          <parameter name="is_primary" type="gboolean"/>
          <parameter name="direction" type="GtkTextDirection"/>
          <parameter name="draw_arrow" type="gboolean"/>
        </parameters>
      </method>
      <method name="EventsPending" cname="gtk_events_pending" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="False" cname="gtk_false" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="FileChooserErrorQuark" cname="gtk_file_chooser_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="GetBinaryAge" cname="gtk_get_binary_age" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="GetCurrentEvent" cname="gtk_get_current_event" shared="true">
        <return-type type="GdkEvent*" owned="true"/>
      </method>
      <method name="GetCurrentEventDevice" cname="gtk_get_current_event_device" shared="true">
        <return-type type="GdkDevice*"/>
      </method>
      <method name="GetCurrentEventState" cname="gtk_get_current_event_state" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="state" type="GdkModifierType" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetCurrentEventTime" cname="gtk_get_current_event_time" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="GetDebugFlags" cname="gtk_get_debug_flags" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="GetDefaultLanguage" cname="gtk_get_default_language" shared="true">
        <return-type type="PangoLanguage*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetEventWidget" cname="gtk_get_event_widget" shared="true">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </method>
      <method name="GetInterfaceAge" cname="gtk_get_interface_age" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="GetMajorVersion" cname="gtk_get_major_version" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="GetMicroVersion" cname="gtk_get_micro_version" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="GetMinorVersion" cname="gtk_get_minor_version" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="GetOptionGroup" cname="gtk_get_option_group" shared="true">
        <return-type type="GOptionGroup*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="open_default_display" type="gboolean"/>
        </parameters>
      </method>
      <method name="GrabGetCurrent" cname="gtk_grab_get_current" shared="true">
        <return-type type="GtkWidget*"/>
      </method>
      <method name="IconSizeFromName" cname="gtk_icon_size_from_name" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="IconSizeGetName" cname="gtk_icon_size_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="IconSizeLookup" cname="gtk_icon_size_lookup" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="size" type="gint"/>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IconSizeLookupForSettings" cname="gtk_icon_size_lookup_for_settings" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="settings" type="GtkSettings*"/>
          <parameter name="size" type="gint"/>
          <parameter allow-none="1" name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="IconSizeRegister" cname="gtk_icon_size_register" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="IconSizeRegisterAlias" cname="gtk_icon_size_register_alias" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="alias" type="const-gchar*"/>
          <parameter name="target" type="gint"/>
        </parameters>
      </method>
      <method name="IconThemeErrorQuark" cname="gtk_icon_theme_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="Init" cname="gtk_init" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter allow-none="1" name="argv" type="char****" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="InitCheck" cname="gtk_init_check" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter allow-none="1" name="argv" type="char****" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="InitWithArgs" cname="gtk_init_with_args" shared="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter allow-none="1" name="argv" type="gchar****" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
          <parameter allow-none="1" name="parameter_string" type="const-gchar*"/>
          <parameter name="entries" type="GOptionEntry*" array="true" null_term_array="true"/>
          <parameter name="translation_domain" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="KeySnooperInstall" cname="gtk_key_snooper_install" shared="true" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter closure="1" name="snooper" type="GtkKeySnoopFunc"/>
          <parameter name="func_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="KeySnooperRemove" cname="gtk_key_snooper_remove" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="snooper_handler_id" type="guint"/>
        </parameters>
      </method>
      <method name="Main" cname="gtk_main" shared="true">
        <return-type type="void"/>
      </method>
      <method name="MainDoEvent" cname="gtk_main_do_event" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </method>
      <method name="MainIteration" cname="gtk_main_iteration" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="MainIterationDo" cname="gtk_main_iteration_do" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="blocking" type="gboolean"/>
        </parameters>
      </method>
      <method name="MainLevel" cname="gtk_main_level" shared="true">
        <return-type type="guint"/>
      </method>
      <method name="MainQuit" cname="gtk_main_quit" shared="true">
        <return-type type="void"/>
      </method>
      <method name="PaintArrow" cname="gtk_paint_arrow" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="arrow_type" type="GtkArrowType"/>
          <parameter name="fill" type="gboolean"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintBox" cname="gtk_paint_box" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintBoxGap" cname="gtk_paint_box_gap" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="gap_side" type="GtkPositionType"/>
          <parameter name="gap_x" type="gint"/>
          <parameter name="gap_width" type="gint"/>
        </parameters>
      </method>
      <method name="PaintCheck" cname="gtk_paint_check" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintDiamond" cname="gtk_paint_diamond" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintExpander" cname="gtk_paint_expander" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="expander_style" type="GtkExpanderStyle"/>
        </parameters>
      </method>
      <method name="PaintExtension" cname="gtk_paint_extension" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="gap_side" type="GtkPositionType"/>
        </parameters>
      </method>
      <method name="PaintFlatBox" cname="gtk_paint_flat_box" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintFocus" cname="gtk_paint_focus" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintHandle" cname="gtk_paint_handle" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </method>
      <method name="PaintHline" cname="gtk_paint_hline" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x1" type="gint"/>
          <parameter name="x2" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="PaintLayout" cname="gtk_paint_layout" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="use_text" type="gboolean"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="layout" type="PangoLayout*"/>
        </parameters>
      </method>
      <method name="PaintOption" cname="gtk_paint_option" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintResizeGrip" cname="gtk_paint_resize_grip" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="edge" type="GdkWindowEdge"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintShadow" cname="gtk_paint_shadow" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintShadowGap" cname="gtk_paint_shadow_gap" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="gap_side" type="GtkPositionType"/>
          <parameter name="gap_x" type="gint"/>
          <parameter name="gap_width" type="gint"/>
        </parameters>
      </method>
      <method name="PaintSlider" cname="gtk_paint_slider" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </method>
      <method name="PaintSpinner" cname="gtk_paint_spinner" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="step" type="guint"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintTab" cname="gtk_paint_tab" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter name="shadow_type" type="GtkShadowType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="PaintVline" cname="gtk_paint_vline" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="style" type="GtkStyle*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="state_type" type="GtkStateType"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter allow-none="1" name="detail" type="const-gchar*"/>
          <parameter name="y1_" type="gint"/>
          <parameter name="y2_" type="gint"/>
          <parameter name="x" type="gint"/>
        </parameters>
      </method>
      <method name="PaperSizeGetDefault" cname="gtk_paper_size_get_default" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="PaperSizeGetPaperSizes" cname="gtk_paper_size_get_paper_sizes" shared="true">
        <return-type type="GList*" element_type="GList*" elements_owned="true" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="include_custom" type="gboolean"/>
        </parameters>
      </method>
      <method name="ParseArgs" cname="gtk_parse_args" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="argc" type="gint*" owned="true" pass_as="ref"/>
          <parameter name="argv" type="char****" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
        </parameters>
      </method>
      <method name="PrintErrorQuark" cname="gtk_print_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="PrintRunPageSetupDialog" cname="gtk_print_run_page_setup_dialog" shared="true">
        <return-type type="GtkPageSetup*" owned="true"/>
        <parameters>
          <parameter allow-none="1" name="parent" type="GtkWindow*"/>
          <parameter allow-none="1" name="page_setup" type="GtkPageSetup*"/>
          <parameter name="settings" type="GtkPrintSettings*"/>
        </parameters>
      </method>
      <method name="PrintRunPageSetupDialogAsync" cname="gtk_print_run_page_setup_dialog_async" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="parent" type="GtkWindow*"/>
          <parameter allow-none="1" name="page_setup" type="GtkPageSetup*"/>
          <parameter name="settings" type="GtkPrintSettings*"/>
          <parameter closure="4" scope="async" name="done_cb" type="GtkPageSetupDoneFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="PropagateEvent" cname="gtk_propagate_event" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </method>
      <method name="RcAddDefaultFile" cname="gtk_rc_add_default_file" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="filename" type="const-gfilename*"/>
        </parameters>
      </method>
      <method name="RcFindModuleInPath" cname="gtk_rc_find_module_in_path" shared="true" deprecated="true">
        <return-type type="gfilename*" owned="true"/>
        <parameters>
          <parameter name="module_file" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RcFindPixmapInPath" cname="gtk_rc_find_pixmap_in_path" shared="true" deprecated="true">
        <return-type type="gfilename*" owned="true"/>
        <parameters>
          <parameter name="settings" type="GtkSettings*"/>
          <parameter name="scanner" type="GScanner*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="pixmap_file" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RcGetDefaultFiles" cname="gtk_rc_get_default_files" shared="true" deprecated="true">
        <return-type type="const-gchar**" array="true" null_term_array="true"/>
      </method>
      <method name="RcGetImModuleFile" cname="gtk_rc_get_im_module_file" shared="true" deprecated="true">
        <return-type type="gfilename*" owned="true"/>
      </method>
      <method name="RcGetImModulePath" cname="gtk_rc_get_im_module_path" shared="true" deprecated="true">
        <return-type type="gfilename*" owned="true"/>
      </method>
      <method name="RcGetModuleDir" cname="gtk_rc_get_module_dir" shared="true" deprecated="true">
        <return-type type="gfilename*" owned="true"/>
      </method>
      <method name="RcGetStyle" cname="gtk_rc_get_style" shared="true" deprecated="true">
        <return-type type="GtkStyle*"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="RcGetStyleByPaths" cname="gtk_rc_get_style_by_paths" shared="true" deprecated="true">
        <return-type type="GtkStyle*"/>
        <parameters>
          <parameter name="settings" type="GtkSettings*"/>
          <parameter allow-none="1" name="widget_path" type="const-gchar*"/>
          <parameter allow-none="1" name="class_path" type="const-gchar*"/>
          <parameter name="type" type="GType"/>
        </parameters>
      </method>
      <method name="RcGetThemeDir" cname="gtk_rc_get_theme_dir" shared="true" deprecated="true">
        <return-type type="gchar*" owned="true"/>
      </method>
      <method name="RcParse" cname="gtk_rc_parse" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RcParseColor" cname="gtk_rc_parse_color" shared="true" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="scanner" type="GScanner*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="color" type="GdkColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RcParseColorFull" cname="gtk_rc_parse_color_full" shared="true" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="scanner" type="GScanner*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter allow-none="1" name="style" type="GtkRcStyle*"/>
          <parameter name="color" type="GdkColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RcParsePriority" cname="gtk_rc_parse_priority" shared="true" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="scanner" type="GScanner*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="priority" type="GtkPathPriorityType"/>
        </parameters>
      </method>
      <method name="RcParseState" cname="gtk_rc_parse_state" shared="true" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="scanner" type="GScanner*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="state" type="GtkStateType" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="RcParseString" cname="gtk_rc_parse_string" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="rc_string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="RcPropertyParseBorder" cname="gtk_rc_property_parse_border" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="gstring" type="GString*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="property_value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RcPropertyParseColor" cname="gtk_rc_property_parse_color" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="gstring" type="GString*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="property_value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RcPropertyParseEnum" cname="gtk_rc_property_parse_enum" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="gstring" type="GString*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="property_value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RcPropertyParseFlags" cname="gtk_rc_property_parse_flags" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="gstring" type="GString*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="property_value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RcPropertyParseRequisition" cname="gtk_rc_property_parse_requisition" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pspec" type="GParamSpec*"/>
          <parameter name="gstring" type="GString*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="property_value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RcReparseAll" cname="gtk_rc_reparse_all" shared="true" deprecated="true">
        <return-type type="gboolean"/>
      </method>
      <method name="RcReparseAllForSettings" cname="gtk_rc_reparse_all_for_settings" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="settings" type="GtkSettings*"/>
          <parameter name="force_load" type="gboolean"/>
        </parameters>
      </method>
      <method name="RcResetStyles" cname="gtk_rc_reset_styles" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="settings" type="GtkSettings*"/>
        </parameters>
      </method>
      <method name="RcScannerNew" cname="gtk_rc_scanner_new" shared="true" deprecated="true">
        <return-type type="GScanner*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="RcSetDefaultFiles" cname="gtk_rc_set_default_files" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="filenames" type="const-gchar**" array="true" null_term_array="true"/>
        </parameters>
      </method>
      <method name="RecentChooserErrorQuark" cname="gtk_recent_chooser_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="RecentManagerErrorQuark" cname="gtk_recent_manager_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="RenderActivity" cname="gtk_render_activity" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderArrow" cname="gtk_render_arrow" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="angle" type="gdouble"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="size" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderBackground" cname="gtk_render_background" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderCheck" cname="gtk_render_check" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderExpander" cname="gtk_render_expander" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderExtension" cname="gtk_render_extension" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="gap_side" type="GtkPositionType"/>
        </parameters>
      </method>
      <method name="RenderFocus" cname="gtk_render_focus" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderFrame" cname="gtk_render_frame" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderFrameGap" cname="gtk_render_frame_gap" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="gap_side" type="GtkPositionType"/>
          <parameter name="xy0_gap" type="gdouble"/>
          <parameter name="xy1_gap" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderHandle" cname="gtk_render_handle" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderIcon" cname="gtk_render_icon" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderIconPixbuf" cname="gtk_render_icon_pixbuf" shared="true">
        <return-type type="GdkPixbuf*" owned="true"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="source" type="GtkIconSource*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method name="RenderInsertionCursor" cname="gtk_render_insertion_cursor" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="layout" type="PangoLayout*"/>
          <parameter name="index" type="gint"/>
          <parameter name="direction" type="PangoDirection"/>
        </parameters>
      </method>
      <method name="RenderLayout" cname="gtk_render_layout" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="layout" type="PangoLayout*"/>
        </parameters>
      </method>
      <method name="RenderLine" cname="gtk_render_line" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x0" type="gdouble"/>
          <parameter name="y0" type="gdouble"/>
          <parameter name="x1" type="gdouble"/>
          <parameter name="y1" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderOption" cname="gtk_render_option" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
        </parameters>
      </method>
      <method name="RenderSlider" cname="gtk_render_slider" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="GtkStyleContext*"/>
          <parameter name="cr" type="cairo.Context"/>
          <parameter name="x" type="gdouble"/>
          <parameter name="y" type="gdouble"/>
          <parameter name="width" type="gdouble"/>
          <parameter name="height" type="gdouble"/>
          <parameter name="orientation" type="GtkOrientation"/>
        </parameters>
      </method>
      <method name="RgbToHsv" cname="gtk_rgb_to_hsv" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="r" type="gdouble"/>
          <parameter name="g" type="gdouble"/>
          <parameter name="b" type="gdouble"/>
          <parameter name="h" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="s" type="gdouble*" owned="true" pass_as="out"/>
          <parameter name="v" type="gdouble*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="SelectionAddTarget" cname="gtk_selection_add_target" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="info" type="guint"/>
        </parameters>
      </method>
      <method name="SelectionAddTargets" cname="gtk_selection_add_targets" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="3"/>
          <parameter name="ntargets" type="guint"/>
        </parameters>
      </method>
      <method name="SelectionClearTargets" cname="gtk_selection_clear_targets" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SelectionConvert" cname="gtk_selection_convert" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="target" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="time_" type="guint32"/>
        </parameters>
      </method>
      <method name="SelectionOwnerSet" cname="gtk_selection_owner_set" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="time_" type="guint32"/>
        </parameters>
      </method>
      <method name="SelectionOwnerSetForDisplay" cname="gtk_selection_owner_set_for_display" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="display" type="GdkDisplay*"/>
          <parameter allow-none="1" name="widget" type="GtkWidget*"/>
          <parameter name="selection" type="GdkAtom">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="time_" type="guint32"/>
        </parameters>
      </method>
      <method name="SelectionRemoveAll" cname="gtk_selection_remove_all" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="SetDebugFlags" cname="gtk_set_debug_flags" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="flags" type="guint"/>
        </parameters>
      </method>
      <method name="ShowAboutDialog" cname="gtk_show_about_dialog" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter allow-none="1" name="parent" type="GtkWindow*"/>
          <parameter name="first_property_name" type="const-gchar*"/>
          <parameter name="arg2" type="va_list"/>
        </parameters>
      </method>
      <method name="ShowUri" cname="gtk_show_uri" shared="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter allow-none="1" name="screen" type="GdkScreen*"/>
          <parameter name="uri" type="const-gchar*"/>
          <parameter name="timestamp" type="guint32"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="StockAdd" cname="gtk_stock_add" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="items" type="GtkStockItem*" array="true" array_length_param_index="1"/>
          <parameter name="n_items" type="guint"/>
        </parameters>
      </method>
      <method name="StockAddStatic" cname="gtk_stock_add_static" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="items" type="GtkStockItem*" array="true" array_length_param_index="1"/>
          <parameter name="n_items" type="guint"/>
        </parameters>
      </method>
      <method name="StockListIds" cname="gtk_stock_list_ids" shared="true">
        <return-type type="GSList*" element_type="gchar*" elements_owned="true" owned="true"/>
      </method>
      <method name="StockLookup" cname="gtk_stock_lookup" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="stock_id" type="const-gchar*"/>
          <parameter name="item" type="GtkStockItem*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="StockSetTranslateFunc" cname="gtk_stock_set_translate_func" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="domain" type="const-gchar*"/>
          <parameter closure="2" destroy="3" scope="notified" name="func" type="GtkTranslateFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter scope="async" name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="TargetTableFree" cname="gtk_target_table_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="targets" type="GtkTargetEntry*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
        </parameters>
      </method>
      <method name="TargetTableNewFromList" cname="gtk_target_table_new_from_list" shared="true">
        <return-type type="GtkTargetEntry**" owned="true" array="true" array_length_param_index="1"/>
        <parameters>
          <parameter name="list" type="GtkTargetList*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_targets" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="TargetsIncludeImage" cname="gtk_targets_include_image" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="targets" type="GdkAtom*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="writable" type="gboolean"/>
        </parameters>
      </method>
      <method name="TargetsIncludeRichText" cname="gtk_targets_include_rich_text" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="targets" type="GdkAtom*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
          <parameter name="buffer" type="GtkTextBuffer*"/>
        </parameters>
      </method>
      <method name="TargetsIncludeText" cname="gtk_targets_include_text" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="targets" type="GdkAtom*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
        </parameters>
      </method>
      <method name="TargetsIncludeUri" cname="gtk_targets_include_uri" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="targets" type="GdkAtom*" array="true" array_length_param_index="1"/>
          <parameter name="n_targets" type="gint"/>
        </parameters>
      </method>
      <method name="TestCreateSimpleWindow" cname="gtk_test_create_simple_window" shared="true">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="window_title" type="const-gchar*"/>
          <parameter name="dialog_text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TestCreateWidget" cname="gtk_test_create_widget" shared="true">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="widget_type" type="GType"/>
          <parameter allow-none="1" name="first_property_name" type="const-gchar*"/>
          <parameter name="arg2" type="va_list"/>
        </parameters>
      </method>
      <method name="TestDisplayButtonWindow" cname="gtk_test_display_button_window" shared="true">
        <return-type type="GtkWidget*" owned="true"/>
        <parameters>
          <parameter name="window_title" type="const-gchar*"/>
          <parameter name="dialog_text" type="const-gchar*"/>
          <parameter name="arg2" type="va_list"/>
        </parameters>
      </method>
      <method name="TestFindLabel" cname="gtk_test_find_label" shared="true">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="label_pattern" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TestFindSibling" cname="gtk_test_find_sibling" shared="true">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="base_widget" type="GtkWidget*"/>
          <parameter name="widget_type" type="GType"/>
        </parameters>
      </method>
      <method name="TestFindWidget" cname="gtk_test_find_widget" shared="true">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="label_pattern" type="const-gchar*"/>
          <parameter name="widget_type" type="GType"/>
        </parameters>
      </method>
      <method name="TestInit" cname="gtk_test_init" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="argcp" type="gint" pass_as="ref"/>
          <parameter name="argvp" type="char****" owned="true" pass_as="ref" array="true" array_length_param_index="0"/>
          <parameter name="arg2" type="va_list"/>
        </parameters>
      </method>
      <method name="TestListAllTypes" cname="gtk_test_list_all_types" shared="true">
        <return-type type="GType*" array="true" array_length_param_index="0"/>
        <parameters>
          <parameter name="n_types" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="TestRegisterAllTypes" cname="gtk_test_register_all_types" shared="true">
        <return-type type="void"/>
      </method>
      <method name="TestSliderGetValue" cname="gtk_test_slider_get_value" shared="true">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="TestSliderSetPerc" cname="gtk_test_slider_set_perc" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="percentage" type="gdouble"/>
        </parameters>
      </method>
      <method name="TestSpinButtonClick" cname="gtk_test_spin_button_click" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="spinner" type="GtkSpinButton*"/>
          <parameter name="button" type="guint"/>
          <parameter name="upwards" type="gboolean"/>
        </parameters>
      </method>
      <method name="TestTextGet" cname="gtk_test_text_get" shared="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="TestTextSet" cname="gtk_test_text_set" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="TestWidgetClick" cname="gtk_test_widget_click" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="button" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="TestWidgetSendKey" cname="gtk_test_widget_send_key" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="keyval" type="guint"/>
          <parameter name="modifiers" type="GdkModifierType"/>
        </parameters>
      </method>
      <method name="TreeGetRowDragData" cname="gtk_tree_get_row_drag_data" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tree_model" type="GtkTreeModel*" owned="true" pass_as="out"/>
          <parameter name="path" type="GtkTreePath**" owned="true" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TreeRowReferenceDeleted" cname="gtk_tree_row_reference_deleted" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy" type="GObject*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TreeRowReferenceInserted" cname="gtk_tree_row_reference_inserted" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy" type="GObject*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="TreeRowReferenceReordered" cname="gtk_tree_row_reference_reordered" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="proxy" type="GObject*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="iter" type="GtkTreeIter*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="new_order" type="gint"/>
        </parameters>
      </method>
      <method name="TreeSetRowDragData" cname="gtk_tree_set_row_drag_data" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="selection_data" type="GtkSelectionData*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="tree_model" type="GtkTreeModel*"/>
          <parameter name="path" type="GtkTreePath*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="True" cname="gtk_true" shared="true">
        <return-type type="gboolean"/>
      </method>
    </object>
    <object name="Constants" cname="GtkConstants" opaque="true">
      <constant value="804" ctype="gint" gtype="gint" name="BINARY_AGE"/>
      <constant value="-1" ctype="gint" gtype="gint" name="INPUT_ERROR"/>
      <constant value="4" ctype="gint" gtype="gint" name="INTERFACE_AGE"/>
      <constant value="high" ctype="gchar*" gtype="gchar*" name="LEVEL_BAR_OFFSET_HIGH"/>
      <constant value="low" ctype="gchar*" gtype="gchar*" name="LEVEL_BAR_OFFSET_LOW"/>
      <constant value="3" ctype="gint" gtype="gint" name="MAJOR_VERSION"/>
      <constant value="7" ctype="gint" gtype="gint" name="MAX_COMPOSE_LEN"/>
      <constant value="4" ctype="gint" gtype="gint" name="MICRO_VERSION"/>
      <constant value="8" ctype="gint" gtype="gint" name="MINOR_VERSION"/>
      <constant value="iso_a3" ctype="gchar*" gtype="gchar*" name="PAPER_NAME_A3"/>
      <constant value="iso_a4" ctype="gchar*" gtype="gchar*" name="PAPER_NAME_A4"/>
      <constant value="iso_a5" ctype="gchar*" gtype="gchar*" name="PAPER_NAME_A5"/>
      <constant value="iso_b5" ctype="gchar*" gtype="gchar*" name="PAPER_NAME_B5"/>
      <constant value="na_executive" ctype="gchar*" gtype="gchar*" name="PAPER_NAME_EXECUTIVE"/>
      <constant value="na_legal" ctype="gchar*" gtype="gchar*" name="PAPER_NAME_LEGAL"/>
      <constant value="na_letter" ctype="gchar*" gtype="gchar*" name="PAPER_NAME_LETTER"/>
      <constant value="15" ctype="gint" gtype="gint" name="PATH_PRIO_MASK"/>
      <constant value="collate" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_COLLATE"/>
      <constant value="default-source" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_DEFAULT_SOURCE"/>
      <constant value="dither" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_DITHER"/>
      <constant value="duplex" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_DUPLEX"/>
      <constant value="finishings" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_FINISHINGS"/>
      <constant value="media-type" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_MEDIA_TYPE"/>
      <constant value="number-up" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_NUMBER_UP"/>
      <constant value="number-up-layout" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_NUMBER_UP_LAYOUT"/>
      <constant value="n-copies" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_N_COPIES"/>
      <constant value="orientation" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_ORIENTATION"/>
      <constant value="output-basename" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_OUTPUT_BASENAME"/>
      <constant value="output-bin" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_OUTPUT_BIN"/>
      <constant value="output-dir" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_OUTPUT_DIR"/>
      <constant value="output-file-format" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_OUTPUT_FILE_FORMAT"/>
      <constant value="output-uri" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_OUTPUT_URI"/>
      <constant value="page-ranges" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PAGE_RANGES"/>
      <constant value="page-set" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PAGE_SET"/>
      <constant value="paper-format" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PAPER_FORMAT"/>
      <constant value="paper-height" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PAPER_HEIGHT"/>
      <constant value="paper-width" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PAPER_WIDTH"/>
      <constant value="printer" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PRINTER"/>
      <constant value="printer-lpi" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PRINTER_LPI"/>
      <constant value="print-pages" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_PRINT_PAGES"/>
      <constant value="quality" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_QUALITY"/>
      <constant value="resolution" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_RESOLUTION"/>
      <constant value="resolution-x" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_RESOLUTION_X"/>
      <constant value="resolution-y" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_RESOLUTION_Y"/>
      <constant value="reverse" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_REVERSE"/>
      <constant value="scale" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_SCALE"/>
      <constant value="use-color" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_USE_COLOR"/>
      <constant value="win32-driver-extra" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_WIN32_DRIVER_EXTRA"/>
      <constant value="win32-driver-version" ctype="gchar*" gtype="gchar*" name="PRINT_SETTINGS_WIN32_DRIVER_VERSION"/>
      <constant value="10" ctype="gint" gtype="gint" name="PRIORITY_RESIZE"/>
      <constant value="gtk-about" ctype="gchar*" gtype="gchar*" name="STOCK_ABOUT"/>
      <constant value="gtk-add" ctype="gchar*" gtype="gchar*" name="STOCK_ADD"/>
      <constant value="gtk-apply" ctype="gchar*" gtype="gchar*" name="STOCK_APPLY"/>
      <constant value="gtk-bold" ctype="gchar*" gtype="gchar*" name="STOCK_BOLD"/>
      <constant value="gtk-cancel" ctype="gchar*" gtype="gchar*" name="STOCK_CANCEL"/>
      <constant value="gtk-caps-lock-warning" ctype="gchar*" gtype="gchar*" name="STOCK_CAPS_LOCK_WARNING"/>
      <constant value="gtk-cdrom" ctype="gchar*" gtype="gchar*" name="STOCK_CDROM"/>
      <constant value="gtk-clear" ctype="gchar*" gtype="gchar*" name="STOCK_CLEAR"/>
      <constant value="gtk-close" ctype="gchar*" gtype="gchar*" name="STOCK_CLOSE"/>
      <constant value="gtk-color-picker" ctype="gchar*" gtype="gchar*" name="STOCK_COLOR_PICKER"/>
      <constant value="gtk-connect" ctype="gchar*" gtype="gchar*" name="STOCK_CONNECT"/>
      <constant value="gtk-convert" ctype="gchar*" gtype="gchar*" name="STOCK_CONVERT"/>
      <constant value="gtk-copy" ctype="gchar*" gtype="gchar*" name="STOCK_COPY"/>
      <constant value="gtk-cut" ctype="gchar*" gtype="gchar*" name="STOCK_CUT"/>
      <constant value="gtk-delete" ctype="gchar*" gtype="gchar*" name="STOCK_DELETE"/>
      <constant value="gtk-dialog-authentication" ctype="gchar*" gtype="gchar*" name="STOCK_DIALOG_AUTHENTICATION"/>
      <constant value="gtk-dialog-error" ctype="gchar*" gtype="gchar*" name="STOCK_DIALOG_ERROR"/>
      <constant value="gtk-dialog-info" ctype="gchar*" gtype="gchar*" name="STOCK_DIALOG_INFO"/>
      <constant value="gtk-dialog-question" ctype="gchar*" gtype="gchar*" name="STOCK_DIALOG_QUESTION"/>
      <constant value="gtk-dialog-warning" ctype="gchar*" gtype="gchar*" name="STOCK_DIALOG_WARNING"/>
      <constant value="gtk-directory" ctype="gchar*" gtype="gchar*" name="STOCK_DIRECTORY"/>
      <constant value="gtk-discard" ctype="gchar*" gtype="gchar*" name="STOCK_DISCARD"/>
      <constant value="gtk-disconnect" ctype="gchar*" gtype="gchar*" name="STOCK_DISCONNECT"/>
      <constant value="gtk-dnd" ctype="gchar*" gtype="gchar*" name="STOCK_DND"/>
      <constant value="gtk-dnd-multiple" ctype="gchar*" gtype="gchar*" name="STOCK_DND_MULTIPLE"/>
      <constant value="gtk-edit" ctype="gchar*" gtype="gchar*" name="STOCK_EDIT"/>
      <constant value="gtk-execute" ctype="gchar*" gtype="gchar*" name="STOCK_EXECUTE"/>
      <constant value="gtk-file" ctype="gchar*" gtype="gchar*" name="STOCK_FILE"/>
      <constant value="gtk-find" ctype="gchar*" gtype="gchar*" name="STOCK_FIND"/>
      <constant value="gtk-find-and-replace" ctype="gchar*" gtype="gchar*" name="STOCK_FIND_AND_REPLACE"/>
      <constant value="gtk-floppy" ctype="gchar*" gtype="gchar*" name="STOCK_FLOPPY"/>
      <constant value="gtk-fullscreen" ctype="gchar*" gtype="gchar*" name="STOCK_FULLSCREEN"/>
      <constant value="gtk-goto-bottom" ctype="gchar*" gtype="gchar*" name="STOCK_GOTO_BOTTOM"/>
      <constant value="gtk-goto-first" ctype="gchar*" gtype="gchar*" name="STOCK_GOTO_FIRST"/>
      <constant value="gtk-goto-last" ctype="gchar*" gtype="gchar*" name="STOCK_GOTO_LAST"/>
      <constant value="gtk-goto-top" ctype="gchar*" gtype="gchar*" name="STOCK_GOTO_TOP"/>
      <constant value="gtk-go-back" ctype="gchar*" gtype="gchar*" name="STOCK_GO_BACK"/>
      <constant value="gtk-go-down" ctype="gchar*" gtype="gchar*" name="STOCK_GO_DOWN"/>
      <constant value="gtk-go-forward" ctype="gchar*" gtype="gchar*" name="STOCK_GO_FORWARD"/>
      <constant value="gtk-go-up" ctype="gchar*" gtype="gchar*" name="STOCK_GO_UP"/>
      <constant value="gtk-harddisk" ctype="gchar*" gtype="gchar*" name="STOCK_HARDDISK"/>
      <constant value="gtk-help" ctype="gchar*" gtype="gchar*" name="STOCK_HELP"/>
      <constant value="gtk-home" ctype="gchar*" gtype="gchar*" name="STOCK_HOME"/>
      <constant value="gtk-indent" ctype="gchar*" gtype="gchar*" name="STOCK_INDENT"/>
      <constant value="gtk-index" ctype="gchar*" gtype="gchar*" name="STOCK_INDEX"/>
      <constant value="gtk-info" ctype="gchar*" gtype="gchar*" name="STOCK_INFO"/>
      <constant value="gtk-italic" ctype="gchar*" gtype="gchar*" name="STOCK_ITALIC"/>
      <constant value="gtk-jump-to" ctype="gchar*" gtype="gchar*" name="STOCK_JUMP_TO"/>
      <constant value="gtk-justify-center" ctype="gchar*" gtype="gchar*" name="STOCK_JUSTIFY_CENTER"/>
      <constant value="gtk-justify-fill" ctype="gchar*" gtype="gchar*" name="STOCK_JUSTIFY_FILL"/>
      <constant value="gtk-justify-left" ctype="gchar*" gtype="gchar*" name="STOCK_JUSTIFY_LEFT"/>
      <constant value="gtk-justify-right" ctype="gchar*" gtype="gchar*" name="STOCK_JUSTIFY_RIGHT"/>
      <constant value="gtk-leave-fullscreen" ctype="gchar*" gtype="gchar*" name="STOCK_LEAVE_FULLSCREEN"/>
      <constant value="gtk-media-forward" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_FORWARD"/>
      <constant value="gtk-media-next" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_NEXT"/>
      <constant value="gtk-media-pause" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_PAUSE"/>
      <constant value="gtk-media-play" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_PLAY"/>
      <constant value="gtk-media-previous" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_PREVIOUS"/>
      <constant value="gtk-media-record" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_RECORD"/>
      <constant value="gtk-media-rewind" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_REWIND"/>
      <constant value="gtk-media-stop" ctype="gchar*" gtype="gchar*" name="STOCK_MEDIA_STOP"/>
      <constant value="gtk-missing-image" ctype="gchar*" gtype="gchar*" name="STOCK_MISSING_IMAGE"/>
      <constant value="gtk-network" ctype="gchar*" gtype="gchar*" name="STOCK_NETWORK"/>
      <constant value="gtk-new" ctype="gchar*" gtype="gchar*" name="STOCK_NEW"/>
      <constant value="gtk-no" ctype="gchar*" gtype="gchar*" name="STOCK_NO"/>
      <constant value="gtk-ok" ctype="gchar*" gtype="gchar*" name="STOCK_OK"/>
      <constant value="gtk-open" ctype="gchar*" gtype="gchar*" name="STOCK_OPEN"/>
      <constant value="gtk-orientation-landscape" ctype="gchar*" gtype="gchar*" name="STOCK_ORIENTATION_LANDSCAPE"/>
      <constant value="gtk-orientation-portrait" ctype="gchar*" gtype="gchar*" name="STOCK_ORIENTATION_PORTRAIT"/>
      <constant value="gtk-orientation-reverse-landscape" ctype="gchar*" gtype="gchar*" name="STOCK_ORIENTATION_REVERSE_LANDSCAPE"/>
      <constant value="gtk-orientation-reverse-portrait" ctype="gchar*" gtype="gchar*" name="STOCK_ORIENTATION_REVERSE_PORTRAIT"/>
      <constant value="gtk-page-setup" ctype="gchar*" gtype="gchar*" name="STOCK_PAGE_SETUP"/>
      <constant value="gtk-paste" ctype="gchar*" gtype="gchar*" name="STOCK_PASTE"/>
      <constant value="gtk-preferences" ctype="gchar*" gtype="gchar*" name="STOCK_PREFERENCES"/>
      <constant value="gtk-print" ctype="gchar*" gtype="gchar*" name="STOCK_PRINT"/>
      <constant value="gtk-print-error" ctype="gchar*" gtype="gchar*" name="STOCK_PRINT_ERROR"/>
      <constant value="gtk-print-paused" ctype="gchar*" gtype="gchar*" name="STOCK_PRINT_PAUSED"/>
      <constant value="gtk-print-preview" ctype="gchar*" gtype="gchar*" name="STOCK_PRINT_PREVIEW"/>
      <constant value="gtk-print-report" ctype="gchar*" gtype="gchar*" name="STOCK_PRINT_REPORT"/>
      <constant value="gtk-print-warning" ctype="gchar*" gtype="gchar*" name="STOCK_PRINT_WARNING"/>
      <constant value="gtk-properties" ctype="gchar*" gtype="gchar*" name="STOCK_PROPERTIES"/>
      <constant value="gtk-quit" ctype="gchar*" gtype="gchar*" name="STOCK_QUIT"/>
      <constant value="gtk-redo" ctype="gchar*" gtype="gchar*" name="STOCK_REDO"/>
      <constant value="gtk-refresh" ctype="gchar*" gtype="gchar*" name="STOCK_REFRESH"/>
      <constant value="gtk-remove" ctype="gchar*" gtype="gchar*" name="STOCK_REMOVE"/>
      <constant value="gtk-revert-to-saved" ctype="gchar*" gtype="gchar*" name="STOCK_REVERT_TO_SAVED"/>
      <constant value="gtk-save" ctype="gchar*" gtype="gchar*" name="STOCK_SAVE"/>
      <constant value="gtk-save-as" ctype="gchar*" gtype="gchar*" name="STOCK_SAVE_AS"/>
      <constant value="gtk-select-all" ctype="gchar*" gtype="gchar*" name="STOCK_SELECT_ALL"/>
      <constant value="gtk-select-color" ctype="gchar*" gtype="gchar*" name="STOCK_SELECT_COLOR"/>
      <constant value="gtk-select-font" ctype="gchar*" gtype="gchar*" name="STOCK_SELECT_FONT"/>
      <constant value="gtk-sort-ascending" ctype="gchar*" gtype="gchar*" name="STOCK_SORT_ASCENDING"/>
      <constant value="gtk-sort-descending" ctype="gchar*" gtype="gchar*" name="STOCK_SORT_DESCENDING"/>
      <constant value="gtk-spell-check" ctype="gchar*" gtype="gchar*" name="STOCK_SPELL_CHECK"/>
      <constant value="gtk-stop" ctype="gchar*" gtype="gchar*" name="STOCK_STOP"/>
      <constant value="gtk-strikethrough" ctype="gchar*" gtype="gchar*" name="STOCK_STRIKETHROUGH"/>
      <constant value="gtk-undelete" ctype="gchar*" gtype="gchar*" name="STOCK_UNDELETE"/>
      <constant value="gtk-underline" ctype="gchar*" gtype="gchar*" name="STOCK_UNDERLINE"/>
      <constant value="gtk-undo" ctype="gchar*" gtype="gchar*" name="STOCK_UNDO"/>
      <constant value="gtk-unindent" ctype="gchar*" gtype="gchar*" name="STOCK_UNINDENT"/>
      <constant value="gtk-yes" ctype="gchar*" gtype="gchar*" name="STOCK_YES"/>
      <constant value="gtk-zoom-100" ctype="gchar*" gtype="gchar*" name="STOCK_ZOOM_100"/>
      <constant value="gtk-zoom-fit" ctype="gchar*" gtype="gchar*" name="STOCK_ZOOM_FIT"/>
      <constant value="gtk-zoom-in" ctype="gchar*" gtype="gchar*" name="STOCK_ZOOM_IN"/>
      <constant value="gtk-zoom-out" ctype="gchar*" gtype="gchar*" name="STOCK_ZOOM_OUT"/>
      <constant value="accelerator" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_ACCELERATOR"/>
      <constant value="arrow" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_ARROW"/>
      <constant value="background" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_BACKGROUND"/>
      <constant value="bottom" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_BOTTOM"/>
      <constant value="button" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_BUTTON"/>
      <constant value="calendar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_CALENDAR"/>
      <constant value="cell" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_CELL"/>
      <constant value="check" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_CHECK"/>
      <constant value="combobox-entry" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_COMBOBOX_ENTRY"/>
      <constant value="cursor-handle" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_CURSOR_HANDLE"/>
      <constant value="default" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_DEFAULT"/>
      <constant value="dim-label" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_DIM_LABEL"/>
      <constant value="dnd" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_DND"/>
      <constant value="dock" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_DOCK"/>
      <constant value="entry" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_ENTRY"/>
      <constant value="error" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_ERROR"/>
      <constant value="expander" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_EXPANDER"/>
      <constant value="frame" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_FRAME"/>
      <constant value="grip" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_GRIP"/>
      <constant value="header" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_HEADER"/>
      <constant value="highlight" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_HIGHLIGHT"/>
      <constant value="horizontal" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_HORIZONTAL"/>
      <constant value="image" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_IMAGE"/>
      <constant value="info" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_INFO"/>
      <constant value="inline-toolbar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_INLINE_TOOLBAR"/>
      <constant value="insertion-cursor" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_INSERTION_CURSOR"/>
      <constant value="left" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_LEFT"/>
      <constant value="level-bar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_LEVEL_BAR"/>
      <constant value="linked" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_LINKED"/>
      <constant value="mark" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_MARK"/>
      <constant value="menu" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_MENU"/>
      <constant value="menubar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_MENUBAR"/>
      <constant value="menuitem" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_MENUITEM"/>
      <constant value="notebook" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_NOTEBOOK"/>
      <constant value="osd" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_OSD"/>
      <constant value="pane-separator" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_PANE_SEPARATOR"/>
      <constant value="primary-toolbar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_PRIMARY_TOOLBAR"/>
      <constant value="progressbar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_PROGRESSBAR"/>
      <constant value="pulse" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_PULSE"/>
      <constant value="question" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_QUESTION"/>
      <constant value="radio" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_RADIO"/>
      <constant value="raised" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_RAISED"/>
      <constant value="right" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_RIGHT"/>
      <constant value="rubberband" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_RUBBERBAND"/>
      <constant value="scale" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SCALE"/>
      <constant value="scale-has-marks-above" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SCALE_HAS_MARKS_ABOVE"/>
      <constant value="scale-has-marks-below" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SCALE_HAS_MARKS_BELOW"/>
      <constant value="scrollbar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SCROLLBAR"/>
      <constant value="scrollbars-junction" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SCROLLBARS_JUNCTION"/>
      <constant value="separator" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SEPARATOR"/>
      <constant value="sidebar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SIDEBAR"/>
      <constant value="slider" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SLIDER"/>
      <constant value="spinbutton" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SPINBUTTON"/>
      <constant value="spinner" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_SPINNER"/>
      <constant value="toolbar" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_TOOLBAR"/>
      <constant value="tooltip" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_TOOLTIP"/>
      <constant value="top" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_TOP"/>
      <constant value="trough" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_TROUGH"/>
      <constant value="vertical" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_VERTICAL"/>
      <constant value="view" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_VIEW"/>
      <constant value="warning" ctype="gchar*" gtype="gchar*" name="STYLE_CLASS_WARNING"/>
      <constant value="background-color" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_BACKGROUND_COLOR"/>
      <constant value="background-image" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_BACKGROUND_IMAGE"/>
      <constant value="border-color" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_BORDER_COLOR"/>
      <constant value="border-radius" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_BORDER_RADIUS"/>
      <constant value="border-style" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_BORDER_STYLE"/>
      <constant value="border-width" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_BORDER_WIDTH"/>
      <constant value="color" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_COLOR"/>
      <constant value="font" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_FONT"/>
      <constant value="margin" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_MARGIN"/>
      <constant value="padding" ctype="gchar*" gtype="gchar*" name="STYLE_PROPERTY_PADDING"/>
      <constant value="600" ctype="gint" gtype="gint" name="STYLE_PROVIDER_PRIORITY_APPLICATION"/>
      <constant value="1" ctype="gint" gtype="gint" name="STYLE_PROVIDER_PRIORITY_FALLBACK"/>
      <constant value="400" ctype="gint" gtype="gint" name="STYLE_PROVIDER_PRIORITY_SETTINGS"/>
      <constant value="200" ctype="gint" gtype="gint" name="STYLE_PROVIDER_PRIORITY_THEME"/>
      <constant value="800" ctype="gint" gtype="gint" name="STYLE_PROVIDER_PRIORITY_USER"/>
      <constant value="column" ctype="gchar*" gtype="gchar*" name="STYLE_REGION_COLUMN"/>
      <constant value="column-header" ctype="gchar*" gtype="gchar*" name="STYLE_REGION_COLUMN_HEADER"/>
      <constant value="row" ctype="gchar*" gtype="gchar*" name="STYLE_REGION_ROW"/>
      <constant value="tab" ctype="gchar*" gtype="gchar*" name="STYLE_REGION_TAB"/>
      <constant value="5" ctype="gint" gtype="gint" name="TEXT_VIEW_PRIORITY_VALIDATE"/>
    </object>
  </namespace>
</api>
